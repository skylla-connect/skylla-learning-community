{"version":3,"sources":["App/screens/resetPassword/index.js","App/screens/login/index.js","unauthenticated-app.js"],"names":["INITIAL_STATE","email","error","isPending","PasswordForgetFormBase","props","onSubmit","event","state","setState","firebase","doPasswordReset","then","catch","preventDefault","onChange","target","name","value","this","isInvalid","css","display","flexDirection","alignItems","width","label","variant","type","id","placeholder","paddingTop","color","disabled","text","fontSize","message","Component","PasswordForgetLink","to","ROUTES","PasswordForgetPage","position","height","marginBottom","fontFamily","PasswordForgetForm","padding","paddingLeft","withFirebase","password","SignInFormBase","doSignInWithEmailAndPassword","history","push","SignInForm","compose","withRouter","SignInPage","justifyContent","marginTop","Routes","Unathenticated","path","component","SignUpPage","PasswordReset","Client"],"mappings":"wTAyDMA,EAAgB,CACtBC,MAAO,GACPC,MAAO,KACPC,WAAW,GAELC,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAGVC,SAAW,SAAAC,GAAU,IACTN,EAAU,EAAKO,MAAfP,MACR,EAAKQ,SAAS,CAACN,WAAW,IAC1B,EAAKE,MAAMK,SACVC,gBAAgBV,GAChBW,MAAK,WACF,EAAKH,SAAL,eAAmBT,OAEtBa,OAAM,SAAAX,GACH,EAAKO,SAAS,CAAEP,QAAOC,WAAW,OAEtCI,EAAMO,kBAfS,EAiBnBC,SAAW,SAAAR,GACP,EAAKE,SAAL,eAAiBF,EAAMS,OAAOC,KAAOV,EAAMS,OAAOE,SAhBlD,EAAKV,MAAL,eAAkBR,GAFH,E,qDAoBT,IAAD,EACoBmB,KAAKX,MAAtBP,EADH,EACGA,MAAOC,EADV,EACUA,MACTkB,EAAsB,KAAVnB,EAClB,OACI,oBAAMK,SAAUa,KAAKb,SACrBe,IAAK,CACDC,QAAS,OACTC,cAAe,SACfC,WAAY,UACZC,MAAO,UAER,YAAC,IAAD,KAEH,YAAC,IAAD,CACIC,MAAM,iBACNC,QAAQ,WACRC,KAAK,QACLC,GAAG,QACHZ,KAAK,QACLC,MAAOjB,EACP6B,YAAY,2BACZf,SAAUI,KAAKJ,YAGnB,YAAC,IAAD,CAAWM,IAAK,CACZU,WAAY,SAEZ,YAAC,IAAD,CACIJ,QAAQ,YACRK,MAAM,UACNJ,KAAK,SACLK,SAAUb,EACVjB,UAAWgB,KAAKX,MAAML,UACtB+B,KAAK,UAGRhC,GAAS,iBAAGmB,IAAK,CAClBW,MAAO,MACPG,SAAU,OACVJ,WAAY,SAAU7B,EAAMkC,c,GA5DPC,aAiE/BC,EAAqB,kBACvB,iBAAGjB,IAAK,CAACc,SAAU,SACf,YAAC,IAAD,CAAMI,GAAIC,KAAV,sBAGOC,EAtHY,kBACvB,mBAAKpB,IAAK,CACNC,QAAS,OACTC,cAAe,QAEf,YAAC,IAAD,MACA,mBAAKF,IAAK,CACNI,MAAO,MACPiB,SAAU,WACVC,OAAQ,UAER,YAAC,IAAD,KACI,mBAAKtB,IAAK,CACNuB,aAAc,SAEd,mBAAKvB,IAAK,CACNI,MAAO,UAEP,kBAAIJ,IAAK,CACLwB,WAAY,iBACZV,SAAU,SAFd,qBAIA,iBAAGd,IAAK,CAACc,SAAU,SAAnB,0EAGJ,YAACW,EAAD,MAEA,iBAAGzB,IAAK,CACJc,SAAU,OACVY,QAAS,kBAFb,mBAKI,oBAAM1B,IAAK,CAAC2B,YAAa,SACrB,YAAC,IAAD,CAAMT,GAAIC,KAAV,aAIR,YAAC,IAAD,WAkFdM,EAAqBG,YAAa7C,GC9ElCJ,EAAgB,CAClBC,MAAO,GACPiD,SAAU,GACV/C,WAAW,EACXD,MAAO,MAELiD,E,kDACF,WAAY9C,GAAQ,IAAD,8BACf,cAAMA,IAGVC,SAAW,SAAAC,GACP,EAAKE,SAAS,CAACN,WAAW,IADV,MAEY,EAAKK,MAAzBP,EAFQ,EAERA,MAAOiD,EAFC,EAEDA,SACf,EAAK7C,MAAMK,SACV0C,6BAA6BnD,EAAOiD,GACpCtC,MAAK,WACF,EAAKH,SAAL,eAAmBT,IACnB,EAAKK,MAAMgD,QAAQC,KAAKd,QAE3B3B,OAAM,SAAAX,GACH,EAAKO,SAAS,CAAEP,QAAOC,WAAW,OAEtCI,EAAMO,kBAhBS,EAkBnBC,SAAW,SAAAR,GACP,EAAKE,SAAL,eAAiBF,EAAMS,OAAOC,KAAOV,EAAMS,OAAOE,SAjBlD,EAAKV,MAAL,eAAkBR,GAFH,E,qDAqBT,IAAD,EACyCmB,KAAKX,MAA3CP,EADH,EACGA,MAAOiD,EADV,EACUA,SAAUhD,EADpB,EACoBA,MAAOC,EAD3B,EAC2BA,UAC1BiB,EAAyB,KAAb8B,GAA6B,KAAVjD,EACrC,OACI,oBAAMK,SAAUa,KAAKb,SACjBe,IAAK,CACDC,QAAS,OACTC,cAAe,SACfC,WAAY,UACZC,MAAO,UAEf,YAAC,IAAD,KACI,YAAC,IAAD,CACIC,MAAM,iBACNC,QAAQ,WACRC,KAAK,QACLC,GAAG,QACHZ,KAAK,QACLC,MAAOjB,EACPc,SAAUI,KAAKJ,YAGvB,YAAC,IAAD,CAAWM,IAAK,CACZU,WAAY,SAEZ,YAAC,IAAD,CACIL,MAAM,WACNG,GAAG,WACHZ,KAAK,WACLC,MAAOgC,EACPvB,QAAQ,WACRC,KAAK,WACLb,SAAUI,KAAKJ,YAGvB,YAAC,IAAD,CAAWM,IAAK,CACZU,WAAY,SAEZ,YAAC,IAAD,CACIJ,QAAQ,YACRK,MAAM,UACNJ,KAAK,SACLK,SAAUb,EACVjB,UAAWA,EACX+B,KAAK,WAGZhC,GAAS,iBAAGmB,IAAK,CACdW,MAAO,MACPG,SAAU,OACVJ,WAAY,SAAU7B,EAAMkC,c,GAxEfC,aA6EvBkB,EAAaC,YACXC,IACAR,IAFWO,CAGTL,GACKO,EA3HI,kBACf,mBAAKrC,IAAK,CACNC,QAAS,OACTC,cAAe,QAEf,YAAC,IAAD,MACA,mBAAKF,IAAK,CACNI,MAAO,MACPiB,SAAU,WACVC,OAAQ,UAER,YAAC,IAAD,KACI,mBAAKtB,IAAK,CACNuB,aAAc,SAEd,YAAC,IAAD,MACA,YAACW,EAAD,MACA,mBAAKlC,IAAK,CACNC,QAAS,OACTC,cAAe,MACfoC,eAAgB,gBAChBC,UAAW,OACXpC,WAAY,WAEZ,YAAC,EAAD,MACA,YAAC,IAAD,CAAMe,GAAG,IAAIlB,IAAK,CAACc,SAAU,OAAQH,MAAO,UAA5C,SAIJ,YAAC,IAAD,W,SC/BP6B,GAFEC,UALQ,WACnB,OACI,kBAAC,EAAD,OAKc,WAClB,OACQ,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAMvB,IAAgBwB,UAAWN,IACxC,kBAAC,IAAD,CAAOK,KAAMvB,IAAgBwB,UAAWC,MACxC,kBAAC,IAAD,CAAOF,KAAMvB,IAAuBwB,UAAWE,IAC/C,kBAAC,IAAD,CAAOH,KAAK,YAAYC,UAAWG,MACnC,kBAAC,IAAD,CAAU5B,GAAIC","file":"static/js/7.bc694edf.chunk.js","sourcesContent":["/** @jsx jsx */\r\nimport {jsx} from '@emotion/core'\r\n\r\nimport { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { withFirebase } from '../../firebase';\r\nimport * as ROUTES from '../../config/routes';\r\nimport { Centered, FormGroup } from '../../components';\r\nimport { Footer } from '../components/footer';\r\nimport SideBanner from '../components/sidebar';\r\n// import * as colors from \"../../styles/colors\";\r\nimport TextFieldMui from '../components/textField';\r\nimport ButtonMui from '../components/button';\r\n\r\nconst PasswordForgetPage = () => (\r\n    <div css={{\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n    }}>\r\n        <SideBanner/>\r\n        <div css={{\r\n            width: '70%',\r\n            position: 'relative',\r\n            height: '100vh',\r\n           }}>\r\n            <Centered>\r\n                <div css={{\r\n                    marginBottom: '60px',\r\n                }}>\r\n                    <div css={{\r\n                        width: '350px',\r\n                    }}>\r\n                        <h6 css={{\r\n                            fontFamily: 'Helvetica-Bold',\r\n                            fontSize: '16px',\r\n                        }}>Password Recovery</h6>\r\n                        <p css={{fontSize: '15px'}}>To get a reset link enter the email \r\n                            address you added to your account</p>\r\n                    </div>\r\n                    <PasswordForgetForm />\r\n\r\n                    <p css={{\r\n                        fontSize: '15px',\r\n                        padding: '30px 0 20px 0',\r\n                        }}>\r\n                        Click to go back\r\n                        <span css={{paddingLeft: '18px'}}>\r\n                            <Link to={ROUTES.SIGN_IN}>Sign In</Link>\r\n                        </span>\r\n                    </p>\r\n                    \r\n                    <Footer/>\r\n                </div> \r\n            </Centered>\r\n        </div>\r\n    </div>\r\n);\r\nconst INITIAL_STATE = {\r\nemail: '',\r\nerror: null,\r\nisPending: false,\r\n};\r\nclass PasswordForgetFormBase extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { ...INITIAL_STATE };\r\n    }\r\n    onSubmit = event => {\r\n        const { email } = this.state;\r\n        this.setState({isPending: true});\r\n        this.props.firebase\r\n        .doPasswordReset(email)\r\n        .then(() => {\r\n            this.setState({ ...INITIAL_STATE });\r\n        })\r\n        .catch(error => {\r\n            this.setState({ error, isPending: false });\r\n        });\r\n        event.preventDefault();\r\n    };\r\n    onChange = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n    render() {\r\n        const { email, error } = this.state;\r\n        const isInvalid = email === '';\r\n        return (\r\n            <form onSubmit={this.onSubmit}\r\n            css={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'stretch',\r\n                width: '350px',\r\n            }}>\r\n               <FormGroup>\r\n               \r\n            <TextFieldMui \r\n                label=\"E-mail Address\"\r\n                variant=\"outlined\"\r\n                type=\"email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                value={email}\r\n                placeholder=\"Enter your email address\"\r\n                onChange={this.onChange}\r\n                />\r\n            </FormGroup>\r\n            <FormGroup css={{\r\n                paddingTop: '25px'\r\n            }}>\r\n                <ButtonMui \r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    disabled={isInvalid}\r\n                    isPending={this.state.isPending}\r\n                    text=\"send\"\r\n                    />\r\n            </FormGroup>\r\n                {error && <p css={{\r\n                color: 'red', \r\n                fontSize: '14px',\r\n                paddingTop: '15px'}}>{error.message}</p>}\r\n            </form>\r\n        );\r\n    }\r\n}\r\nconst PasswordForgetLink = () => (\r\n    <p css={{fontSize: '14px'}}>\r\n        <Link to={ROUTES.PASSWORD_RESET}>Forgot Password?</Link>\r\n    </p>\r\n);\r\nexport default PasswordForgetPage;\r\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\r\nexport { PasswordForgetForm, PasswordForgetLink };","/** @jsx jsx */\r\nimport {jsx} from '@emotion/core'\r\n\r\n\r\nimport { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\nimport { SignUpLink } from '../signup';\r\nimport { withFirebase } from '../../firebase';\r\nimport * as ROUTES from '../../config/routes';\r\n// import * as colors from \"../../styles/colors\";\r\nimport { Centered, FormGroup } from '../../components';\r\nimport SideBanner from '../components/sidebar';\r\nimport { PasswordForgetLink } from '../resetPassword';\r\nimport {Footer} from \"../components/footer\";\r\nimport TextFieldMui from '../components/textField';\r\nimport ButtonMui from '../components/button';\r\n\r\n\r\nconst SignInPage = () => (\r\n    <div css={{\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n    }}>\r\n        <SideBanner/>\r\n        <div css={{\r\n            width: '70%',\r\n            position: 'relative',\r\n            height: '100vh',\r\n           }}>\r\n            <Centered>\r\n                <div css={{\r\n                    marginBottom: '60px',\r\n                }}>\r\n                    <SignUpLink />\r\n                    <SignInForm />\r\n                    <div css={{\r\n                        display: 'flex',\r\n                        flexDirection: 'row',\r\n                        justifyContent: 'space-between',\r\n                        marginTop: '30px',\r\n                        alignItems: 'center',\r\n                    }}>\r\n                        <PasswordForgetLink />\r\n                        <Link to=\"#\" css={{fontSize: '14px', color: 'black'}}>\r\n                            FAQs\r\n                        </Link>\r\n                    </div>\r\n                    <Footer/>\r\n                </div> \r\n            </Centered>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n    email: '',\r\n    password: '',\r\n    isPending: false,\r\n    error: null,\r\n};\r\nclass SignInFormBase extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { ...INITIAL_STATE };\r\n    }\r\n    onSubmit = event => {\r\n        this.setState({isPending: true})\r\n        const { email, password } = this.state;\r\n        this.props.firebase\r\n        .doSignInWithEmailAndPassword(email, password)\r\n        .then(() => {\r\n            this.setState({ ...INITIAL_STATE });\r\n            this.props.history.push(ROUTES.ADMIN);\r\n        })\r\n        .catch(error => {\r\n            this.setState({ error, isPending: false });\r\n        });\r\n        event.preventDefault();\r\n    };\r\n    onChange = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n    render() {\r\n        const { email, password, error, isPending } = this.state;\r\n        const isInvalid = password === '' || email === '';\r\n        return (\r\n            <form onSubmit={this.onSubmit} \r\n                css={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'stretch',\r\n                    width: '350px',\r\n                }}>\r\n            <FormGroup>\r\n                <TextFieldMui \r\n                    label=\"E-mail Address\"\r\n                    variant=\"outlined\"\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                />\r\n            </FormGroup>\r\n            <FormGroup css={{\r\n                paddingTop: '25px',\r\n            }}>\r\n                <TextFieldMui \r\n                    label=\"Password\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    value={password}\r\n                    variant=\"outlined\"\r\n                    type=\"password\"\r\n                    onChange={this.onChange}\r\n                />\r\n            </FormGroup>\r\n            <FormGroup css={{\r\n                paddingTop: '25px',\r\n                }}>\r\n                <ButtonMui \r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    disabled={isInvalid}\r\n                    isPending={isPending}\r\n                    text=\"login\"\r\n                />\r\n            </FormGroup>\r\n            {error && <p css={{\r\n                color: 'red', \r\n                fontSize: '14px',\r\n                paddingTop: '15px'}}>{error.message}</p>}\r\n            </form>\r\n        );\r\n    }\r\n}\r\nconst SignInForm = compose(\r\n        withRouter,\r\n        withFirebase,\r\n        )(SignInFormBase);\r\nexport default SignInPage;\r\nexport { SignInForm };","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect} from 'react-router-dom';\r\n\r\nimport * as ROUTES from \"./App/config/routes\";\r\nimport {SignUpPage} from './App/screens/signup/index';\r\nimport SignInPage from './App/screens/login/index';\r\nimport PasswordReset from './App/screens/resetPassword/index';\r\nimport  Client  from './App/screens/chat/client'\r\n\r\n\r\nconst Unathenticated = () => {\r\n    return ( \r\n        <Routes />\r\n     );\r\n} \r\nexport default Unathenticated;\r\n\r\nexport const Routes = () => {\r\n    return (\r\n            <Router>\r\n                <Switch>\r\n                    <Route path={ROUTES.SIGN_IN} component={SignInPage} />\r\n                    <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\r\n                    <Route path={ROUTES.PASSWORD_RESET} component={PasswordReset} />\r\n                    <Route path=\"/livechat\" component={Client} />\r\n                    <Redirect to={ROUTES.SIGN_IN} />\r\n                </Switch>\r\n            </Router>\r\n)\r\n    }"],"sourceRoot":""}