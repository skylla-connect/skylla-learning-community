[{"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\index.js":"1","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App.js":"2","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\bootstrap.js":"3","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\serviceWorker.js":"4","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\components.js":"5","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\authenticated-app.js":"6","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\unauthenticated-app.js":"7","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\session\\context.js":"8","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\session\\withAuthetication.js":"9","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\login\\index.js":"10","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\signup\\index.js":"11","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\resetPassword\\index.js":"12","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\config\\routes.js":"13","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\components\\sidebar.js":"14","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\components\\footer.js":"15","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\components\\textField.js":"16","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\components\\button.js":"17","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\styles\\colors.js":"18","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\index.js":"19","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\index.js":"20","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\session\\withAuthorization.js":"21","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\index.js":"22","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\screens\\addUsers.js":"23","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\mob.js":"24","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\mob.js":"25","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\mob.js":"26","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\permissions.js":"27","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\menu.js":"28","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\views\\views.js":"29","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\components\\permissions.js":"30","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\components\\menu.js":"31","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\components\\moduleContent.js":"32","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\components\\social.js":"33","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\components\\menu.js":"34","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\components\\views\\views.js":"35","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\components\\Footer\\footer.js":"36","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\components\\views\\views.js":"37","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\components\\mobMenu.js":"38","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\firebase.js":"39","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\screens\\profilePage.js":"40","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\screens\\deleteUsers.js":"41","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\screens\\profilePage.js":"42","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\screens\\createModule.js":"43","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\screens\\liveClass.js":"44","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\screens\\profilePage.js":"45","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\components\\loader.js":"46","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\loader.js":"47","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\components\\loader.js":"48","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\screens\\shared\\Menu\\Menu.js":"49","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\LiveSupport\\index.js":"50","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\LiveSupport\\LiveSupport2\\index.js":"51","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\cart\\components\\CartSucess\\index.js":"52","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\cart\\index.js":"53","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\LiveSupport\\Tabs.js":"54","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\LiveSupport\\MenuLive.js":"55","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\session\\order-context.js":"56","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\cart\\imodules.js":"57","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\components\\navbar-checkout.js":"58","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\styles\\media-queries.js":"59","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\cart\\discover.js":"60","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\session\\checkout-context.js":"61","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\checkout\\index.js":"62","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\productDetails\\index.js":"63","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\cart\\components\\order-item-list.js":"64","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\utils\\use-callback-status.js":"65","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\cart\\sandbox.js":"66","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\cart\\components\\ModuleRow.js":"67","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\screens\\assignment\\index.js":"68","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\screens\\schedule.js":"69","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\views\\charts.js":"70","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\card\\CardHeader.js":"71","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\card\\CardBody.js":"72","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\card\\Card.js":"73","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\card\\CardFooter.js":"74","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\card\\CardIcon.js":"75","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\styles\\jss\\cardBodyStyle.js":"76","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\styles\\jss\\cardFooterStyle.js":"77","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\styles\\jss\\materialReact.js":"78","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\styles\\jss\\cardStyle.js":"79","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\styles\\jss\\cardHeaderStyle.js":"80","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\styles\\jss\\cardIconStyle.js":"81"},{"size":689,"mtime":1607515155130,"results":"82","hashOfConfig":"83"},{"size":1393,"mtime":1607602983792,"results":"84","hashOfConfig":"83"},{"size":73,"mtime":1604246379040,"results":"85","hashOfConfig":"83"},{"size":5086,"mtime":499162500000,"results":"86","hashOfConfig":"83"},{"size":1000,"mtime":1607602984079,"results":"87","hashOfConfig":"83"},{"size":2963,"mtime":1607602984174,"results":"88","hashOfConfig":"83"},{"size":925,"mtime":1607602984183,"results":"89","hashOfConfig":"83"},{"size":119,"mtime":1607602984157,"results":"90","hashOfConfig":"83"},{"size":1007,"mtime":1607602984161,"results":"91","hashOfConfig":"83"},{"size":4603,"mtime":1607602984147,"results":"92","hashOfConfig":"83"},{"size":7661,"mtime":1607602984154,"results":"93","hashOfConfig":"83"},{"size":4421,"mtime":1607602984151,"results":"94","hashOfConfig":"83"},{"size":648,"mtime":1607602984082,"results":"95","hashOfConfig":"83"},{"size":1215,"mtime":1607602984088,"results":"96","hashOfConfig":"83"},{"size":666,"mtime":1607602984085,"results":"97","hashOfConfig":"83"},{"size":2448,"mtime":1607602984143,"results":"98","hashOfConfig":"83"},{"size":668,"mtime":1607067919011,"results":"99","hashOfConfig":"83"},{"size":288,"mtime":1607602984170,"results":"100","hashOfConfig":"83"},{"size":8182,"mtime":1607602983823,"results":"101","hashOfConfig":"83"},{"size":8292,"mtime":1607602983975,"results":"102","hashOfConfig":"83"},{"size":2566,"mtime":1607602984166,"results":"103","hashOfConfig":"83"},{"size":11463,"mtime":1607602983947,"results":"104","hashOfConfig":"83"},{"size":5826,"mtime":1607602983830,"results":"105","hashOfConfig":"83"},{"size":5333,"mtime":1607067918892,"results":"106","hashOfConfig":"83"},{"size":5234,"mtime":1606929097657,"results":"107","hashOfConfig":"83"},{"size":5657,"mtime":1606929097827,"results":"108","hashOfConfig":"83"},{"size":2181,"mtime":1607602983817,"results":"109","hashOfConfig":"83"},{"size":2861,"mtime":1607517244769,"results":"110","hashOfConfig":"83"},{"size":7677,"mtime":1607623695395,"results":"111","hashOfConfig":"83"},{"size":2284,"mtime":1607602983956,"results":"112","hashOfConfig":"83"},{"size":1912,"mtime":1607592122997,"results":"113","hashOfConfig":"83"},{"size":671,"mtime":1607602983936,"results":"114","hashOfConfig":"83"},{"size":3284,"mtime":1607602983940,"results":"115","hashOfConfig":"83"},{"size":3623,"mtime":1607602983931,"results":"116","hashOfConfig":"83"},{"size":4605,"mtime":1607620567536,"results":"117","hashOfConfig":"83"},{"size":721,"mtime":1607517244751,"results":"118","hashOfConfig":"83"},{"size":3153,"mtime":1607517244830,"results":"119","hashOfConfig":"83"},{"size":4218,"mtime":1607602983934,"results":"120","hashOfConfig":"83"},{"size":3513,"mtime":1607602983807,"results":"121","hashOfConfig":"83"},{"size":16468,"mtime":1607517244886,"results":"122","hashOfConfig":"83"},{"size":5161,"mtime":1607602983896,"results":"123","hashOfConfig":"83"},{"size":16051,"mtime":1607517244946,"results":"124","hashOfConfig":"83"},{"size":7019,"mtime":1607602983892,"results":"125","hashOfConfig":"83"},{"size":3871,"mtime":1607602983951,"results":"126","hashOfConfig":"83"},{"size":16447,"mtime":1607517244838,"results":"127","hashOfConfig":"83"},{"size":581,"mtime":1607517244814,"results":"128","hashOfConfig":"83"},{"size":581,"mtime":1607517244942,"results":"129","hashOfConfig":"83"},{"size":581,"mtime":1607517244842,"results":"130","hashOfConfig":"83"},{"size":632,"mtime":1607517244841,"results":"131","hashOfConfig":"83"},{"size":333,"mtime":1607602983927,"results":"132","hashOfConfig":"83"},{"size":4545,"mtime":1607602983909,"results":"133","hashOfConfig":"83"},{"size":3707,"mtime":1607602983999,"results":"134","hashOfConfig":"83"},{"size":3278,"mtime":1607602984052,"results":"135","hashOfConfig":"83"},{"size":12714,"mtime":1607602983920,"results":"136","hashOfConfig":"83"},{"size":1412,"mtime":1607602983914,"results":"137","hashOfConfig":"83"},{"size":1417,"mtime":1607602984073,"results":"138","hashOfConfig":"83"},{"size":531,"mtime":1607602984049,"results":"139","hashOfConfig":"83"},{"size":632,"mtime":1607602984066,"results":"140","hashOfConfig":"83"},{"size":176,"mtime":1607602984074,"results":"141","hashOfConfig":"83"},{"size":5403,"mtime":1607602984042,"results":"142","hashOfConfig":"83"},{"size":1467,"mtime":1607602984072,"results":"143","hashOfConfig":"83"},{"size":27485,"mtime":1607602984057,"results":"144","hashOfConfig":"83"},{"size":7640,"mtime":1607602984069,"results":"145","hashOfConfig":"83"},{"size":1966,"mtime":1607602984036,"results":"146","hashOfConfig":"83"},{"size":1365,"mtime":1607602984075,"results":"147","hashOfConfig":"83"},{"size":2743,"mtime":1607602984055,"results":"148","hashOfConfig":"83"},{"size":3350,"mtime":1607602984002,"results":"149","hashOfConfig":"83"},{"size":6700,"mtime":1607602983988,"results":"150","hashOfConfig":"83"},{"size":4972,"mtime":1607602983992,"results":"151","hashOfConfig":"83"},{"size":2928,"mtime":1607618328805,"results":"152","hashOfConfig":"83"},{"size":1216,"mtime":1607616487929,"results":"153","hashOfConfig":"83"},{"size":976,"mtime":1607616142581,"results":"154","hashOfConfig":"83"},{"size":1011,"mtime":1607616410602,"results":"155","hashOfConfig":"83"},{"size":1132,"mtime":1607616315441,"results":"156","hashOfConfig":"83"},{"size":998,"mtime":1607616494817,"results":"157","hashOfConfig":"83"},{"size":299,"mtime":1607616037153,"results":"158","hashOfConfig":"83"},{"size":1023,"mtime":1607616041163,"results":"159","hashOfConfig":"83"},{"size":7001,"mtime":1607616079984,"results":"160","hashOfConfig":"83"},{"size":779,"mtime":1607616053900,"results":"161","hashOfConfig":"83"},{"size":2940,"mtime":1607616047092,"results":"162","hashOfConfig":"83"},{"size":650,"mtime":1607620173600,"results":"163","hashOfConfig":"83"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},"i6rma6",{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"166"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"166"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"253","messages":"254","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"166"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"290","messages":"291","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"292","messages":"293","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"294","messages":"295","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\index.js",[],["330","331"],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\bootstrap.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\serviceWorker.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\components.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\authenticated-app.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\unauthenticated-app.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\session\\context.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\session\\withAuthetication.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\login\\index.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\signup\\index.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\resetPassword\\index.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\config\\routes.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\components\\sidebar.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\components\\footer.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\components\\textField.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\components\\button.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\styles\\colors.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\index.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\index.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\session\\withAuthorization.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\index.js",["332"],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\screens\\addUsers.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\mob.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\mob.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\mob.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\permissions.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\menu.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\views\\views.js",["333","334","335"],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\components\\permissions.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\components\\menu.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\components\\moduleContent.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\components\\social.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\components\\menu.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\components\\views\\views.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\components\\Footer\\footer.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\components\\views\\views.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\components\\mobMenu.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\firebase.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\screens\\profilePage.js",["336"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Typography,\r\n    Grid,\r\n    Paper,\r\n    ButtonBase,\r\n} from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport LoaderButton from \"../components/loader\";\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport FirebaseContext from 'firebase';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport TextFieldMui from \"../../components/textField\";\r\nimport 'firebase/firestore';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: 'transparent',\r\n        width: '100%',\r\n        height: 'auto',\r\n        margin: '5% 0 0 0'\r\n    },\r\n\r\n    BioData: {\r\n        padding: 20,\r\n        flexGrow: 1\r\n    },\r\n\r\n    pPic: {\r\n        width: '100%',\r\n        height: '100%',\r\n        borderRadius: '50%',\r\n    },\r\n\r\n    paper: {\r\n        padding: theme.spacing(4),\r\n        margin: 'auto auto auto 0',\r\n    },\r\n\r\n    image: {\r\n        width: 180,\r\n        height: 180,\r\n        borderRadius: 'auto',\r\n    },\r\n\r\n    input: {\r\n        display: 'none',\r\n    },\r\n\r\n    uploadButton: {\r\n        position: 'absolute',\r\n        margin: '30% 0 0 70%',\r\n        backgroundColor: '#EDEDED'\r\n    },\r\n\r\n    margin: {\r\n        margin: theme.spacing(3,7),\r\n    },\r\n\r\n    textField: {\r\n        width: '400px',\r\n        display: 'block'\r\n    },\r\n}));\r\n\r\nconst initialState = {\r\n    Oldpassword: '',\r\n    Newpassword: '',\r\n    ConfirmNewpassword: '',\r\n    showPassword: false,\r\n};\r\n\r\n\r\nexport default function ProfilePage() {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState(initialState);\r\n      const [isChanging, setIsChanging] = React.useState(false);\r\n    const [isnotChangingP, setIsnotChangingP] = React.useState(false);\r\n    const [isChangingP, setIsChangingP] = React.useState(false);\r\n        // const allInputs = {imgUrl: ''}\r\n        const [imageAsFile, setImageAsFile] = React.useState('')\r\n        const [imageAsUrl, setImageAsUrl] = React.useState({imgUrl: ''})\r\n      const [currentUserDetails, setcurrentUserDetails] = React.useState({name:'', email:'', password:'', photo: ''})\r\n      const clearState = () => {\r\n        setValues({ ...initialState });\r\n      };\r\n    //   console.log(imageAsFile)\r\n        const handleImageAsFile = (e) => {\r\n            const image = e.target.files[0]\r\n        setImageAsFile(imageFile => (image))\r\n        }\r\n\r\n        const handleFireBaseUpload = e => {\r\n            e.preventDefault()\r\n          console.log('start of upload')\r\n          // async magic goes here...\r\n          if(imageAsFile === '') {\r\n            console.error(`not an image, the image file is a ${typeof(imageAsFile)}`)\r\n          }\r\n          let userCurrent = FirebaseContext.auth().currentUser;\r\n          const uploadTask = FirebaseContext.storage().ref('users/' + userCurrent.uid + `/${imageAsFile.name}`).put(imageAsFile)\r\n          //initiates the firebase side uploading \r\n          uploadTask.on('state_changed', \r\n          (snapShot) => {\r\n            //takes a snap shot of the process as it is happening\r\n            console.log(snapShot)\r\n          }, (err) => {\r\n            //catches the errors\r\n            console.log(err)\r\n          }, () => {\r\n            // gets the functions from storage refences the image storage in firebase by the children\r\n            // gets the download url then sets the image from firebase as the value for the imgUrl key:\r\n            FirebaseContext.auth().onAuthStateChanged(user => {\r\n                if(user) {\r\n                    FirebaseContext.storage().ref('users/' + userCurrent.uid + `/${imageAsFile.name}`).getDownloadURL()\r\n                    .then(fireBaseUrl => {\r\n                    setImageAsUrl(prevObject => ({...prevObject, imgUrl: fireBaseUrl}))\r\n                    // console.log(fireBaseUrl)\r\n                    let db = FirebaseContext.firestore().collection(\"users/trainer/sys_trainers\");\r\n                    db.doc(userCurrent.uid).update({\r\n                        photo: fireBaseUrl\r\n                      });\r\n                    })\r\n                    setIsChanging(true);\r\n                }\r\n            })\r\n          })\r\n        //   window.location.reload();\r\n          }\r\n      \r\n\r\n      class userDetails {\r\n        constructor (name, email, password, photo ) {\r\n            this.name = name;\r\n            this.email = email;\r\n            this.password = password;\r\n            this.photo= photo;\r\n        }\r\n        // toString() {\r\n        //     return this.name + ', ' + this.email + ', ' + this.password;\r\n        // }\r\n    }\r\n    \r\n    // Firestore data converter\r\n    var userDetailsConverter = {\r\n        toFirestore: function(userDetails) {\r\n            return {\r\n                name: userDetails.name,\r\n                email: userDetails.email,\r\n                password: userDetails.password,\r\n                photo: userDetails.photo\r\n                }\r\n        },\r\n        fromFirestore: function(snapshot, options){\r\n            const data = snapshot.data(options);\r\n            const det1 = new userDetails(data.name, data.email, data.password, data.photo);\r\n            return det1\r\n        }\r\n    }\r\n\r\n        function validateForm() {\r\n            return (\r\n            values.Oldpassword.length > 5 &&     //more validation checks needed for the old Password\r\n            values.Newpassword.length > 5 &&\r\n            values.Newpassword === values.ConfirmNewpassword\r\n            );\r\n        }\r\n        \r\n        React.useEffect(() => {\r\n            let user1 = FirebaseContext.auth().currentUser;\r\n            // let uID = FirebaseContext.firestore().collection(\"users\").doc(user1.uid)    \r\n            let db = FirebaseContext.firestore().collection(\"users/trainer/sys_trainers\");\r\n            let query = db.where('userId', '==', user1.uid);\r\n\r\n            query.withConverter(userDetailsConverter).get()\r\n            .then(snapshot => {\r\n                if (snapshot.empty) {\r\n                console.log('No matching documents.');\r\n                return;\r\n                }  \r\n\r\n                snapshot.forEach(doc => {\r\n                    var x = doc.data();\r\n                    setcurrentUserDetails(x)\r\n                // console.log(doc.id, '=>', x);\r\n                ;\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log('Error getting documents', err);\r\n            });\r\n        }, [userDetailsConverter])\r\n\r\n        async function handleChangeClick(event) {\r\n            event.preventDefault();\r\n\r\n            const user = FirebaseContext.auth().currentUser;\r\n            let db = FirebaseContext.firestore().collection(\"users/trainer/sys_trainers\");\r\n            if(values.Oldpassword===currentUserDetails.password){\r\n                db.doc(user.uid).update({\r\n                    password: values.Newpassword\r\n                    });\r\n                    // Get auth credentials from the user for re-authentication. The example below shows\r\n                    // email and password credentials but there are multiple possible providers,\r\n                    // such as GoogleAuthProvider or FacebookAuthProvider.\r\n                    const cred = FirebaseContext.auth.EmailAuthProvider.credential(\r\n                        user.email, \r\n                        currentUserDetails.password\r\n                    );\r\n                    FirebaseContext.auth().currentUser.reauthenticateWithCredential(cred)\r\n                    .then(() => {\r\n                    // User successfully reauthenticated.\r\n                    const newPass = values.Newpassword;\r\n                    console.log('Password updated successfully!');\r\n                    setIsChangingP(true)\r\n                    return FirebaseContext.auth().currentUser.updatePassword(newPass);\r\n                    \r\n                    \r\n                    })\r\n                    .catch((error) => { \r\n                        console.log(error); \r\n                    });\r\n                    \r\n                    // alert('Password changed successfully!');\r\n                    setIsChangingP(true);\r\n                    clearState()\r\n            }else{\r\n                // alert('Oops, please check Old Password!')\r\n                setIsnotChangingP(true);\r\n            }\r\n        } \r\n\r\n\r\n        const handleChange = (prop) => (event) => {\r\n            setValues({ ...values, [prop]: event.target.value });\r\n          };\r\n    \r\n          const handleClose = (event, reason) => {\r\n            if (reason === 'clickaway') {\r\n              return;\r\n            }    \r\n                setIsChangingP(false);\r\n          };\r\n    \r\n          const closeUpload = (event, reason) => {\r\n            if (reason === 'clickaway') {\r\n              return;\r\n            }\r\n                setIsChanging(false);\r\n          };\r\n    \r\n          const handleCloseNot = (event, reason) => {\r\n            if (reason === 'clickaway') {\r\n              return;\r\n            }\r\n                setIsnotChangingP(false);\r\n          };\r\n\r\n  return (\r\n    <Paper elevation={0} className={classes.root}>\r\n        <div className={classes.paper}>\r\n            <Grid alignItems='center' justify=\"center\" container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <ButtonBase className={classes.image}>\r\n                        <form onSubmit={handleFireBaseUpload}>\r\n                            <input \r\n                                accept=\"image/*\" \r\n                                className={classes.input} \r\n                                onChange={handleImageAsFile} \r\n                                id=\"icon-button-file\" \r\n                                type=\"file\" \r\n                            />\r\n                            <label htmlFor=\"icon-button-file\">\r\n                                <IconButton \r\n                                    type=\"submit\" \r\n                                    className={classes.uploadButton} \r\n                                    color=\"primary\" \r\n                                    component=\"span\"\r\n                                >\r\n                                    <PhotoCamera />\r\n                                </IconButton>\r\n                                <LoaderButton\r\n                                    type=\"submit\"\r\n                                    disabled={!imageAsFile}\r\n                                    isLoading={isChanging}\r\n                                    style={{\r\n                                        margin: '200px 0 0 25%',\r\n                                        width:'50%',\r\n                                        position: 'absolute',\r\n                                    }}\r\n                                >\r\n                                    UPLOAD\r\n                                </LoaderButton>\r\n                                <Snackbar open={isChanging} autoHideDuration={6000} onClose={closeUpload}>\r\n                                    <Alert onClose={closeUpload} severity=\"success\">\r\n                                        Great! Photo updated successfully.\r\n                                    </Alert>\r\n                                </Snackbar>\r\n                            </label>\r\n                        </form>\r\n                        <img \r\n                            className={classes.pPic}  \r\n                            src={\r\n                                    imageAsUrl.imgUrl || \r\n                                    currentUserDetails.photo || \r\n                                    'https://www.pngitem.com/pimgs/m/442-4426913_avatar-icon-png-white-png-download-white-person.png'\r\n                                }\r\n                            alt=''\r\n                        />\r\n                    </ButtonBase>\r\n                    <Grid style={{\r\n                        margin: 20\r\n                    }}>\r\n                        <Grid alignItems='left' justify=\"left\" container spacing={2}>\r\n                            <Grid item>\r\n                                <Typography gutterBottom variant=\"h5\" align='left'>\r\n                                    {currentUserDetails.name}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" align='left' style={{ cursor: 'pointer', }}>\r\n                                    {currentUserDetails.email}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid alignItems='center' justify=\"center\" container spacing={2} xs={12} sm={6}>\r\n                    <form onSubmit={handleChangeClick}>\r\n                        <FormGroup className={clsx(classes.margin, classes.textField)} variant=\"outlined\">\r\n                            <Typography gutterBottom variant=\"h5\" align='left'>\r\n                                Change Password\r\n                            </Typography>\r\n                        </FormGroup>\r\n                        <FormGroup className={classes.margin}>\r\n                            <TextFieldMui\r\n                                style={{ width:'100%' }}\r\n                                id='Old-Password'\r\n                                type= 'password'\r\n                                value={values.Oldpassword}\r\n                                onChange={handleChange('Oldpassword')}\r\n                                label='Old Password'\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </FormGroup>\r\n                        \r\n                        <FormGroup className={classes.margin} variant=\"outlined\">\r\n                            <TextFieldMui\r\n                                style={{ width:'100%' }}\r\n                                id='New-Password'\r\n                                type= 'password'\r\n                                value={values.Newpassword}\r\n                                onChange={handleChange('Newpassword')}\r\n                                label='New Password'\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup className={classes.margin} variant=\"outlined\">\r\n                            <TextFieldMui\r\n                                style={{ width:'100%' }}\r\n                                id=' Cofirm-New-Password'\r\n                                type= 'password'\r\n                                value={values.ConfirmNewpassword}\r\n                                onChange={handleChange('ConfirmNewpassword')}\r\n                                label='Cofirm New Password'\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup className={classes.margin} variant=\"outlined\">\r\n                            <LoaderButton\r\n                                type=\"submit\"\r\n                                disabled={!validateForm()}\r\n                                isLoading={isChangingP}\r\n                                style={{\r\n                                    // marginLeft: '10%',\r\n                                    width:'100%'\r\n                                }}\r\n                            >\r\n                                Change\r\n                            </LoaderButton>\r\n                        </FormGroup>\r\n                        <Snackbar open={isChangingP} autoHideDuration={6000} onClose={handleClose}>\r\n                            <Alert onClose={handleClose} severity=\"success\">\r\n                                Great! Password changed successfully.\r\n                            </Alert>\r\n                        </Snackbar>\r\n                        <Snackbar open={isnotChangingP} autoHideDuration={6000} onClose={handleCloseNot}>\r\n                            <Alert onClose={handleCloseNot} severity=\"error\">\r\n                                Oops! Check Old Password.\r\n                            </Alert>\r\n                        </Snackbar>\r\n                    </form>\r\n                </Grid>\r\n            </Grid> \r\n        </div>\r\n    </Paper>\r\n  );\r\n}\r\n","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\screens\\deleteUsers.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\screens\\profilePage.js",["337"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Typography,\r\n    Grid,\r\n    Paper,\r\n    ButtonBase,\r\n} from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport LoaderButton from \"../components/loader\";\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport FirebaseContext from 'firebase';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport TextFieldMui from \"../../components/textField\";\r\nimport 'firebase/firestore';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: 'transparent',\r\n        width: '100%',\r\n        height: 'auto',\r\n        margin: '5% 0 0 0'\r\n    },\r\n\r\n    BioData: {\r\n        padding: 20,\r\n        flexGrow: 1\r\n    },\r\n\r\n    pPic: {\r\n        width: '100%',\r\n        height: '100%',\r\n        borderRadius: '50%',\r\n    },\r\n\r\n    paper: {\r\n        padding: theme.spacing(4),\r\n        margin: 'auto auto auto 0',\r\n    },\r\n\r\n    image: {\r\n        width: 180,\r\n        height: 180,\r\n        borderRadius: 'auto',\r\n    },\r\n\r\n    input: {\r\n        display: 'none',\r\n    },\r\n\r\n    uploadButton: {\r\n        position: 'absolute',\r\n        margin: '30% 0 0 70%',\r\n        backgroundColor: '#EDEDED'\r\n    },\r\n\r\n    margin: {\r\n        margin: theme.spacing(3,7),\r\n    },\r\n\r\n    textField: {\r\n        width: '400px',\r\n        display: 'block'\r\n    },\r\n}));\r\n\r\nconst initialState = {\r\n    Oldpassword: '',\r\n    Newpassword: '',\r\n    ConfirmNewpassword: '',\r\n    showPassword: false,\r\n};\r\n\r\n\r\nexport default function ProfilePage() {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState(initialState);\r\n    const [isChanging, setIsChanging] = React.useState(false);\r\n    const [isChangingP, setIsChangingP] = React.useState(false);\r\n    const [isnotChangingP, setIsnotChangingP] = React.useState(false);\r\n    const clearState = () => {\r\n        setValues({ ...initialState });\r\n    };\r\n    // const allInputs = {imgUrl: ''}\r\n    const [imageAsFile, setImageAsFile] = React.useState('')\r\n    const [imageAsUrl, setImageAsUrl] = React.useState({imgUrl: ''})\r\n    const [currentUserDetails, setcurrentUserDetails] = React.useState({name:'', email:'', password:'', photo: ''})\r\n      \r\n\r\n    class userDetails {\r\n        constructor (name, email, password, photo ) {\r\n            this.name = name;\r\n            this.email = email;\r\n            this.password = password;\r\n            this.photo= photo;\r\n        }\r\n    }\r\n    \r\n    // Firestore data converter\r\n    var userDetailsConverter = {\r\n        toFirestore: function(userDetails) {\r\n            return {\r\n                name: userDetails.name,\r\n                email: userDetails.email,\r\n                password: userDetails.password,\r\n                photo: userDetails.photo\r\n            }\r\n        },\r\n        fromFirestore: function(snapshot, options){\r\n            const data = snapshot.data(options);\r\n            const det1 = new userDetails(data.name, data.email, data.password, data.photo);\r\n            return det1\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        let user1 = FirebaseContext.auth().currentUser; \r\n        let db = FirebaseContext.firestore().collection(\"users/admin/users\");\r\n        let query = db.where('uid', '==', user1.uid);\r\n\r\n        query.withConverter(userDetailsConverter).get()\r\n        .then(snapshot => {\r\n            if (snapshot.empty) {\r\n            console.log('No matching documents.');\r\n            return;\r\n            }  \r\n\r\n            snapshot.forEach(doc => {\r\n                var x = doc.data();\r\n                setcurrentUserDetails(x)\r\n            // console.log(doc.id, '=>', x);\r\n            ;\r\n            })\r\n        })\r\n        .catch(err => {\r\n            console.log('Error getting documents', err);\r\n        });\r\n    }, [userDetailsConverter])\r\n\r\n    //   console.log('Image as a file:' + imageAsFile)\r\n        const handleImageAsFile = (e) => {\r\n            const image = e.target.files[0]\r\n        setImageAsFile(imageFile => (image))\r\n        }\r\n\r\n        const handleFireBaseUpload = e => {\r\n            e.preventDefault()\r\n          console.log('start of upload')\r\n          // async magic goes here...\r\n          if(imageAsFile === '') {\r\n            console.error(`not an image, the image file is a ${typeof(imageAsFile)}`)\r\n          }\r\n          let userCurrent = FirebaseContext.auth().currentUser;\r\n          const uploadTask = FirebaseContext.storage().ref('users/' + userCurrent.uid + `/${imageAsFile.name}`).put(imageAsFile)\r\n          //initiates the firebase side uploading \r\n          uploadTask.on('state_changed', \r\n          (snapShot) => {\r\n            //takes a snap shot of the process as it is happening\r\n            console.log(snapShot)\r\n          }, (err) => {\r\n            //catches the errors\r\n            console.log(err)\r\n          }, () => {\r\n            // gets the functions from storage refences the image storage in firebase by the children\r\n            // gets the download url then sets the image from firebase as the value for the imgUrl key:\r\n            FirebaseContext.auth().onAuthStateChanged(user => {\r\n                if(user) {\r\n                    FirebaseContext.storage().ref('users/' + userCurrent.uid + `/${imageAsFile.name}`).getDownloadURL()\r\n                    .then(fireBaseUrl => {\r\n                    setImageAsUrl(prevObject => ({...prevObject, imgUrl: fireBaseUrl}))\r\n                    console.log(imageAsUrl)\r\n                    let db = FirebaseContext.firestore().collection(\"users/admin/users\");\r\n                    db.doc(userCurrent.uid).update({\r\n                        photo: fireBaseUrl\r\n                      });\r\n                      \r\n                    })\r\n                    setIsChanging(true);\r\n                }\r\n            })\r\n          })\r\n            // alert('Image updated successfully! Please refresh page')\r\n          }\r\n      \r\n        function validateForm() {\r\n            return (\r\n            values.Oldpassword.length > 5 &&     \r\n            //more validation checks needed for the old Password\r\n            values.Newpassword.length > 5 &&\r\n            values.Newpassword === values.ConfirmNewpassword\r\n            );\r\n        }\r\n        \r\n\r\n        async function handleChangeClick(event) {\r\n            event.preventDefault();\r\n            const user = FirebaseContext.auth().currentUser;\r\n            let db = FirebaseContext.firestore().collection(\"users/admin/users\");\r\n            if(values.Oldpassword===currentUserDetails.password){\r\n                db.doc(user.uid).update({\r\n                    password: values.Newpassword\r\n                });\r\n                // Get auth credentials from the user for re-authentication. The example below shows\r\n                // email and password credentials but there are multiple possible providers,\r\n                // such as GoogleAuthProvider or FacebookAuthProvider.\r\n                const cred = FirebaseContext.auth.EmailAuthProvider.credential(\r\n                    user.email, \r\n                    currentUserDetails.password\r\n                );\r\n                FirebaseContext.auth().currentUser.reauthenticateWithCredential(cred)\r\n                .then(() => {\r\n                    // User successfully reauthenticated.\r\n                    const newPass = values.Newpassword;\r\n                    console.log('Password updated successfully!');\r\n                    setIsChangingP(true)\r\n                    return FirebaseContext.auth().currentUser.updatePassword(newPass);\r\n                })\r\n                .catch((error) => { \r\n                    console.log(error); \r\n                });\r\n                \r\n                // alert('Password changed successfully!');\r\n                setIsChangingP(true);\r\n                clearState()\r\n                // setIsChangingP(false);\r\n\r\n            }else{\r\n                // alert('Oops, please check Old Password!');\r\n                setIsnotChangingP(true);\r\n            }\r\n        }\r\n    \r\n      const handleChange = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n      };\r\n\r\n      const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }    \r\n            setIsChangingP(false);\r\n      };\r\n\r\n      const closeUpload = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n            setIsChanging(false);\r\n      };\r\n\r\n      const handleCloseNot = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n            setIsnotChangingP(false);\r\n      };\r\n\r\n  return (\r\n    <Paper elevation={0} className={classes.root}>\r\n        <div className={classes.paper}>\r\n            <Grid alignItems='center' justify=\"center\" container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <ButtonBase className={classes.image}>\r\n                        <form onSubmit={handleFireBaseUpload}>\r\n                            <input \r\n                                accept=\"image/*\" \r\n                                className={classes.input} \r\n                                onChange={handleImageAsFile} \r\n                                id=\"icon-button-file\" \r\n                                type=\"file\" \r\n                            />\r\n                            <label htmlFor=\"icon-button-file\">\r\n                                <IconButton \r\n                                    type=\"submit\" \r\n                                    className={classes.uploadButton} \r\n                                    color=\"primary\" \r\n                                    component=\"span\"\r\n                                >\r\n                                    <PhotoCamera />\r\n                                </IconButton>\r\n                                <LoaderButton\r\n                                    type=\"submit\"\r\n                                    disabled={!imageAsFile}\r\n                                    isLoading={isChanging}\r\n                                    style={{\r\n                                        margin: '200px 0 0 25%',\r\n                                        width:'50%',\r\n                                        position: 'absolute',\r\n                                    }}\r\n                                >\r\n                                    UPLOAD\r\n                                </LoaderButton>\r\n                                <Snackbar open={isChanging} autoHideDuration={6000} onClose={closeUpload}>\r\n                                    <Alert onClose={closeUpload} severity=\"success\">\r\n                                        Great! Photo updated successfully.\r\n                                    </Alert>\r\n                                </Snackbar>\r\n                            </label>\r\n                        </form>\r\n                        <img \r\n                            className={classes.pPic}  \r\n                            src={\r\n                                    imageAsUrl.imgUrl || \r\n                                    currentUserDetails.photo || \r\n                                    'https://www.pngitem.com/pimgs/m/442-4426913_avatar-icon-png-white-png-download-white-person.png'\r\n                                }\r\n                            alt=''\r\n                        />\r\n                    </ButtonBase>\r\n                    <Grid style={{\r\n                        margin: 20\r\n                    }}>\r\n                        <Grid alignItems='left' justify=\"left\" container spacing={2}>\r\n                            <Grid item>\r\n                                <Typography gutterBottom variant=\"h5\" align='left'>\r\n                                    {currentUserDetails.name}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" align='left' style={{ cursor: 'pointer', }}>\r\n                                    {currentUserDetails.email}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid alignItems='center' justify=\"center\" container spacing={2} xs={12} sm={6}>\r\n                    <form onSubmit={handleChangeClick}>\r\n                        <FormGroup className={clsx(classes.margin, classes.textField)} variant=\"outlined\">\r\n                            <Typography gutterBottom variant=\"h5\" align='left'>\r\n                                Change Password\r\n                            </Typography>\r\n                        </FormGroup>\r\n                        <FormGroup className={classes.margin}>\r\n                            <TextFieldMui\r\n                                style={{ width:'100%' }}\r\n                                id='Old-Password'\r\n                                type= 'password'\r\n                                value={values.Oldpassword}\r\n                                onChange={handleChange('Oldpassword')}\r\n                                label='Old Password'\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </FormGroup>\r\n                        \r\n                        <FormGroup className={classes.margin} variant=\"outlined\">\r\n                            <TextFieldMui\r\n                                style={{ width:'100%' }}\r\n                                id='New-Password'\r\n                                type= 'password'\r\n                                value={values.Newpassword}\r\n                                onChange={handleChange('Newpassword')}\r\n                                label='New Password'\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup className={classes.margin} variant=\"outlined\">\r\n                            <TextFieldMui\r\n                                style={{ width:'100%' }}\r\n                                id=' Cofirm-New-Password'\r\n                                type= 'password'\r\n                                value={values.ConfirmNewpassword}\r\n                                onChange={handleChange('ConfirmNewpassword')}\r\n                                label='Cofirm New Password'\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup className={classes.margin} variant=\"outlined\">\r\n                            <LoaderButton\r\n                                type=\"submit\"\r\n                                disabled={!validateForm()}\r\n                                isLoading={isChangingP}\r\n                                style={{\r\n                                    // marginLeft: '10%',\r\n                                    width:'100%'\r\n                                }}\r\n                            >\r\n                                Change\r\n                            </LoaderButton>\r\n                        </FormGroup>\r\n                        <Snackbar open={isChangingP} autoHideDuration={6000} onClose={handleClose}>\r\n                            <Alert onClose={handleClose} severity=\"success\">\r\n                                Great! Password changed successfully.\r\n                            </Alert>\r\n                        </Snackbar>\r\n                        <Snackbar open={isnotChangingP} autoHideDuration={6000} onClose={handleCloseNot}>\r\n                            <Alert onClose={handleCloseNot} severity=\"error\">\r\n                                Oops! Check Old Password.\r\n                            </Alert>\r\n                        </Snackbar>\r\n                    </form>\r\n                </Grid>\r\n            </Grid> \r\n        </div>\r\n    </Paper>\r\n  );\r\n}\r\n","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\screens\\createModule.js",["338"],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\screens\\liveClass.js",["339","340","341"],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\screens\\profilePage.js",["342"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Typography,\r\n    Grid,\r\n    Paper,\r\n    ButtonBase,\r\n} from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport LoaderButton from \"../components/loader\";\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport FirebaseContext from 'firebase';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport TextFieldMui from \"../../components/textField\";\r\nimport 'firebase/firestore';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: 'transparent',\r\n        width: '100%',\r\n        height: 'auto',\r\n        margin: '5% 0 0 0'\r\n    },\r\n\r\n    BioData: {\r\n        padding: 20,\r\n        flexGrow: 1\r\n    },\r\n\r\n    pPic: {\r\n        width: '100%',\r\n        height: '100%',\r\n        borderRadius: '50%',\r\n    },\r\n\r\n    paper: {\r\n        padding: theme.spacing(4),\r\n        margin: 'auto auto auto 0',\r\n    },\r\n\r\n    image: {\r\n        width: 180,\r\n        height: 180,\r\n        borderRadius: 'auto',\r\n    },\r\n\r\n    input: {\r\n        display: 'none',\r\n    },\r\n\r\n    uploadButton: {\r\n        position: 'absolute',\r\n        margin: '30% 0 0 70%',\r\n        backgroundColor: '#EDEDED'\r\n    },\r\n\r\n    margin: {\r\n        margin: theme.spacing(3,7),\r\n    },\r\n\r\n    textField: {\r\n        width: '400px',\r\n        display: 'block'\r\n    },\r\n}));\r\n\r\nconst initialState = {\r\n    Oldpassword: '',\r\n    Newpassword: '',\r\n    ConfirmNewpassword: '',\r\n    showPassword: false,\r\n};\r\n\r\n\r\nexport default function ProfilePage() {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState(initialState);\r\n      const [isChanging, setIsChanging] = React.useState(false);\r\n    const [isnotChangingP, setIsnotChangingP] = React.useState(false);\r\n    const [isChangingP, setIsChangingP] = React.useState(false);\r\n        // const allInputs = {imgUrl: ''}\r\n        const [imageAsFile, setImageAsFile] = React.useState('')\r\n        const [imageAsUrl, setImageAsUrl] = React.useState({imgUrl: ''})\r\n      const [currentUserDetails, setcurrentUserDetails] = React.useState({name:'', email:'', password:'', photo: ''})\r\n      const clearState = () => {\r\n        setValues({ ...initialState });\r\n      };\r\n\r\n    //   console.log(imageAsFile)\r\n        const handleImageAsFile = (e) => {\r\n            const image = e.target.files[0]\r\n        setImageAsFile(imageFile => (image))\r\n        }\r\n\r\n        const handleFireBaseUpload = e => {\r\n            e.preventDefault()\r\n          console.log('start of upload')\r\n          // async magic goes here...\r\n          if(imageAsFile === '') {\r\n            console.error(`not an image, the image file is a ${typeof(imageAsFile)}`)\r\n          }\r\n          let userCurrent = FirebaseContext.auth().currentUser;\r\n          const uploadTask = FirebaseContext.storage().ref('users/' + userCurrent.uid + `/${imageAsFile.name}`).put(imageAsFile)\r\n          //initiates the firebase side uploading \r\n          uploadTask.on('state_changed', \r\n          (snapShot) => {\r\n            //takes a snap shot of the process as it is happening\r\n            console.log(snapShot)\r\n          }, (err) => {\r\n            //catches the errors\r\n            console.log(err)\r\n          }, () => {\r\n            // gets the functions from storage refences the image storage in firebase by the children\r\n            // gets the download url then sets the image from firebase as the value for the imgUrl key:\r\n            FirebaseContext.auth().onAuthStateChanged(user => {\r\n                if(user) {\r\n                    FirebaseContext.storage().ref('users/' + userCurrent.uid + `/${imageAsFile.name}`).getDownloadURL()\r\n                    .then(fireBaseUrl => {\r\n                    setImageAsUrl(prevObject => ({...prevObject, imgUrl: fireBaseUrl}))\r\n                    // console.log(fireBaseUrl)\r\n                    let db = FirebaseContext.firestore().collection(\"users/trainee/users\");\r\n                    db.doc(userCurrent.uid).update({\r\n                        photo: fireBaseUrl\r\n                      });\r\n                    })\r\n                    setIsChanging(true);\r\n                }\r\n            })\r\n          })\r\n        //   window.location.reload();\r\n          }\r\n      \r\n\r\n      class userDetails {\r\n        constructor (name, email, password, photo ) {\r\n            this.name = name;\r\n            this.email = email;\r\n            this.password = password;\r\n            this.photo= photo;\r\n        }\r\n        // toString() {\r\n        //     return this.name + ', ' + this.email + ', ' + this.password;\r\n        // }\r\n    }\r\n    \r\n    // Firestore data converter\r\n    var userDetailsConverter = {\r\n        toFirestore: function(userDetails) {\r\n            return {\r\n                name: userDetails.name,\r\n                email: userDetails.email,\r\n                password: userDetails.password,\r\n                photo: userDetails.photo\r\n                }\r\n        },\r\n        fromFirestore: function(snapshot, options){\r\n            const data = snapshot.data(options);\r\n            const det1 = new userDetails(data.name, data.email, data.password, data.photo);\r\n            return det1\r\n        }\r\n    }\r\n\r\n        function validateForm() {\r\n            return (\r\n            values.Oldpassword.length > 5 &&     //more validation checks needed for the old Password\r\n            values.Newpassword.length > 5 &&\r\n            values.Newpassword === values.ConfirmNewpassword\r\n            );\r\n        }\r\n        \r\n        React.useEffect(() => {\r\n            let user1 = FirebaseContext.auth().currentUser;\r\n            // let uID = FirebaseContext.firestore().collection(\"users\").doc(user1.uid)    \r\n            let db = FirebaseContext.firestore().collection(\"users/trainee/users\");\r\n            let query = db.where('userId', '==', user1.uid);\r\n\r\n            query.withConverter(userDetailsConverter).get()\r\n            .then(snapshot => {\r\n                if (snapshot.empty) {\r\n                console.log('No matching documents.');\r\n                return;\r\n                }  \r\n\r\n                snapshot.forEach(doc => {\r\n                    var x = doc.data();\r\n                    setcurrentUserDetails(x)\r\n                // console.log(doc.id, '=>', x);\r\n                ;\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log('Error getting documents', err);\r\n            });\r\n        }, [userDetailsConverter])\r\n\r\n        async function handleChangeClick(event) {\r\n            event.preventDefault();\r\n\r\n            const user = FirebaseContext.auth().currentUser;\r\n            let db = FirebaseContext.firestore().collection(\"users/trainee/users\");\r\n            if(values.Oldpassword===currentUserDetails.password){\r\n                db.doc(user.uid).update({\r\n                    password: values.Newpassword\r\n                    });\r\n                    // Get auth credentials from the user for re-authentication. The example below shows\r\n                    // email and password credentials but there are multiple possible providers,\r\n                    // such as GoogleAuthProvider or FacebookAuthProvider.\r\n                    const cred = FirebaseContext.auth.EmailAuthProvider.credential(\r\n                        user.email, \r\n                        currentUserDetails.password\r\n                    );\r\n                    FirebaseContext.auth().currentUser.reauthenticateWithCredential(cred)\r\n                    .then(() => {\r\n                    // User successfully reauthenticated.\r\n                    const newPass = values.Newpassword;\r\n                    console.log('Password updated successfully!');\r\n                    setIsChangingP(true)\r\n                    return FirebaseContext.auth().currentUser.updatePassword(newPass);\r\n                    \r\n                    \r\n                    })\r\n                    .catch((error) => { \r\n                        console.log(error); \r\n                    });\r\n                    \r\n                    // alert('Password changed successfully!');\r\n                    setIsChangingP(true);\r\n                    clearState()\r\n            }else{\r\n                // alert('Oops, please check Old Password!')\r\n                setIsnotChangingP(true);\r\n            }\r\n        }\r\n\r\n\r\n        const handleChange = (prop) => (event) => {\r\n            setValues({ ...values, [prop]: event.target.value });\r\n          };\r\n    \r\n          const handleClose = (event, reason) => {\r\n            if (reason === 'clickaway') {\r\n              return;\r\n            }    \r\n                setIsChangingP(false);\r\n          };\r\n    \r\n          const closeUpload = (event, reason) => {\r\n            if (reason === 'clickaway') {\r\n              return;\r\n            }\r\n                setIsChanging(false);\r\n          };\r\n    \r\n          const handleCloseNot = (event, reason) => {\r\n            if (reason === 'clickaway') {\r\n              return;\r\n            }\r\n                setIsnotChangingP(false);\r\n          };\r\n\r\n  return (\r\n    <Paper elevation={0} className={classes.root}>\r\n        <div className={classes.paper}>\r\n            <Grid alignItems='center' justify=\"center\" container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <ButtonBase className={classes.image}>\r\n                        <form onSubmit={handleFireBaseUpload}>\r\n                            <input \r\n                                accept=\"image/*\" \r\n                                className={classes.input} \r\n                                onChange={handleImageAsFile} \r\n                                id=\"icon-button-file\" \r\n                                type=\"file\" \r\n                            />\r\n                            <label htmlFor=\"icon-button-file\">\r\n                                <IconButton \r\n                                    type=\"submit\" \r\n                                    className={classes.uploadButton} \r\n                                    color=\"primary\" \r\n                                    component=\"span\"\r\n                                >\r\n                                    <PhotoCamera />\r\n                                </IconButton>\r\n                                <LoaderButton\r\n                                    type=\"submit\"\r\n                                    disabled={!imageAsFile}\r\n                                    isLoading={isChanging}\r\n                                    style={{\r\n                                        margin: '200px 0 0 25%',\r\n                                        width:'50%',\r\n                                        position: 'absolute',\r\n                                    }}\r\n                                >\r\n                                    UPLOAD\r\n                                </LoaderButton>\r\n                                <Snackbar open={isChanging} autoHideDuration={6000} onClose={closeUpload}>\r\n                                    <Alert onClose={closeUpload} severity=\"success\">\r\n                                        Great! Photo updated successfully.\r\n                                    </Alert>\r\n                                </Snackbar>\r\n                            </label>\r\n                        </form>\r\n                        <img \r\n                            className={classes.pPic}  \r\n                            src={\r\n                                    imageAsUrl.imgUrl || \r\n                                    currentUserDetails.photo || \r\n                                    'https://www.pngitem.com/pimgs/m/442-4426913_avatar-icon-png-white-png-download-white-person.png'\r\n                                }\r\n                            alt=''\r\n                        />\r\n                    </ButtonBase>\r\n                    <Grid style={{\r\n                        margin: 20\r\n                    }}>\r\n                       <Grid alignItems='left' justify=\"left\" container spacing={2}>\r\n                            <Grid item>\r\n                                <Typography gutterBottom variant=\"h5\" align='left'>\r\n                                    {currentUserDetails.name}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" align='left' style={{ cursor: 'pointer', }}>\r\n                                    {currentUserDetails.email}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid alignItems='center' justify=\"center\" container spacing={2} xs={12} sm={6}>\r\n                    <form onSubmit={handleChangeClick}>\r\n                        <FormGroup className={clsx(classes.margin, classes.textField)} variant=\"outlined\">\r\n                            <Typography gutterBottom variant=\"h5\" align='left'>\r\n                                Change Password\r\n                            </Typography>\r\n                        </FormGroup>\r\n                        <FormGroup className={classes.margin}>\r\n                            <TextFieldMui\r\n                                style={{ width:'100%' }}\r\n                                id='Old-Password'\r\n                                type= 'password'\r\n                                value={values.Oldpassword}\r\n                                onChange={handleChange('Oldpassword')}\r\n                                label='Old Password'\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </FormGroup>\r\n                        \r\n                        <FormGroup className={classes.margin} variant=\"outlined\">\r\n                            <TextFieldMui\r\n                                style={{ width:'100%' }}\r\n                                id='New-Password'\r\n                                type= 'password'\r\n                                value={values.Newpassword}\r\n                                onChange={handleChange('Newpassword')}\r\n                                label='New Password'\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup className={classes.margin} variant=\"outlined\">\r\n                            <TextFieldMui\r\n                                style={{ width:'100%' }}\r\n                                id=' Cofirm-New-Password'\r\n                                type= 'password'\r\n                                value={values.ConfirmNewpassword}\r\n                                onChange={handleChange('ConfirmNewpassword')}\r\n                                label='Cofirm New Password'\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup className={classes.margin} variant=\"outlined\">\r\n                            <LoaderButton\r\n                                type=\"submit\"\r\n                                disabled={!validateForm()}\r\n                                isLoading={isChangingP}\r\n                                style={{\r\n                                    // marginLeft: '10%',\r\n                                    width:'100%'\r\n                                }}\r\n                            >\r\n                                Change\r\n                            </LoaderButton>\r\n                        </FormGroup>\r\n                        <Snackbar open={isChangingP} autoHideDuration={6000} onClose={handleClose}>\r\n                            <Alert onClose={handleClose} severity=\"success\">\r\n                                Great! Password changed successfully.\r\n                            </Alert>\r\n                        </Snackbar>\r\n                        <Snackbar open={isnotChangingP} autoHideDuration={6000} onClose={handleCloseNot}>\r\n                            <Alert onClose={handleCloseNot} severity=\"error\">\r\n                                Oops! Check Old Password.\r\n                            </Alert>\r\n                        </Snackbar>\r\n                    </form>\r\n                </Grid>\r\n            </Grid> \r\n        </div>\r\n    </Paper>\r\n  );\r\n}\r\n","C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\components\\loader.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\loader.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\components\\loader.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\screens\\shared\\Menu\\Menu.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\LiveSupport\\index.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\LiveSupport\\LiveSupport2\\index.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\cart\\components\\CartSucess\\index.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\cart\\index.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\LiveSupport\\Tabs.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\LiveSupport\\MenuLive.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\session\\order-context.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\cart\\imodules.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\components\\navbar-checkout.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\styles\\media-queries.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\cart\\discover.js",["343"],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\session\\checkout-context.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\checkout\\index.js",["344","345","346","347","348","349","350","351","352","353","354","355"],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\productDetails\\index.js",["356","357","358","359"],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\cart\\components\\order-item-list.js",["360","361"],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\utils\\use-callback-status.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\cart\\sandbox.js",["362"],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\cart\\components\\ModuleRow.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\screens\\assignment\\index.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\screens\\schedule.js",["363","364","365"],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\views\\charts.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\card\\CardHeader.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\card\\CardBody.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\card\\Card.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\card\\CardFooter.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\card\\CardIcon.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\styles\\jss\\cardBodyStyle.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\styles\\jss\\cardFooterStyle.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\styles\\jss\\materialReact.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\styles\\jss\\cardStyle.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\styles\\jss\\cardHeaderStyle.js",[],"C:\\Users\\Ronnie_Web\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\styles\\jss\\cardIconStyle.js",[],{"ruleId":"366","replacedBy":"367"},{"ruleId":"368","replacedBy":"369"},{"ruleId":"370","severity":1,"message":"371","line":197,"column":7,"nodeType":"372","endLine":211,"endColumn":4},{"ruleId":"373","severity":1,"message":"374","line":11,"column":8,"nodeType":"375","messageId":"376","endLine":11,"endColumn":13},{"ruleId":"373","severity":1,"message":"377","line":12,"column":8,"nodeType":"375","messageId":"376","endLine":12,"endColumn":17},{"ruleId":"373","severity":1,"message":"378","line":28,"column":8,"nodeType":"375","messageId":"376","endLine":28,"endColumn":16},{"ruleId":"370","severity":1,"message":"379","line":153,"column":9,"nodeType":"372","endLine":167,"endColumn":6},{"ruleId":"370","severity":1,"message":"380","line":107,"column":9,"nodeType":"372","endLine":121,"endColumn":6},{"ruleId":"373","severity":1,"message":"381","line":65,"column":12,"nodeType":"375","messageId":"376","endLine":65,"endColumn":22},{"ruleId":"373","severity":1,"message":"382","line":7,"column":12,"nodeType":"375","messageId":"376","endLine":7,"endColumn":30},{"ruleId":"370","severity":1,"message":"383","line":44,"column":9,"nodeType":"372","endLine":57,"endColumn":4},{"ruleId":"370","severity":1,"message":"384","line":80,"column":8,"nodeType":"385","endLine":80,"endColumn":10,"suggestions":"386"},{"ruleId":"370","severity":1,"message":"387","line":154,"column":9,"nodeType":"372","endLine":168,"endColumn":6},{"ruleId":"370","severity":1,"message":"388","line":61,"column":7,"nodeType":"385","endLine":61,"endColumn":9,"suggestions":"389"},{"ruleId":"370","severity":1,"message":"390","line":177,"column":7,"nodeType":"385","endLine":177,"endColumn":61,"suggestions":"391"},{"ruleId":"392","severity":1,"message":"393","line":196,"column":22,"nodeType":"394","messageId":"395","endLine":196,"endColumn":24},{"ruleId":"370","severity":1,"message":"396","line":205,"column":7,"nodeType":"385","endLine":205,"endColumn":20,"suggestions":"397"},{"ruleId":"373","severity":1,"message":"398","line":401,"column":12,"nodeType":"375","messageId":"376","endLine":401,"endColumn":22},{"ruleId":"373","severity":1,"message":"399","line":401,"column":24,"nodeType":"375","messageId":"376","endLine":401,"endColumn":37},{"ruleId":"373","severity":1,"message":"400","line":458,"column":12,"nodeType":"375","messageId":"376","endLine":458,"endColumn":19},{"ruleId":"373","severity":1,"message":"401","line":470,"column":16,"nodeType":"375","messageId":"376","endLine":470,"endColumn":27},{"ruleId":"373","severity":1,"message":"402","line":470,"column":29,"nodeType":"375","messageId":"376","endLine":470,"endColumn":43},{"ruleId":"373","severity":1,"message":"403","line":470,"column":45,"nodeType":"375","messageId":"376","endLine":470,"endColumn":55},{"ruleId":"373","severity":1,"message":"404","line":492,"column":19,"nodeType":"375","messageId":"376","endLine":492,"endColumn":25},{"ruleId":"370","severity":1,"message":"405","line":496,"column":7,"nodeType":"385","endLine":496,"endColumn":9,"suggestions":"406"},{"ruleId":"407","severity":1,"message":"408","line":633,"column":45,"nodeType":"409","endLine":633,"endColumn":57},{"ruleId":"373","severity":1,"message":"410","line":50,"column":13,"nodeType":"375","messageId":"376","endLine":50,"endColumn":17},{"ruleId":"373","severity":1,"message":"404","line":50,"column":19,"nodeType":"375","messageId":"376","endLine":50,"endColumn":25},{"ruleId":"370","severity":1,"message":"411","line":53,"column":7,"nodeType":"385","endLine":53,"endColumn":9,"suggestions":"412"},{"ruleId":"407","severity":1,"message":"408","line":116,"column":111,"nodeType":"409","endLine":116,"endColumn":123},{"ruleId":"373","severity":1,"message":"413","line":6,"column":32,"nodeType":"375","messageId":"376","endLine":6,"endColumn":49},{"ruleId":"370","severity":1,"message":"414","line":28,"column":9,"nodeType":"385","endLine":28,"endColumn":11,"suggestions":"415"},{"ruleId":"373","severity":1,"message":"416","line":18,"column":11,"nodeType":"375","messageId":"376","endLine":18,"endColumn":19},{"ruleId":"373","severity":1,"message":"417","line":8,"column":8,"nodeType":"375","messageId":"376","endLine":8,"endColumn":18},{"ruleId":"373","severity":1,"message":"418","line":9,"column":8,"nodeType":"375","messageId":"376","endLine":9,"endColumn":16},{"ruleId":"373","severity":1,"message":"419","line":10,"column":8,"nodeType":"375","messageId":"376","endLine":10,"endColumn":14},"no-native-reassign",["420"],"no-negated-in-lhs",["421"],"react-hooks/exhaustive-deps","The 'userDetailsConverter' object makes the dependencies of useEffect Hook (at line 234) change on every render. Move it inside the useEffect callback. Alternatively, wrap the initialization of 'userDetailsConverter' in its own useMemo() Hook.","VariableDeclarator","no-unused-vars","'Store' is defined but never used.","Identifier","unusedVar","'DateRange' is defined but never used.","'CardIcon' is defined but never used.","The 'userDetailsConverter' object makes the dependencies of useEffect Hook (at line 200) change on every render. Move it inside the useEffect callback. Alternatively, wrap the initialization of 'userDetailsConverter' in its own useMemo() Hook.","The 'userDetailsConverter' object makes the dependencies of useEffect Hook (at line 145) change on every render. Move it inside the useEffect callback. Alternatively, wrap the initialization of 'userDetailsConverter' in its own useMemo() Hook.","'imageAsUrl' is assigned a value but never used.","'currentUserDetails' is assigned a value but never used.","The 'classDetailsConverter' object makes the dependencies of useEffect Hook (at line 103) change on every render. Move it inside the useEffect callback. Alternatively, wrap the initialization of 'classDetailsConverter' in its own useMemo() Hook.","React Hook React.useEffect has a missing dependency: 'userDetailsConverter'. Either include it or remove the dependency array.","ArrayExpression",["422"],"The 'userDetailsConverter' object makes the dependencies of useEffect Hook (at line 201) change on every render. Move it inside the useEffect callback. Alternatively, wrap the initialization of 'userDetailsConverter' in its own useMemo() Hook.","React Hook React.useEffect has missing dependencies: 'getModules' and 'run'. Either include them or remove the dependency array.",["423"],"React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["424"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook React.useEffect has a missing dependency: 'selectedCard'. Either include it or remove the dependency array.",["425"],"'isExpanded' is assigned a value but never used.","'setIsExpanded' is assigned a value but never used.","'loading' is assigned a value but never used.","'cardDetails' is assigned a value but never used.","'billingAddress' is assigned a value but never used.","'totalPrice' is assigned a value but never used.","'status' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'dispatch', 'getModule', 'props.moduleId', and 'run'. Either include them or remove the dependency array.",["426"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'data' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'getModule', 'props.moduleId', and 'run'. Either include them or remove the dependency array.",["427"],"'useOrderItemState' is defined but never used.","React Hook React.useEffect has missing dependencies: 'getOrders', 'props.firebase.auth.currentUser.uid', and 'run'. Either include them or remove the dependency array.",["428"],"'response' is assigned a value but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"429","fix":"430"},{"desc":"431","fix":"432"},{"desc":"433","fix":"434"},{"desc":"435","fix":"436"},{"desc":"437","fix":"438"},{"desc":"439","fix":"440"},{"desc":"441","fix":"442"},"Update the dependencies array to be: [userDetailsConverter]",{"range":"443","text":"444"},"Update the dependencies array to be: [getModules, run]",{"range":"445","text":"446"},"Update the dependencies array to be: [name, cardName, cardNo, expiryYear, expiryMonth, CCV, dispatch]",{"range":"447","text":"448"},"Update the dependencies array to be: [value, name, selectedCard]",{"range":"449","text":"450"},"Update the dependencies array to be: [dispatch, getModule, props.moduleId, run]",{"range":"451","text":"452"},"Update the dependencies array to be: [getModule, props.moduleId, run]",{"range":"453","text":"454"},"Update the dependencies array to be: [getOrders, props.firebase.auth.currentUser.uid, run]",{"range":"455","text":"456"},[2678,2680],"[userDetailsConverter]",[1773,1775],"[getModules, run]",[6083,6137],"[name, cardName, cardNo, expiryYear, expiryMonth, CCV, dispatch]",[6901,6914],"[value, name, selectedCard]",[17195,17197],"[dispatch, getModule, props.moduleId, run]",[1839,1841],"[getModule, props.moduleId, run]",[1044,1046],"[getOrders, props.firebase.auth.currentUser.uid, run]"]