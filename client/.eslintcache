[{"D:\\projects\\skylla-learning-community\\client\\src\\index.js":"1","D:\\projects\\skylla-learning-community\\client\\src\\serviceWorker.js":"2","D:\\projects\\skylla-learning-community\\client\\src\\App.js":"3","D:\\projects\\skylla-learning-community\\client\\src\\App\\bootstrap.js":"4","D:\\projects\\skylla-learning-community\\client\\src\\App\\firebase.js":"5","D:\\projects\\skylla-learning-community\\client\\src\\App\\components.js":"6","D:\\projects\\skylla-learning-community\\client\\src\\unauthenticated-app.js":"7","D:\\projects\\skylla-learning-community\\client\\src\\App\\session\\context.js":"8","D:\\projects\\skylla-learning-community\\client\\src\\App\\session\\withAuthetication.js":"9","D:\\projects\\skylla-learning-community\\client\\src\\authenticated-app.js":"10","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\signup\\index.js":"11","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\login\\index.js":"12","D:\\projects\\skylla-learning-community\\client\\src\\App\\config\\routes.js":"13","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\resetPassword\\index.js":"14","D:\\projects\\skylla-learning-community\\client\\src\\App\\session\\withAuthorization.js":"15","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\index.js":"16","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\screens\\activeUsers.js":"17","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\index.js":"18","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\screens\\enrolled.js":"19","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\screens\\liveClass.js":"20","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\screens\\totalModules.js":"21","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\screens\\deleteHiredData.js":"22","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\screens\\numTrainers.js":"23","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\index.js":"24","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\LiveSupport\\LiveSupport2\\index.js":"25","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\LiveSupport\\index.js":"26","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\cart\\components\\CartSucess\\index.js":"27","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\screens\\quiz\\submissions.js":"28","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\components\\views\\announcements.js":"29","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\screens\\quiz\\challenges.js":"30","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\screens\\quiz\\problems.js":"31","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\cart\\index.js":"32","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\components\\sidebar.js":"33","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\components\\button.js":"34","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\components\\textField.js":"35","D:\\projects\\skylla-learning-community\\client\\src\\App\\components\\Footer\\footer.js":"36","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\mob.js":"37","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\screens\\quiz\\index.js":"38","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\components\\permissions.js":"39","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\screens\\profilePage.js":"40","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\components\\menu.js":"41","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\screens\\schedule.js":"42","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\screens\\assignment\\index.js":"43","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\screens\\hire.js":"44","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\components\\views\\views.js":"45","D:\\projects\\skylla-learning-community\\client\\src\\App\\session\\order-context.js":"46","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\views\\charts.js":"47","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\components\\loader.js":"48","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\card\\CardFooter.js":"49","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\card\\CardHeader.js":"50","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\card\\CardBody.js":"51","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\card\\Card.js":"52","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\productDetails\\index.js":"53","D:\\projects\\skylla-learning-community\\client\\src\\App\\utils\\use-callback-status.js":"54","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\styles\\jss\\cardStyle.js":"55","D:\\projects\\skylla-learning-community\\client\\src\\App\\styles\\media-queries.js":"56","D:\\projects\\skylla-learning-community\\client\\src\\App\\styles\\colors.js":"57","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\styles\\jss\\cardFooterStyle.js":"58","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\styles\\jss\\cardBodyStyle.js":"59","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\styles\\jss\\cardHeaderStyle.js":"60","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\styles\\jss\\materialReact.js":"61","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\cart\\imodules.js":"62","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\components\\navbar-checkout.js":"63","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\cart\\discover.js":"64","D:\\projects\\skylla-learning-community\\client\\src\\App\\session\\checkout-context.js":"65","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\LiveSupport\\Tabs.js":"66","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\LiveSupport\\MenuLive.js":"67","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\checkout\\index.js":"68","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\screens\\interviews.js":"69","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\screens\\finalAsessessment.js":"70","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\screens\\addAnnounce.js":"71","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\screens\\createModule.js":"72","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\screens\\deleteUsers.js":"73","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\screens\\deleteModule.js":"74","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\screens\\profilePage.js":"75","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\permissions.js":"76","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\screens\\addUsers.js":"77","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\menu.js":"78","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\views\\views.js":"79","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\mob.js":"80","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\components\\social.js":"81","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\components\\menu.js":"82","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\screens\\quiz\\index.js":"83","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\screens\\liveClass.js":"84","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\mob.js":"85","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\screens\\finalAssess\\finalAsses.js":"86","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\components\\views\\views.js":"87","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\screens\\profilePage.js":"88","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\cart\\components\\order-item-list.js":"89","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\cart\\components\\ModuleRow.js":"90","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\cart\\sandbox.js":"91","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\loader.js":"92","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\components\\moduleContent.js":"93","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\components\\mobMenu.js":"94","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\screens\\quiz\\editor.js":"95","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\components\\loader.js":"96","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\components\\acPopup.js":"97","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\components\\acPopup.js":"98"},{"size":689,"mtime":1607945019725,"results":"99","hashOfConfig":"100"},{"size":5227,"mtime":1606885407470,"results":"101","hashOfConfig":"100"},{"size":1393,"mtime":1608582734267,"results":"102","hashOfConfig":"100"},{"size":73,"mtime":1606885407242,"results":"103","hashOfConfig":"100"},{"size":3513,"mtime":1608582734273,"results":"104","hashOfConfig":"100"},{"size":1000,"mtime":1607945016626,"results":"105","hashOfConfig":"100"},{"size":889,"mtime":1609089029556,"results":"106","hashOfConfig":"100"},{"size":119,"mtime":1608582734457,"results":"107","hashOfConfig":"100"},{"size":1007,"mtime":1607945018178,"results":"108","hashOfConfig":"100"},{"size":4455,"mtime":1609097554829,"results":"109","hashOfConfig":"100"},{"size":7900,"mtime":1609089029541,"results":"110","hashOfConfig":"100"},{"size":4643,"mtime":1609089029499,"results":"111","hashOfConfig":"100"},{"size":1268,"mtime":1609089029438,"results":"112","hashOfConfig":"100"},{"size":4461,"mtime":1609089029525,"results":"113","hashOfConfig":"100"},{"size":2566,"mtime":1608582734459,"results":"114","hashOfConfig":"100"},{"size":9104,"mtime":1609134366208,"results":"115","hashOfConfig":"100"},{"size":7180,"mtime":1609089028924,"results":"116","hashOfConfig":"100"},{"size":11912,"mtime":1609096874538,"results":"117","hashOfConfig":"100"},{"size":6846,"mtime":1609089029022,"results":"118","hashOfConfig":"100"},{"size":6508,"mtime":1609089029109,"results":"119","hashOfConfig":"100"},{"size":7272,"mtime":1609089029160,"results":"120","hashOfConfig":"100"},{"size":6839,"mtime":1609089028960,"results":"121","hashOfConfig":"100"},{"size":7175,"mtime":1609089029125,"results":"122","hashOfConfig":"100"},{"size":8531,"mtime":1609089028893,"results":"123","hashOfConfig":"100"},{"size":4545,"mtime":1608582734345,"results":"124","hashOfConfig":"100"},{"size":333,"mtime":1608582734350,"results":"125","hashOfConfig":"100"},{"size":3707,"mtime":1608582734408,"results":"126","hashOfConfig":"100"},{"size":2986,"mtime":1609089029407,"results":"127","hashOfConfig":"100"},{"size":4311,"mtime":1609089029191,"results":"128","hashOfConfig":"100"},{"size":1626,"mtime":1609089029391,"results":"129","hashOfConfig":"100"},{"size":5109,"mtime":1609089029407,"results":"130","hashOfConfig":"100"},{"size":3278,"mtime":1608582734415,"results":"131","hashOfConfig":"100"},{"size":1215,"mtime":1608582734428,"results":"132","hashOfConfig":"100"},{"size":668,"mtime":1606885407388,"results":"133","hashOfConfig":"100"},{"size":2448,"mtime":1608582734429,"results":"134","hashOfConfig":"100"},{"size":721,"mtime":1607945006173,"results":"135","hashOfConfig":"100"},{"size":5657,"mtime":1606885407223,"results":"136","hashOfConfig":"100"},{"size":6674,"mtime":1609089029407,"results":"137","hashOfConfig":"100"},{"size":2551,"mtime":1609089029391,"results":"138","hashOfConfig":"100"},{"size":16468,"mtime":1607945014046,"results":"139","hashOfConfig":"100"},{"size":1928,"mtime":1609136740005,"results":"140","hashOfConfig":"100"},{"size":4816,"mtime":1609089029438,"results":"141","hashOfConfig":"100"},{"size":6700,"mtime":1608582734402,"results":"142","hashOfConfig":"100"},{"size":5194,"mtime":1609089029038,"results":"143","hashOfConfig":"100"},{"size":6277,"mtime":1609089029391,"results":"144","hashOfConfig":"100"},{"size":1417,"mtime":1608582734425,"results":"145","hashOfConfig":"100"},{"size":2928,"mtime":1609089028852,"results":"146","hashOfConfig":"100"},{"size":581,"mtime":1607945013609,"results":"147","hashOfConfig":"100"},{"size":1172,"mtime":1609089028736,"results":"148","hashOfConfig":"100"},{"size":1263,"mtime":1609089028736,"results":"149","hashOfConfig":"100"},{"size":1012,"mtime":1609089028736,"results":"150","hashOfConfig":"100"},{"size":1049,"mtime":1609089028736,"results":"151","hashOfConfig":"100"},{"size":7640,"mtime":1608582734420,"results":"152","hashOfConfig":"100"},{"size":1365,"mtime":1608582734426,"results":"153","hashOfConfig":"100"},{"size":819,"mtime":1609089028837,"results":"154","hashOfConfig":"100"},{"size":176,"mtime":1608582734425,"results":"155","hashOfConfig":"100"},{"size":288,"mtime":1608582734459,"results":"156","hashOfConfig":"100"},{"size":1070,"mtime":1609089028837,"results":"157","hashOfConfig":"100"},{"size":316,"mtime":1609089028837,"results":"158","hashOfConfig":"100"},{"size":3064,"mtime":1609089028837,"results":"159","hashOfConfig":"100"},{"size":7303,"mtime":1609089028852,"results":"160","hashOfConfig":"100"},{"size":531,"mtime":1608582734414,"results":"161","hashOfConfig":"100"},{"size":632,"mtime":1608582734419,"results":"162","hashOfConfig":"100"},{"size":5403,"mtime":1608582734414,"results":"163","hashOfConfig":"100"},{"size":1467,"mtime":1608582734424,"results":"164","hashOfConfig":"100"},{"size":12714,"mtime":1608582734349,"results":"165","hashOfConfig":"100"},{"size":1412,"mtime":1608582734347,"results":"166","hashOfConfig":"100"},{"size":27485,"mtime":1608582734417,"results":"167","hashOfConfig":"100"},{"size":6570,"mtime":1609089029078,"results":"168","hashOfConfig":"100"},{"size":6683,"mtime":1609089029022,"results":"169","hashOfConfig":"100"},{"size":4515,"mtime":1609089028936,"results":"170","hashOfConfig":"100"},{"size":7846,"mtime":1608582734305,"results":"171","hashOfConfig":"100"},{"size":6309,"mtime":1609090411316,"results":"172","hashOfConfig":"100"},{"size":6275,"mtime":1609089028976,"results":"173","hashOfConfig":"100"},{"size":16051,"mtime":1607945017627,"results":"174","hashOfConfig":"100"},{"size":2356,"mtime":1609090800073,"results":"175","hashOfConfig":"100"},{"size":5843,"mtime":1609090474836,"results":"176","hashOfConfig":"100"},{"size":2864,"mtime":1609089028736,"results":"177","hashOfConfig":"100"},{"size":9429,"mtime":1609089028877,"results":"178","hashOfConfig":"100"},{"size":5333,"mtime":1606885407156,"results":"179","hashOfConfig":"100"},{"size":3480,"mtime":1609089029191,"results":"180","hashOfConfig":"100"},{"size":3653,"mtime":1609144616513,"results":"181","hashOfConfig":"100"},{"size":5488,"mtime":1609089029360,"results":"182","hashOfConfig":"100"},{"size":3871,"mtime":1608582734387,"results":"183","hashOfConfig":"100"},{"size":5234,"mtime":1606885407170,"results":"184","hashOfConfig":"100"},{"size":3379,"mtime":1609089029276,"results":"185","hashOfConfig":"100"},{"size":2046,"mtime":1609089029207,"results":"186","hashOfConfig":"100"},{"size":16447,"mtime":1608293257902,"results":"187","hashOfConfig":"100"},{"size":1966,"mtime":1608582734412,"results":"188","hashOfConfig":"100"},{"size":3350,"mtime":1608582734409,"results":"189","hashOfConfig":"100"},{"size":2743,"mtime":1608582734415,"results":"190","hashOfConfig":"100"},{"size":581,"mtime":1607945017088,"results":"191","hashOfConfig":"100"},{"size":671,"mtime":1608582734354,"results":"192","hashOfConfig":"100"},{"size":4218,"mtime":1607945012153,"results":"193","hashOfConfig":"100"},{"size":4967,"mtime":1609089029307,"results":"194","hashOfConfig":"100"},{"size":581,"mtime":1607945011474,"results":"195","hashOfConfig":"100"},{"size":5325,"mtime":1609144402421,"results":"196","hashOfConfig":"100"},{"size":5540,"mtime":1609144867408,"results":"197","hashOfConfig":"100"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},"8bqei7",{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"200"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"200"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"200"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"200"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"200"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"200"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"200"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"200"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"200"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"200"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"200"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"200"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"200"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"388","usedDeprecatedRules":"200"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"200"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"200"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"409","messages":"410","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\projects\\skylla-learning-community\\client\\src\\index.js",[],["411","412"],"D:\\projects\\skylla-learning-community\\client\\src\\serviceWorker.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\bootstrap.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\firebase.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\components.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\unauthenticated-app.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\session\\context.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\session\\withAuthetication.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\authenticated-app.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\signup\\index.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\login\\index.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\config\\routes.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\resetPassword\\index.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\session\\withAuthorization.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\index.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\screens\\activeUsers.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\index.js",["413"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Footer from '../../components/Footer/footer';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport Menu from './components/menu';\r\n// import Permissions from './components/moduleContent';\r\nimport Mobile from './mob';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Views from './components/views/views'\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport SocialIcons from './components/social';\r\nimport ProfilePage from './screens/profilePage';\r\nimport LiveClass from './screens/liveClass';\r\nimport *as ROUTES from '../../config/routes';\r\nimport PopUp from './components/acPopup';\r\nimport FirebaseContext from 'firebase';\r\nimport 'firebase/firestore';\r\nimport './index.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n} from \"react-router-dom\";\r\nimport FinalAssessment from './screens/finalAssess/finalAsses';\r\nimport Quiz from './screens/quiz/index';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    [theme.breakpoints.down('sm')]: {\r\n      display: 'none'\r\n    }\r\n  },\r\n  desktop: {\r\n    \r\n  },\r\n  appBar: {\r\n    backgroundColor: '#0000FF',\r\n    boxShadow: 'none',\r\n    borderLeft: '1px solid white',\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    backgroundColor: '#0000FF',\r\n    color: 'white',\r\n    msOverflowStyle: 'none',\r\n    '&::-webkit-scrollbar': {\r\n        display: 'none'\r\n    },\r\n  },\r\n  paper: {\r\n    margin: 'auto',\r\n    width: '80%'\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n\r\n  fab: {\r\n    margin: theme.spacing(0),\r\n    backgroundColor: 'white',\r\n    '&:hover': {\r\n      backgroundColor: 'white',\r\n    },\r\n  },\r\n}));\r\n\r\n// Define routes in the Trainees\r\nconst routes = [\r\n  {\r\n    path: ROUTES.TRAINEE,\r\n    exact: true,\r\n    sidebar: () => <div></div>,\r\n    main: () => <div>\r\n       {/* Views */}\r\n       <Views />\r\n    </div>\r\n  },\r\n\r\n  {\r\n    path: ROUTES.PROFILE,\r\n    exact: true,\r\n    sidebar: () => <div></div>,\r\n    main: () => <div>\r\n      <ProfilePage/>\r\n    </div>\r\n  },\r\n\r\n  {\r\n    path: ROUTES.SESSIONS,\r\n    exact: true,\r\n    sidebar: () => <div></div>,\r\n    main: () => <div>View Sections</div>\r\n  },\r\n\r\n  {\r\n    path: ROUTES.ASSESSMENTS,\r\n    exact: true,\r\n    sidebar: () => <div></div>,\r\n    main: () => <FinalAssessment />\r\n  },\r\n\r\n  {\r\n    path: ROUTES.INTERVIEWS,\r\n    exact: true,\r\n    sidebar: () => <div></div>,\r\n    main: () => <div>\r\n      Interviews page\r\n    </div>\r\n  },\r\n\r\n  {\r\n    path: ROUTES.HIRED,\r\n    exact: true,\r\n    sidebar: () => <div></div>,\r\n    main: () => <div>\r\n      Hire page\r\n    </div>\r\n  },\r\n\r\n  {\r\n    path: ROUTES.LIVE_CLASS,\r\n    exact: true,\r\n    sidebar: () => <div></div>,\r\n    main: () => <div>\r\n      <LiveClass/>\r\n    </div>\r\n  },\r\n\r\n  {\r\n    path: ROUTES.QUIZ,\r\n    exact: true,\r\n    sidebar: () => <div></div>,\r\n    main: () => <Quiz />\r\n  }\r\n];\r\n\r\nexport default function PersistentDrawerLeft() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(true);\r\n  const [currentUserDetails, setcurrentUserDetails] = React.useState({name:'', email:'', password:'', photo: ''})\r\n\r\n\r\n  class userDetails {\r\n    constructor (name, email, password, photo ) {\r\n        this.name = name;\r\n        this.email = email;\r\n        this.password = password;\r\n        this.photo= photo;\r\n    }\r\n  }\r\n\r\n// Firestore data converter\r\n \r\n\r\n  React.useEffect(() => {\r\n        let user = FirebaseContext.auth().currentUser;   \r\n        let db = FirebaseContext.firestore().collection('users/trainee/users');\r\n        let query = db.where('userId', '==', user.uid);\r\n        \r\n\r\n        var userDetailsConverter = {\r\n          toFirestore: function(userDetails) {\r\n              return {\r\n                  name: userDetails.name,\r\n                  email: userDetails.email,\r\n                  password: userDetails.password,\r\n                  photo: userDetails.photo\r\n                  }\r\n          },\r\n          fromFirestore: function(snapshot, options){\r\n              const data = snapshot.data(options);\r\n              const det1 = new userDetails(data.name, data.email, data.password, data.photo);\r\n              return det1\r\n          }\r\n        }\r\n\r\n        query.withConverter(userDetailsConverter).get()\r\n        .then(snapshot => {\r\n            if (snapshot.empty) {\r\n            console.log('No matching documents.');\r\n            return;\r\n            }  \r\n\r\n            snapshot.forEach(doc => {\r\n                var x = doc.data();\r\n                setcurrentUserDetails(x)\r\n            // console.log(doc.id, '=>', x);\r\n            ;\r\n            })\r\n        })\r\n        .catch(err => {\r\n            console.log('Error getting documents', err);\r\n        });\r\n  });\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n      <div>\r\n        <div className={classes.root}>\r\n          <CssBaseline />\r\n            <AppBar\r\n              position=\"fixed\"\r\n              className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: open,\r\n              })}\r\n            >\r\n            <Toolbar>\r\n              <IconButton\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={handleDrawerOpen}\r\n                edge=\"start\"\r\n                className={clsx(classes.menuButton, open && classes.hide)}\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n\r\n              <div style={{margin: 'auto'}}>\r\n                <Typography noWrap>\r\n                    SKYLLA LEARNING COMMUNITY\r\n                </Typography>\r\n              </div>\r\n\r\n              <div style={{\r\n                  textAlign: 'center', \r\n                  margin: 'auto 15px auto 25px',\r\n                  display: 'flex'\r\n                }}>\r\n                {/* <Avatar alt=\"Remy Sharp\" style={{marginLeft:'27%'}} src={currentUserDetails.photo} />\r\n                <Typography variant=\"body2\" style={{margin: 10}}>\r\n                  {currentUserDetails.name}\r\n                </Typography> */}\r\n                <PopUp/>\r\n              </div>\r\n\r\n              <div style={{\r\n                  textAlign: 'center', \r\n                  margin: 'auto 15px auto 25px',\r\n                  display: 'flex'\r\n                }}>\r\n                <Avatar alt=\"Remy Sharp\" src=\"\" />\r\n                <Typography variant=\"body2\" style={{margin: 10}}>\r\n                  Trainer\r\n                </Typography>\r\n              </div>\r\n\r\n              <div style={{textAlign: 'center'}}>\r\n                <Link to={ROUTES.MODULES}>\r\n                  <AddShoppingCartIcon style={{color: 'white'}} />\r\n                </Link>\r\n              </div>\r\n              \r\n            </Toolbar>\r\n          </AppBar>\r\n\r\n          <Router>\r\n            <Drawer\r\n              className={`drawer ${classes.drawer}`}\r\n              variant=\"persistent\"\r\n              anchor=\"left\"\r\n              open={open}\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n            >\r\n            <div className={classes.drawerHeader} open={open}>\r\n              <IconButton onClick={handleDrawerClose} style={{color: 'white'}}>\r\n                {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n              </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <div className={classes.paper}>\r\n              <Menu />\r\n            </div>\r\n           \r\n            {/* <div \r\n                style={{\r\n                    margin: '-2px auto 0 auto',\r\n                    width: '90%',\r\n                }}>\r\n                <hr  style={{ \r\n                  backgroundColor: 'white'\r\n                }}/> \r\n            </div>\r\n\r\n            <Button style={{\r\n                color: 'white',\r\n                textTransform: 'capitalize'\r\n            }}>\r\n              <Typography variant=\"h6\" paragraph>\r\n                  Module Content\r\n              </Typography>\r\n            </Button> */}\r\n\r\n            <div \r\n                style={{\r\n                    margin: '-2px auto 0 auto',\r\n                    width: '90%',\r\n                }}>\r\n                <Divider /> \r\n            </div>\r\n\r\n            <div className={classes.paper}> \r\n              <SocialIcons />\r\n            </div>\r\n            \r\n            <Switch>\r\n              {routes.map((route, index) => (\r\n                // You can render a <Route> in as many places\r\n                // as you want in your app. It will render along\r\n                // with any other <Route>s that also match the URL.\r\n                // So, a sidebar or breadcrumbs or anything else\r\n                // that requires you to render multiple things\r\n                // in multiple places at the same URL is nothing\r\n                // more than multiple <Route>s.\r\n                <Route\r\n                  key={index}\r\n                  path={route.path}\r\n                  exact={route.exact}\r\n                  children={<route.sidebar />}\r\n                />\r\n              ))}\r\n            </Switch>\r\n          </Drawer>\r\n          <main\r\n            className={clsx(classes.content, {\r\n              [classes.contentShift]: open,\r\n            })}\r\n          >\r\n            <div className={classes.drawerHeader} style={{marginTop: -50}} />\r\n            <Switch>\r\n              {routes.map((route, index) => (\r\n                // Render more <Route>s with the same paths as\r\n                // above, but different components this time.\r\n                <Route\r\n                  key={index}\r\n                  path={route.path}\r\n                  exact={route.exact}\r\n                  children={<route.main />}\r\n                />\r\n              ))}\r\n            </Switch>\r\n\r\n            <div style={{marginTop: 40}}>\r\n              <Footer />\r\n            </div>\r\n          </main>\r\n        </Router>\r\n      </div>\r\n\r\n      {/* mobile */}\r\n      <Mobile />\r\n    </div>\r\n  );\r\n}\r\n","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\screens\\enrolled.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\screens\\liveClass.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\screens\\totalModules.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\screens\\deleteHiredData.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\screens\\numTrainers.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\index.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\LiveSupport\\LiveSupport2\\index.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\LiveSupport\\index.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\cart\\components\\CartSucess\\index.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\screens\\quiz\\submissions.js",["414"],"import React from 'react';\r\nimport app from 'firebase/app';\r\nimport Card from '@material-ui/core/Card'\r\nimport 'firebase/firestore'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Challenges from './challenges';\r\nimport Footer from '../../../../components/Footer/footer';\r\n\r\nconst useStyles = theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      marginTop: theme.spacing(10),\r\n      backgroundColor: 'transparent',\r\n    },\r\n    card: {\r\n        padding: theme.spacing(5),\r\n        width:  '80%',\r\n        backgroundColor: 'transparent',\r\n        margin: `${theme.spacing(1)}px auto`,\r\n        [theme.breakpoints.down('sm')]: {\r\n            width:'90%',\r\n            padding: theme.spacing(2),\r\n        },\r\n        list:{\r\n            margin: 30,\r\n        }\r\n        \r\n    },\r\n});\r\nclass Submissions extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state ={\r\n            loading: false,\r\n            users:[],\r\n            counter:1\r\n        };\r\n        this.db = app.firestore()\r\n    }\r\n   \r\n    componentDidMount() {\r\n        this.setState({ loading: true });\r\n        this.db.collection(`users/trainer/dashboard/solutions/solutions`)\r\n        .get()\r\n        .then(querySnapshot =>{\r\n            const data = querySnapshot.docs.map(doc=> doc.data());\r\n            console.log(data)\r\n            this.setState({users:data})\r\n        })\r\n      } \r\n        \r\n      \r\n    render(){\r\n        const { classes } = this.props;\r\n        const {users , counter} = this.state;\r\n        return(\r\n            <div>\r\n                <Challenges />\r\n                <div className={classes.root}>    \r\n                    <Card elevation={0} className={classes.card}>\r\n                        <Typography component='ol'>\r\n                            {users.map(user =>(\r\n                                <Typography component='li' className={classes.list}>\r\n                                    <div key={user.id}> \r\n                                    <Typography  variant='body2'>\r\n                                        Submitted by : <em>{user.user}</em>\r\n                                    </Typography>\r\n                            \r\n                                    <h4>Html</h4>\r\n                                    {user.html}\r\n                                \r\n                                    <h4>Css</h4>\r\n                                    {user.css}\r\n                                \r\n                                    <h4>JavaScript</h4>\r\n                                    {user.js}\r\n                                    <hr/>\r\n                                    </div>\r\n                                </Typography>\r\n                            ))}\r\n                        </Typography>\r\n                    </Card>  \r\n                </div>\r\n\r\n                <Footer />\r\n            </div>\r\n        );\r\n\r\n    }\r\n   \r\n}\r\nexport default withStyles(useStyles)(Submissions);","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\components\\views\\announcements.js",["415","416"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Bell from '@material-ui/icons/Notifications';\r\nimport FirebaseContext from 'firebase'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Footer from '../../../../components/Footer/footer';\r\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport *as ROUTE from '../../../../config/routes';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // width: '80%',\r\n    padding: 20,\r\n    backgroundColor: 'transparent',\r\n    border: '5px solid white'\r\n  },\r\n\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: 'bold',\r\n  },\r\n\r\n  tAnno: {\r\n      fontSize: '90%',\r\n      position: 'absolute',\r\n      marginTop: 20,\r\n      float: 'left',\r\n      color: 'grey'\r\n  },\r\n\r\n  cAnno: {\r\n      marginBottom: 20,\r\n  },\r\n\r\n  fab: {\r\n    margin: theme.spacing(2),\r\n  },\r\n\r\n  absolute: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(2),\r\n    left: theme.spacing(3),\r\n    zIndex: 999\r\n  },\r\n\r\n  container: {\r\n    width: '80%',\r\n    margin: '20px auto',\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: '95%'\r\n    }\r\n  }\r\n}));\r\n\r\nexport default function SimpleAccordion() {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState('panel1');\r\n  const [annts, setAnnts] = React.useState([]);\r\n  const [count, setCount] = React.useState([]);\r\n  const [isNew, setIsNew] = React.useState('');\r\n  // const currentDate = ;\r\n     \r\n        \r\n  React.useEffect( () => {\r\n\r\n    const fetchNew = () => {\r\n      let db = FirebaseContext.firestore().collection(\"users/admin/dashboard/anouncement/anouncement\");\r\n      var startfulldate = new Date();\r\n      let query = db.where('Date', '<=', startfulldate.getDate());\r\n      query.get().then((querySnapshot) => {\r\n        const temDoc = []\r\n        querySnapshot.forEach((doc) => {\r\n          temDoc.push({ id: doc.id, ...doc.data() });\r\n        })\r\n        setAnnts(temDoc);\r\n        setIsNew('New');\r\n        setCount(querySnapshot.size);\r\n        // console.log(tempDoc);\r\n      })\r\n    }\r\n\r\n    fetchNew();\r\n  }, []);\r\n\r\n  const handleChange = (panel) => (event, newExpanded) => {\r\n    setExpanded(newExpanded ? panel : false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n       <Link to={ROUTE.TRAINEE}>\r\n          <Tooltip title=\"Click to go back\" aria-label=\"add\">\r\n              <Fab color=\"primary\" className={classes.absolute}>\r\n                  <KeyboardBackspaceIcon />\r\n              </Fab>\r\n          </Tooltip>\r\n      </Link>\r\n\r\n      <div className={\r\n          classes.container\r\n        }>\r\n        <Accordion className={classes.root} expanded={expanded === 'panel1'} onChange={handleChange('panel1')}>\r\n          <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n          >\r\n          <Typography className={classes.heading}>\r\n            ANNOUNCEMENTS\r\n          </Typography>\r\n\r\n          </AccordionSummary>\r\n            {\r\n              annts.map((anno) => (\r\n                <div key={anno.id}>\r\n                  <AccordionDetails >                \r\n                    <Typography className={classes.cAnno}gutterBottom>\r\n                        {anno.Content}\r\n                    </Typography>\r\n                    <Typography className={classes.tAnno} gutterBottom>\r\n                      {new Date(anno.createdAt).toLocaleDateString(\"en-US\")}<br></br>\r\n                      {anno.Author}\r\n                    </Typography>       \r\n                  </AccordionDetails> \r\n              </div>     \r\n            ))}\r\n\r\n            {annts.length === 0 && (\r\n              <div style={{color: 'red'}}>\r\n                <Bell style={{color: 'grey'}}/>All cleared Up! There are no Announcements\r\n              </div>\r\n            )}\r\n        </Accordion>\r\n      </div>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\screens\\quiz\\challenges.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\screens\\quiz\\problems.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\cart\\index.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\components\\sidebar.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\components\\button.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\components\\textField.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\components\\Footer\\footer.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\mob.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\screens\\quiz\\index.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\components\\permissions.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\screens\\profilePage.js",["417"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Typography,\r\n    Grid,\r\n    Paper,\r\n    ButtonBase,\r\n} from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport LoaderButton from \"../components/loader\";\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport FirebaseContext from 'firebase';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport TextFieldMui from \"../../components/textField\";\r\nimport 'firebase/firestore';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: 'transparent',\r\n        width: '100%',\r\n        height: 'auto',\r\n        margin: '5% 0 0 0'\r\n    },\r\n\r\n    BioData: {\r\n        padding: 20,\r\n        flexGrow: 1\r\n    },\r\n\r\n    pPic: {\r\n        width: '100%',\r\n        height: '100%',\r\n        borderRadius: '50%',\r\n    },\r\n\r\n    paper: {\r\n        padding: theme.spacing(4),\r\n        margin: 'auto auto auto 0',\r\n    },\r\n\r\n    image: {\r\n        width: 180,\r\n        height: 180,\r\n        borderRadius: 'auto',\r\n    },\r\n\r\n    input: {\r\n        display: 'none',\r\n    },\r\n\r\n    uploadButton: {\r\n        position: 'absolute',\r\n        margin: '30% 0 0 70%',\r\n        backgroundColor: '#EDEDED'\r\n    },\r\n\r\n    margin: {\r\n        margin: theme.spacing(3,7),\r\n    },\r\n\r\n    textField: {\r\n        width: '400px',\r\n        display: 'block'\r\n    },\r\n}));\r\n\r\nconst initialState = {\r\n    Oldpassword: '',\r\n    Newpassword: '',\r\n    ConfirmNewpassword: '',\r\n    showPassword: false,\r\n};\r\n\r\n\r\nexport default function ProfilePage() {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState(initialState);\r\n      const [isChanging, setIsChanging] = React.useState(false);\r\n    const [isnotChangingP, setIsnotChangingP] = React.useState(false);\r\n    const [isChangingP, setIsChangingP] = React.useState(false);\r\n        // const allInputs = {imgUrl: ''}\r\n        const [imageAsFile, setImageAsFile] = React.useState('')\r\n        const [imageAsUrl, setImageAsUrl] = React.useState({imgUrl: ''})\r\n      const [currentUserDetails, setcurrentUserDetails] = React.useState({name:'', email:'', password:'', photo: ''})\r\n      const clearState = () => {\r\n        setValues({ ...initialState });\r\n      };\r\n    //   console.log(imageAsFile)\r\n        const handleImageAsFile = (e) => {\r\n            const image = e.target.files[0]\r\n        setImageAsFile(imageFile => (image))\r\n        }\r\n\r\n        const handleFireBaseUpload = e => {\r\n            e.preventDefault()\r\n          console.log('start of upload')\r\n          // async magic goes here...\r\n          if(imageAsFile === '') {\r\n            console.error(`not an image, the image file is a ${typeof(imageAsFile)}`)\r\n          }\r\n          let userCurrent = FirebaseContext.auth().currentUser;\r\n          const uploadTask = FirebaseContext.storage().ref('users/' + userCurrent.uid + `/${imageAsFile.name}`).put(imageAsFile)\r\n          //initiates the firebase side uploading \r\n          uploadTask.on('state_changed', \r\n          (snapShot) => {\r\n            //takes a snap shot of the process as it is happening\r\n            console.log(snapShot)\r\n          }, (err) => {\r\n            //catches the errors\r\n            console.log(err)\r\n          }, () => {\r\n            // gets the functions from storage refences the image storage in firebase by the children\r\n            // gets the download url then sets the image from firebase as the value for the imgUrl key:\r\n            FirebaseContext.auth().onAuthStateChanged(user => {\r\n                if(user) {\r\n                    FirebaseContext.storage().ref('users/' + userCurrent.uid + `/${imageAsFile.name}`).getDownloadURL()\r\n                    .then(fireBaseUrl => {\r\n                    setImageAsUrl(prevObject => ({...prevObject, imgUrl: fireBaseUrl}))\r\n                    // console.log(fireBaseUrl)\r\n                    let db = FirebaseContext.firestore().collection(\"users/trainer/sys_trainers\");\r\n                    db.doc(userCurrent.uid).update({\r\n                        photo: fireBaseUrl\r\n                      });\r\n                    })\r\n                    setIsChanging(true);\r\n                }\r\n            })\r\n          })\r\n        //   window.location.reload();\r\n          }\r\n      \r\n\r\n      class userDetails {\r\n        constructor (name, email, password, photo ) {\r\n            this.name = name;\r\n            this.email = email;\r\n            this.password = password;\r\n            this.photo= photo;\r\n        }\r\n        // toString() {\r\n        //     return this.name + ', ' + this.email + ', ' + this.password;\r\n        // }\r\n    }\r\n    \r\n    // Firestore data converter\r\n    var userDetailsConverter = {\r\n        toFirestore: function(userDetails) {\r\n            return {\r\n                name: userDetails.name,\r\n                email: userDetails.email,\r\n                password: userDetails.password,\r\n                photo: userDetails.photo\r\n                }\r\n        },\r\n        fromFirestore: function(snapshot, options){\r\n            const data = snapshot.data(options);\r\n            const det1 = new userDetails(data.name, data.email, data.password, data.photo);\r\n            return det1\r\n        }\r\n    }\r\n\r\n        function validateForm() {\r\n            return (\r\n            values.Oldpassword.length > 5 &&     //more validation checks needed for the old Password\r\n            values.Newpassword.length > 5 &&\r\n            values.Newpassword === values.ConfirmNewpassword\r\n            );\r\n        }\r\n        \r\n        React.useEffect(() => {\r\n            let user1 = FirebaseContext.auth().currentUser;\r\n            // let uID = FirebaseContext.firestore().collection(\"users\").doc(user1.uid)    \r\n            let db = FirebaseContext.firestore().collection(\"users/trainer/sys_trainers\");\r\n            let query = db.where('userId', '==', user1.uid);\r\n\r\n            query.withConverter(userDetailsConverter).get()\r\n            .then(snapshot => {\r\n                if (snapshot.empty) {\r\n                console.log('No matching documents.');\r\n                return;\r\n                }  \r\n\r\n                snapshot.forEach(doc => {\r\n                    var x = doc.data();\r\n                    setcurrentUserDetails(x)\r\n                // console.log(doc.id, '=>', x);\r\n                ;\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log('Error getting documents', err);\r\n            });\r\n        }, [userDetailsConverter])\r\n\r\n        async function handleChangeClick(event) {\r\n            event.preventDefault();\r\n\r\n            const user = FirebaseContext.auth().currentUser;\r\n            let db = FirebaseContext.firestore().collection(\"users/trainer/sys_trainers\");\r\n            if(values.Oldpassword===currentUserDetails.password){\r\n                db.doc(user.uid).update({\r\n                    password: values.Newpassword\r\n                    });\r\n                    // Get auth credentials from the user for re-authentication. The example below shows\r\n                    // email and password credentials but there are multiple possible providers,\r\n                    // such as GoogleAuthProvider or FacebookAuthProvider.\r\n                    const cred = FirebaseContext.auth.EmailAuthProvider.credential(\r\n                        user.email, \r\n                        currentUserDetails.password\r\n                    );\r\n                    FirebaseContext.auth().currentUser.reauthenticateWithCredential(cred)\r\n                    .then(() => {\r\n                    // User successfully reauthenticated.\r\n                    const newPass = values.Newpassword;\r\n                    console.log('Password updated successfully!');\r\n                    setIsChangingP(true)\r\n                    return FirebaseContext.auth().currentUser.updatePassword(newPass);\r\n                    \r\n                    \r\n                    })\r\n                    .catch((error) => { \r\n                        console.log(error); \r\n                    });\r\n                    \r\n                    // alert('Password changed successfully!');\r\n                    setIsChangingP(true);\r\n                    clearState()\r\n            }else{\r\n                // alert('Oops, please check Old Password!')\r\n                setIsnotChangingP(true);\r\n            }\r\n        } \r\n\r\n\r\n        const handleChange = (prop) => (event) => {\r\n            setValues({ ...values, [prop]: event.target.value });\r\n          };\r\n    \r\n          const handleClose = (event, reason) => {\r\n            if (reason === 'clickaway') {\r\n              return;\r\n            }    \r\n                setIsChangingP(false);\r\n          };\r\n    \r\n          const closeUpload = (event, reason) => {\r\n            if (reason === 'clickaway') {\r\n              return;\r\n            }\r\n                setIsChanging(false);\r\n          };\r\n    \r\n          const handleCloseNot = (event, reason) => {\r\n            if (reason === 'clickaway') {\r\n              return;\r\n            }\r\n                setIsnotChangingP(false);\r\n          };\r\n\r\n  return (\r\n    <Paper elevation={0} className={classes.root}>\r\n        <div className={classes.paper}>\r\n            <Grid alignItems='center' justify=\"center\" container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <ButtonBase className={classes.image}>\r\n                        <form onSubmit={handleFireBaseUpload}>\r\n                            <input \r\n                                accept=\"image/*\" \r\n                                className={classes.input} \r\n                                onChange={handleImageAsFile} \r\n                                id=\"icon-button-file\" \r\n                                type=\"file\" \r\n                            />\r\n                            <label htmlFor=\"icon-button-file\">\r\n                                <IconButton \r\n                                    type=\"submit\" \r\n                                    className={classes.uploadButton} \r\n                                    color=\"primary\" \r\n                                    component=\"span\"\r\n                                >\r\n                                    <PhotoCamera />\r\n                                </IconButton>\r\n                                <LoaderButton\r\n                                    type=\"submit\"\r\n                                    disabled={!imageAsFile}\r\n                                    isLoading={isChanging}\r\n                                    style={{\r\n                                        margin: '200px 0 0 25%',\r\n                                        width:'50%',\r\n                                        position: 'absolute',\r\n                                    }}\r\n                                >\r\n                                    UPLOAD\r\n                                </LoaderButton>\r\n                                <Snackbar open={isChanging} autoHideDuration={6000} onClose={closeUpload}>\r\n                                    <Alert onClose={closeUpload} severity=\"success\">\r\n                                        Great! Photo updated successfully.\r\n                                    </Alert>\r\n                                </Snackbar>\r\n                            </label>\r\n                        </form>\r\n                        <img \r\n                            className={classes.pPic}  \r\n                            src={\r\n                                    imageAsUrl.imgUrl || \r\n                                    currentUserDetails.photo || \r\n                                    'https://www.pngitem.com/pimgs/m/442-4426913_avatar-icon-png-white-png-download-white-person.png'\r\n                                }\r\n                            alt=''\r\n                        />\r\n                    </ButtonBase>\r\n                    <Grid style={{\r\n                        margin: 20\r\n                    }}>\r\n                        <Grid alignItems='left' justify=\"left\" container spacing={2}>\r\n                            <Grid item>\r\n                                <Typography gutterBottom variant=\"h5\" align='left'>\r\n                                    {currentUserDetails.name}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" align='left' style={{ cursor: 'pointer', }}>\r\n                                    {currentUserDetails.email}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid alignItems='center' justify=\"center\" container spacing={2} xs={12} sm={6}>\r\n                    <form onSubmit={handleChangeClick}>\r\n                        <FormGroup className={clsx(classes.margin, classes.textField)} variant=\"outlined\">\r\n                            <Typography gutterBottom variant=\"h5\" align='left'>\r\n                                Change Password\r\n                            </Typography>\r\n                        </FormGroup>\r\n                        <FormGroup className={classes.margin}>\r\n                            <TextFieldMui\r\n                                style={{ width:'100%' }}\r\n                                id='Old-Password'\r\n                                type= 'password'\r\n                                value={values.Oldpassword}\r\n                                onChange={handleChange('Oldpassword')}\r\n                                label='Old Password'\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </FormGroup>\r\n                        \r\n                        <FormGroup className={classes.margin} variant=\"outlined\">\r\n                            <TextFieldMui\r\n                                style={{ width:'100%' }}\r\n                                id='New-Password'\r\n                                type= 'password'\r\n                                value={values.Newpassword}\r\n                                onChange={handleChange('Newpassword')}\r\n                                label='New Password'\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup className={classes.margin} variant=\"outlined\">\r\n                            <TextFieldMui\r\n                                style={{ width:'100%' }}\r\n                                id=' Cofirm-New-Password'\r\n                                type= 'password'\r\n                                value={values.ConfirmNewpassword}\r\n                                onChange={handleChange('ConfirmNewpassword')}\r\n                                label='Cofirm New Password'\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup className={classes.margin} variant=\"outlined\">\r\n                            <LoaderButton\r\n                                type=\"submit\"\r\n                                disabled={!validateForm()}\r\n                                isLoading={isChangingP}\r\n                                style={{\r\n                                    // marginLeft: '10%',\r\n                                    width:'100%'\r\n                                }}\r\n                            >\r\n                                Change\r\n                            </LoaderButton>\r\n                        </FormGroup>\r\n                        <Snackbar open={isChangingP} autoHideDuration={6000} onClose={handleClose}>\r\n                            <Alert onClose={handleClose} severity=\"success\">\r\n                                Great! Password changed successfully.\r\n                            </Alert>\r\n                        </Snackbar>\r\n                        <Snackbar open={isnotChangingP} autoHideDuration={6000} onClose={handleCloseNot}>\r\n                            <Alert onClose={handleCloseNot} severity=\"error\">\r\n                                Oops! Check Old Password.\r\n                            </Alert>\r\n                        </Snackbar>\r\n                    </form>\r\n                </Grid>\r\n            </Grid> \r\n        </div>\r\n    </Paper>\r\n  );\r\n}\r\n","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\components\\menu.js",["418"],"import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport AssessmentIcon from '@material-ui/icons/Assessment';\r\nimport { withFirebase } from '../../../firebase';\r\nimport { Link } from 'react-router-dom';\r\nimport *as ROUTES from '../../../config/routes';\r\n\r\nconst menu = ({ firebase }) => {\r\n  return (\r\n    <div>\r\n      <MenuList>\r\n        <Link to={ROUTES.TRAINER}  style={{\r\n          color: 'white', \r\n          textDecoration: 'none'\r\n          }}>\r\n          <MenuItem>\r\n            <HomeIcon style={{\r\n                color: '#CCCCCC',\r\n                marginRight: '10px'\r\n            }}/> Home\r\n          </MenuItem>\r\n        </Link>\r\n\r\n        {/* <Link to={ROUTES.PROFILE}  style={{\r\n          color: 'white', \r\n          textDecoration: 'none'\r\n          }}>\r\n          <MenuItem>\r\n            <AccountBoxIcon style={{\r\n              color: '#D5E8D4',\r\n              marginRight: '10px'\r\n              }} \r\n            /> Profile\r\n          </MenuItem>\r\n        </Link> */}\r\n\r\n        <Link to={ROUTES.INTERVIEWS}  style={{\r\n          color: 'white', \r\n          textDecoration: 'none'\r\n          }}>\r\n          <MenuItem>\r\n              <AssessmentIcon style={{\r\n              marginRight: '10px'\r\n              }} /> Interviews\r\n          </MenuItem>\r\n        </Link>\r\n        \r\n        {/* <MenuItem onClick={firebase.doSignOut}>\r\n          <i className=\"fa fa-power-off\" style={{\r\n            // fontSize:'36px',\r\n            backgroundColor: '#DF8C42',\r\n            color: 'white',\r\n            borderRadius: '50%',\r\n            padding: '5px',\r\n            marginRight: '10px'\r\n            }}>\r\n          </i>Logout\r\n        </MenuItem> */}\r\n      </MenuList>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withFirebase(menu);\r\n","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\screens\\schedule.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\screens\\assignment\\index.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\screens\\hire.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\components\\views\\views.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\session\\order-context.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\views\\charts.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\components\\loader.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\card\\CardFooter.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\card\\CardHeader.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\card\\CardBody.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\card\\Card.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\productDetails\\index.js",["419","420","421","422"],"/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport {jsx} from '@emotion/core';\r\n\r\nimport React from 'react';\r\nimport * as colors from \"../../styles/colors\";\r\nimport Footer from \"../../components/Footer/footer\";\r\nimport * as mq from '../../styles/media-queries';\r\nimport modules from \"../cart/components/data/modules.json\";\r\n\r\n// MUI stuff\r\nimport  makeStyles  from '@material-ui/core/styles/makeStyles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { FormGroup, Spinner} from '../../components';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withFirebase } from '../../firebase';\r\nimport useCallbackStatus from '../../utils/use-callback-status';\r\nimport { Link } from '@reach/router';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    grid: {\r\n      width: '100%', \r\n      margin: 'auto',\r\n      [theme.breakpoints.down('sm')]: {\r\n          width: '100%'\r\n      }\r\n    }\r\n  }));\r\n\r\nconst Product = (props) => {\r\n    const classes = useStyles();\r\n    const learnContent = [\"content\", \"content\", \"content\", \"content\", \"content\", \"content\"]\r\n    async function getModule(moduleId) {\r\n        return await (props.firebase.doGetModule(moduleId)\r\n        .then(snapshot => {\r\n             return snapshot.docs\r\n            }))\r\n      }\r\n    const { data, status, isPending, isRejected, isResolved, error, run} = useCallbackStatus()\r\n    React.useEffect(() => {\r\n      run(getModule(props.moduleId))\r\n    },[]);\r\n    const book = modules.find(item => item.id === props.moduleId);\r\n    if (isPending) {\r\n        return (\r\n          <div css={{marginTop: '2em', fontSize: '2em', textAlign: 'center'}}>\r\n            <Spinner />\r\n          </div>\r\n        )\r\n      }\r\n      if (isRejected) {\r\n        return (\r\n          <div css={{color: 'red'}}>\r\n            <p>Oh no, there was an error.</p>\r\n            <pre>{error.message}</pre>\r\n          </div>\r\n        )\r\n      }\r\n      if (isResolved && !book) {\r\n        return (\r\n          <div css={{color: 'red'}}>\r\n            <p>Hmmm... Something went wrong. Please try another book.</p>\r\n          </div>\r\n        )\r\n      }\r\n    const {title, author, coverImageUrl, publisher, synopsis} = book;\r\n    return ( \r\n        <div className={classes.root}>\r\n        <Grid container spacing={6} className={classes.grid}>\r\n            <Grid container spacing={6} style={{\r\n                display: 'flex',\r\n                justifyContent: 'space-evenly',\r\n               }} className={classes.grid}>\r\n                <Grid item xs={12} sm={6} style={{marginTop: '40px'}}>\r\n                    <Card style={{\r\n                        display: 'flex',\r\n                        flexDirection: 'row',\r\n                        justifyContent: 'space-evenly',\r\n                        alignItems: 'center',\r\n                        backgroundColor: colors.gray,\r\n                        height: '15vh',\r\n                    }}>\r\n                        <CardMedia>\r\n                        <Tooltip title=\"Cart\" aria-label=\"Cart\" style={{}}>\r\n                        <Fab>\r\n                        <AddShoppingCartIcon style={{color: colors.blue}} />\r\n                        </Fab>\r\n                    </Tooltip> \r\n                        </CardMedia>\r\n                        <CardContent style={{textAlign: 'center'}}>\r\n                            <Typography variant=\"h6\" color=\"textSecondary\">Javascript</Typography>\r\n                            <Typography style={{paddingTop: '10px'}} variant=\"body2\">Walkthrough Javascript</Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                    <Card style={{\r\n                       textAlign: 'center',\r\n                        backgroundColor: colors.gray,\r\n                        height: 'inherient',\r\n                        marginTop: '40px',\r\n                        padding: \"50px 20px\"\r\n                    }}>\r\n                        <CardContent>\r\n                            <Typography variant=\"body\" color=\"textSecondary\">What you will learn!!</Typography>\r\n                            {learnContent.map( content => {\r\n                               return ( <Typography style={{paddingTop: '8px'}} key={content} variant=\"body2\"><a href=\"#\">{content}</a></Typography>)\r\n                            }) }\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                <Card style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        borderRadius: '25px',\r\n                        height: '70vh',\r\n                    }}>\r\n                        <CardContent style={{\r\n                            textAlign: 'center'}}>\r\n                            <div>\r\n                                <Typography variant=\"h6\">Javascript</Typography>\r\n                                <Typography style={{paddingTop: '10px'}} \r\n                                variant=\"subtitle2\">Preview this Content</Typography>\r\n                            </div>\r\n                            <div style={{padding: \"80px 0px\"}}>\r\n                                <Typography variant=\"subtitle1\">Ush. 50000.00</Typography>\r\n                            </div>\r\n                            <div>\r\n                                <FormGroup>\r\n                                  <Link to={`/cart/checkout/${book.id}`}>\r\n                                    <Button style={{backgroundColor: '#FF0000'}}\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        type=\"submit\"\r\n                                        css={{width: \"200px\"}}\r\n                                        >Buy now!</Button>\r\n                                    </Link>\r\n                                </FormGroup>\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12}>\r\n            <div>\r\n      <div\r\n        css={{\r\n          display: 'grid',\r\n          gridTemplateColumns: '1fr 2fr',\r\n          gridGap: '2em',\r\n          marginBottom: '1em',\r\n          [mq.small]: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n          },\r\n        }}\r\n      >\r\n        <img\r\n          src={coverImageUrl}\r\n          alt={`${title} book cover`}\r\n          css={{\r\n            width: '100%',\r\n            maxWidth: 200,\r\n          }}\r\n        />\r\n        <div>\r\n          <div css={{display: 'flex', position: 'relative'}}>\r\n            <div css={{flex: 1, justifyContent: 'space-between'}}>\r\n              <h1>{title}</h1>\r\n              <div>\r\n                <i>{author}</i>\r\n                <span css={{marginRight: 6, marginLeft: 6}}>|</span>\r\n                <i>{publisher}</i>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <p>{synopsis}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n            </Grid>\r\n               \r\n        </Grid>\r\n        <Footer/>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default withFirebase(Product);","D:\\projects\\skylla-learning-community\\client\\src\\App\\utils\\use-callback-status.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\styles\\jss\\cardStyle.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\styles\\media-queries.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\styles\\colors.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\styles\\jss\\cardFooterStyle.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\styles\\jss\\cardBodyStyle.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\styles\\jss\\cardHeaderStyle.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\styles\\jss\\materialReact.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\cart\\imodules.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\components\\navbar-checkout.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\cart\\discover.js",["423"],"/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport {jsx} from '@emotion/core'\r\n\r\nimport React from 'react';\r\nimport {FaSearch, FaTimes} from 'react-icons/fa'\r\nimport { Spinner } from \"../../components\";\r\nimport ModuleRow from \"./components/ModuleRow\";\r\nimport modules from \"./components/data/modules.json\";\r\n\r\n//MUI stuff\r\nimport  makeStyles  from '@material-ui/core/styles/makeStyles';\r\nimport Tooltip from '@reach/tooltip';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport { withFirebase } from '../../firebase';\r\nimport useCallbackStatus from '../../utils/use-callback-status';\r\nimport { useOrderItemState } from '../../session/order-context';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      fontFamily: \"Helvetica\",\r\n    },\r\n    grid: {\r\n      width: '90%', \r\n      margin: 'auto',\r\n      [theme.breakpoints.down('sm')]: {\r\n          width: '100%'\r\n      }\r\n    }\r\n  }));\r\n\r\nconst Discover = (props) => {\r\n  const getModules = async () => {\r\n    return await (props.firebase.doGetModules()\r\n    .then(snapshot => {\r\n      return snapshot.docs;\r\n      // if(result.exists){\r\n      //   return result.data();\r\n      // } else {\r\n      //   return [];\r\n      // }\r\n    })\r\n    )\r\n  }\r\n  async function search(query) {\r\n    return await (props.firebase.doSearch(query)\r\n    .then(snapshot => {\r\n      return snapshot.docs;\r\n    })\r\n    );\r\n  }\r\n    const classes = useStyles();\r\n    const [query, setQuery] = React.useState('');\r\n    const [hasSearched, setHasSearched] = React.useState();\r\n    console.log(getModules());\r\n    const { data, status, isPending, isRejected, isResolved, error, run} = useCallbackStatus()\r\n    React.useEffect(() => {\r\n      run(getModules())\r\n    },[]);\r\n    console.log(isPending);\r\n    console.log(isRejected);\r\n    console.log(isResolved);\r\n    console.log(status);\r\n    console.log(error);\r\n    console.log(data);\r\n      let books = modules || data;\r\n      const orders = useOrderItemState()\r\n      console.log(orders);\r\n      console.log(books);\r\n      books = books.filter(li => !orders.find(item => item.id === li.id));\r\n      console.log(books);\r\n    \r\n    function handleInputChange(e) {\r\n        setQuery(e.target.value)\r\n    }\r\n\r\n    function handleSearchClick(e) {\r\n        e.preventDefault()\r\n        setHasSearched(true)\r\n        run(search(query))\r\n    }\r\n    return ( \r\n        <div className={classes.root}>\r\n            <div>\r\n        <form onSubmit={handleSearchClick}>\r\n          <input\r\n            onChange={handleInputChange}\r\n            placeholder=\"Search modules...\"\r\n            id=\"search\"\r\n            css={{width: '100%'}}\r\n          />\r\n          <Tooltip label=\"Search Books\">\r\n            <label htmlFor=\"search\">\r\n              <button\r\n                type=\"submit\"\r\n                css={{\r\n                  border: '0',\r\n                  position: 'relative',\r\n                  marginLeft: '-35px',\r\n                  background: 'transparent',\r\n                }}\r\n              >\r\n                {isPending ? (\r\n                  <Spinner />\r\n                ) : isRejected ? (\r\n                  <FaTimes aria-label=\"error\" css={{color: 'red'}} />\r\n                ) : (\r\n                  <FaSearch aria-label=\"search\" />\r\n                )}\r\n              </button>\r\n            </label>\r\n          </Tooltip>\r\n        </form>\r\n\r\n        {isRejected ? (\r\n          <div css={{color: 'red'}}>\r\n            <p>There was an error:</p>\r\n            <pre>{error.message}</pre>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n      <div>\r\n        {hasSearched ? null : (\r\n            <div css={{marginTop: 20, fontSize: '1.1em', textAlign: 'center'}}>\r\n                <p>Welcome to the discover page.</p>\r\n                <p>Here, let me load a few modules for you...</p>\r\n                {isPending ? (\r\n                <div css={{width: '100%', margin: 'auto'}}>\r\n                    <Spinner />\r\n                </div>\r\n                ) : isResolved && books.length ? (\r\n                <p>Here you go! Find more modules with the search bar above.</p>\r\n                ) : isResolved && !books.length ? (\r\n                <p>\r\n                    Hmmm... I couldn't find any modules to suggest for you. Sorry.\r\n                </p>\r\n                ) : null}\r\n            </div>\r\n            )}\r\n             {isResolved ? (\r\n          books.length ? (\r\n            <List css={{marginTop: 20}}>\r\n              {books.map(book => (\r\n                <ListItem key={book.id}>\r\n                  <ModuleRow key={book.id} book={book} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          ) : hasSearched ? (\r\n            <div css={{marginTop: 20, fontSize: '1.2em', textAlign: 'center'}}>\r\n              <p>Hmmm... can't find any books</p>\r\n              <p>Here, let me load a few books for you...</p>\r\n              {isPending ? (\r\n                <div css={{width: '100%', margin: 'auto'}}>\r\n                  <Spinner />\r\n                </div>\r\n              ) : (\r\n                <p>\r\n                  Hmmm... I couldn't find any books with the query \"{query}.\"\r\n                  Please try another.\r\n                </p>\r\n              )}\r\n            </div>\r\n          ) : null\r\n        ) : null}\r\n      </div>\r\n        </div>\r\n        \r\n     );\r\n}\r\n \r\nexport default withFirebase(Discover);\r\n\r\n","D:\\projects\\skylla-learning-community\\client\\src\\App\\session\\checkout-context.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\LiveSupport\\Tabs.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\LiveSupport\\MenuLive.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\checkout\\index.js",["424","425","426","427","428","429","430","431","432","433","434","435"],"/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport {jsx} from '@emotion/core';\r\n\r\nimport React, { useState } from 'react';\r\nimport { CountryRegionData } from \"react-country-region-selector\";\r\nimport * as colors from \"../../styles/colors\";\r\nimport Footer from \"../../components/Footer/footer\";\r\nimport TextFieldMui from \"../components/textField\";\r\nimport VisaLogo from \"./static/Icon_Visa.png\";\r\nimport MasterLogo from \"./static/Icon_MasterCard.png\";\r\nimport { dispatchCTX, stateCTX } from \"../../session/checkout-context\";\r\nimport * as mq from '../../styles/media-queries';\r\nimport modules from \"../cart/components/data/modules.json\";\r\n\r\n// MUI stuff\r\nimport  makeStyles  from '@material-ui/core/styles/makeStyles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport PhoneIphoneOutlined from '@material-ui/icons/PhoneIphoneOutlined';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { FormGroup, Spinner} from '../../components';\r\nimport Button from '@material-ui/core/Button';\r\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\r\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\r\nimport {\r\n    FormControl, \r\n    withStyles, \r\n    CardHeader, \r\n    InputLabel, \r\n    MenuItem, \r\n    Select, \r\n    Table, \r\n    TableBody, \r\n    TableCell, \r\n    TextField, \r\n    TableRow, \r\n    TableFooter, \r\n    RadioGroup, \r\n    Paper, \r\n    Radio, \r\n    Accordion, \r\n    IconButton, \r\n    AccordionDetails, \r\n    AccordionSummary \r\n} from '@material-ui/core';\r\nimport useCallbackStatus from '../../utils/use-callback-status';\r\nimport { withFirebase } from '../../firebase';\r\nimport { completePayment } from '../cart/sandbox';\r\n\r\nconst StyledToggleButton = withStyles({\r\n    root: {\r\n      fontFamily: 'Arial',\r\n      fontSize: '14px',\r\n      lineHeight: '20px',\r\n      letterSpacing: '0.25px',\r\n      color: colors.gray80,\r\n      padding: '15px 15px',\r\n      textTransform: 'none',\r\n      width: '100%',\r\n      '&$selected': {\r\n        backgroundColor: 'rgba(33, 137, 214, 0.14)',\r\n        color: 'rgb(26, 88, 159)',\r\n        '&:hover': {\r\n          backgroundColor: 'rgba(33, 137, 214, 0.14)',\r\n          color: 'rgb(26, 88, 159)',\r\n        },\r\n      },\r\n    },\r\n    selected: {\r\n    },\r\n  })(ToggleButton);\r\n  \r\n  const StyledGroupButton = withStyles({\r\n    root: {\r\n      padding: '15px 15px',\r\n      width: '100%',\r\n    },\r\n  })(ToggleButtonGroup);\r\n  const SavedCard = ({...props}) => (\r\n    <Accordion style={{backgroundColor: colors.bluegray, width: \"100%\"}}>\r\n    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <span style={{fontSize: \"15px\"}}>\r\n            <IconButton style={{padding: \"0px\"}}>\r\n                <Radio name={props.card.cardNo} value={props.card.cardNo} \r\n                style={{padding: \"0px 0px 0px 10px\", color: \"#FFC107\"}}/>\r\n            </IconButton>\r\n            {props.card.type === \"Visa card\"? <img style={{paddingRight: \"20px\"}} \r\n            src={VisaLogo} alt=\"visa\"/>: <img style={{paddingRight: \"20px\"}} \r\n            src={MasterLogo} alt=\"master\"/> }\r\n            {props.card.type} \r\n        </span> \r\n    </AccordionSummary>\r\n    <AccordionDetails>\r\n    <Card style={{\r\n    backgroundColor: \"#FFF\",\r\n    padding: \"30px 25px\"}}>\r\n    <FormGroup style={{backgroundColor: \"#fff\"}}>\r\n    <TextFieldMui \r\n        type =\"text\" \r\n        value={props.card.cardName}\r\n        label = \"Name on Card\"\r\n        inputProps ={{style: {fontSize: '13.5px'}}}\r\n        />\r\n    </FormGroup>\r\n    <FormGroup style={{backgroundColor: \"#fff\", marginTop: \"10px\" }}>\r\n    <TextFieldMui \r\n        type =\"text\"\r\n        value={props.card.cardNo}\r\n        label = \"Card Number\"\r\n        inputProps ={{ style: {fontSize: '13.5px'}}}\r\n    />\r\n    </FormGroup>\r\n<div style={{display: \"flex\", justifyContent: \"space-between\", marginTop: \"10px\"}} >\r\n    <div style={{ display: \"flex\"}}>\r\n        <FormGroup style={{width: \"100px\" ,backgroundColor: colors.base}}>\r\n            <TextFieldMui \r\n                type =\"text\"\r\n                value={props.card.expiryMonth}\r\n                label = \"MM\"\r\n                inputProps ={{ style: {fontSize: '13px'}}}\r\n                />\r\n        </FormGroup>\r\n        <FormGroup style={{width: \"100px\", backgroundColor: colors.base}}>\r\n            <TextFieldMui \r\n                inputProps ={{ style: {fontSize: '13px'}}}\r\n                value={props.card.expiryYear}\r\n                type =\"text\"\r\n                label = \"YYYY\"\r\n                />\r\n        </FormGroup>\r\n    </div>\r\n    <FormGroup style={{width: \"100px\", backgroundColor: colors.base}}>\r\n        <TextFieldMui \r\n            type =\"text\"\r\n            value={props.card.CCV}\r\n            inputProps ={{ style: {fontSize: '13.5px'}}}\r\n            label = \"CCV\"\r\n            />\r\n    </FormGroup>\r\n</div>\r\n  </Card>\r\n    </AccordionDetails>\r\n</Accordion> \r\n);\r\n\r\n  export function Savedcards (props) {\r\n    const dispatch = React.useContext(dispatchCTX);\r\n    const [value, setValue] = React.useState(\"add\");\r\n    const [name, setName] = React.useState(\"add\");\r\n    const [cardName, setCardName] = React.useState(\"\");\r\n    const [cardNo, setCardNo] = React.useState(\"\");\r\n    const [expiryMonth, setExpiryMonth] = React.useState(\"\");\r\n    const [expiryYear, setExpiryYear] = React.useState(\"\");\r\n    const [CCV, setCCV] = React.useState(\"\");\r\n    const onChangeCard = (event) => {\r\n    setValue(event.target.value);\r\n    setName(event.target.name);\r\n    }\r\n    const selectedCard = (card) => {\r\n        dispatch({type: \"selected\", payload: card});\r\n    }\r\n    React.useEffect(() => {\r\n        if (name === \"add\") {\r\n            const card = {\r\n                cardName: cardName, \r\n                cardNo: cardNo,\r\n                expiryMonth: expiryMonth,\r\n                expiryYear: expiryYear,\r\n                CCV: CCV\r\n            }\r\n            dispatch({type: \"add\", payload: card});\r\n        }\r\n    },[name, cardName, cardNo, expiryYear, expiryMonth, CCV]);\r\n    React.useEffect(() => {\r\n        [\r\n            {\r\n                type:\"Visa card\",\r\n                cardName: \"kayongo david\",\r\n                cardNo: \"1234-4567-234\",\r\n                expiryMonth: \"JUN\",\r\n                expiryYear: \"2020\",\r\n                CCV: \"1234\"\r\n        }, \r\n        {\r\n            type: \"Master card\",\r\n            cardName: \"kayongo david\",\r\n            cardNo: \"1234-4567-284\",\r\n            expiryMonth: \"JUN\",\r\n            expiryYear: \"2020\",\r\n            CCV: \"1234\"\r\n        \r\n        } ].map(item => {\r\n            switch (name) {\r\n                case item.cardNo:\r\n                    selectedCard(item);\r\n                    break;\r\n                default:\r\n                    break;\r\n        }\r\n        });\r\n    },[value, name]);\r\n    return ( \r\n    <div>\r\n    <RadioGroup \r\n    name={name}\r\n    value={value}\r\n    onChange={onChangeCard}\r\n    >\r\n        <Accordion style={{backgroundColor: colors.bluegray, width: \"100%\"}}>\r\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <span style={{fontSize: \"15px\"}}>\r\n            <IconButton style={{padding: \"0px\"}}>\r\n                <Radio name=\"add\" value=\"add\" style={{padding: \"0px 40px 0px 10px\", color: \"#FFC107\"}}/>\r\n            </IconButton>\r\n            <AddIcon style={{color: colors.gray80}}  />  \r\n            Add card\r\n        </span> \r\n    </AccordionSummary>\r\n    <AccordionDetails>\r\n    <Card style={{\r\n            backgroundColor: \"#FFF\",\r\n            padding: \"30px 25px\"}}>\r\n            <FormGroup style={{backgroundColor: \"#fff\"}}>\r\n            <TextFieldMui \r\n                type =\"text\"\r\n                variant=\"outlined\"\r\n                value={cardName}\r\n                onChange={(ev) => setCardName(ev.target.value)}\r\n                label = \"Name on Card\"\r\n                inputProps ={{ style: {fontSize: '13.5px'}}}\r\n                />\r\n            </FormGroup>\r\n            <FormGroup style={{backgroundColor: \"#fff\", marginTop: \"10px\" }}>\r\n            <TextFieldMui \r\n                type =\"text\"\r\n                variant=\"outlined\"\r\n                label = \"Card Number\"\r\n                value={cardNo}\r\n                onChange={(ev) => setCardNo(ev.target.value)}\r\n                inputProps ={{ style: {fontSize: '13.5px'}}}\r\n            />\r\n            </FormGroup>\r\n        <div style={{display: \"flex\", justifyContent: \"space-between\", marginTop: \"10px\"}} >\r\n            <div style={{ display: \"flex\"}}>\r\n                <FormGroup style={{width: \"100px\" ,backgroundColor: colors.base}}>\r\n                    <TextFieldMui \r\n                        type =\"text\"\r\n                        variant=\"outlined\"\r\n                        label = \"MM\"\r\n                        value={expiryMonth}\r\n                        onChange={(ev) => setExpiryMonth(ev.target.value)}\r\n                        inputProps ={{ style: {fontSize: '13px'}}}\r\n                        />\r\n                </FormGroup>\r\n                <FormGroup style={{width: \"100px\", backgroundColor: colors.base}}>\r\n                    <TextFieldMui \r\n                        inputProps ={{ style: {fontSize: '13px'}}}\r\n                        type =\"text\"\r\n                        variant=\"outlined\"\r\n                        label = \"YYYY\"\r\n                        value={expiryYear}\r\n                        onChange={(ev) => setExpiryYear(ev.target.value)}\r\n                        />\r\n                </FormGroup>\r\n            </div>\r\n            <FormGroup style={{width: \"100px\", backgroundColor: colors.base}}>\r\n                <TextFieldMui \r\n                    type =\"text\"\r\n                    variant=\"outlined\"\r\n                    inputProps ={{ style: {fontSize: '13.5px'}}}\r\n                    label = \"CCV\"\r\n                    value={CCV}\r\n                    onChange={(ev) => setCCV(ev.target.value)}\r\n                    />\r\n            </FormGroup>\r\n        </div>\r\n        <FormGroup style={{display: \"flex\", flexDirection: 'row', marginTop: \"30px\"}}>\r\n            <TextField\r\n            type=\"checkbox\"\r\n            variant=\"outlined\"\r\n            checked={true}\r\n            />\r\n            <Typography variant=\"caption\" style={{paddingLeft: \"30px\"}}>\r\n                Remember this Card\r\n            </Typography>\r\n        </FormGroup>\r\n        </Card>\r\n    </AccordionDetails>\r\n    </Accordion>\r\n            {[\r\n                {\r\n                    type:\"Visa card\",\r\n                    cardName: \"kayongo david\",\r\n                    cardNo: \"1234-4567-234\",\r\n                    expiryMonth: \"JUN\",\r\n                    expiryYear: \"2020\",\r\n                    CCV: \"1234\"\r\n            }, \r\n            {\r\n                type: \"Master card\",\r\n                cardName: \"kayongo david\",\r\n                cardNo: \"1234-4567-284\",\r\n                expiryMonth: \"JUN\",\r\n                expiryYear: \"2020\",\r\n                CCV: \"1234\"\r\n            \r\n            } ].map(item => {\r\n                return (\r\n                    <SavedCard card={item} />\r\n                );\r\n            })}\r\n        </RadioGroup>\r\n        </div>\r\n    );\r\n        \r\n}\r\n  \r\n  export function MoMoPay () {\r\n      const [name, setName] = React.useState(\"momo\");\r\n      const [value, setValue] = React.useState(\"momo\");\r\n      const [partyId, setPartyId] = React.useState(\"\");\r\n      const dispatch = React.useContext(dispatchCTX);\r\n\r\n      const handleChangeCard = (event) => {\r\n          setValue(event.target.value);\r\n          setName(event.target.name);\r\n      }\r\n      const handleChangeEvent = (event) => {\r\n        setPartyId(event.target.value);\r\n        dispatch({type: \"partyId\", payload: event.target.value});\r\n    };\r\n      return (\r\n          <RadioGroup\r\n          name={name}\r\n          value={value}\r\n          onChange={handleChangeCard}\r\n          >\r\n        <Accordion style={{backgroundColor: colors.bluegray, width: \"100%\"}}>\r\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <span style={{fontSize: \"15px\"}}>\r\n            <IconButton style={{padding: \"0px\"}}>\r\n                <Radio name=\"momo\" value=\"momo\" style={{padding: \"0px 20px 0px 10px\", color: \"#FFC107\"}}/>\r\n            </IconButton>\r\n            {/* <CreditCardOutlinedIcon style={{color: \"#00ffbg\"}}/>   */}\r\n            MoMo Pay\r\n        </span> \r\n    </AccordionSummary>\r\n    <AccordionDetails>\r\n    <Card style={{\r\n            width: \"100%\",\r\n            backgroundColor: \"#FFF\",\r\n            padding: \"30px 25px\"}}>\r\n            <FormGroup style={{backgroundColor: \"#fff\"}}>\r\n            <TextFieldMui \r\n                type =\"text\"\r\n                variant=\"outlined\"\r\n                label = \"Phone number\"\r\n                value={partyId}\r\n                onChange={handleChangeEvent}\r\n                inputProps ={{ style: {fontSize: '13.5px'}}}\r\n                />\r\n            </FormGroup>\r\n        </Card>\r\n    </AccordionDetails>\r\n    </Accordion>\r\n    <Accordion style={{backgroundColor: colors.bluegray, width: \"100%\"}}>\r\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <span style={{fontSize: \"15px\"}}>\r\n            <IconButton style={{padding: \"0px\"}}>\r\n                <Radio name=\"airtel\" value=\"airtel\" style={{padding: \"0px 20px 0px 10px\", color: \"#FFC107\"}}/>\r\n            </IconButton> \r\n            Airtel\r\n        </span> \r\n    </AccordionSummary>\r\n    <AccordionDetails>\r\n    <Card style={{\r\n            backgroundColor: \"#FFF\",\r\n            padding: \"30px 25px\"}}>\r\n            <FormGroup style={{backgroundColor: \"#fff\"}}>\r\n            <TextFieldMui \r\n                type =\"text\"\r\n                variant=\"outlined\"\r\n                label = \"Name on Card\"\r\n                inputProps ={{ style: {fontSize: '13.5px'}}}\r\n                />\r\n            </FormGroup>\r\n        </Card>\r\n    </AccordionDetails>\r\n    </Accordion> \r\n        </RadioGroup>\r\n      );\r\n  }\r\n  export function ObjectViewCard(props) {\r\n    const classes = useStyles();\r\n  \r\n    const [alignment, setAlignment] = React.useState('left');\r\n    const [isExpanded, setIsExpanded] = useState(false);\r\n    \r\n    const handleChange = (\r\n      event,\r\n      newAlignment\r\n    ) => {\r\n      setAlignment(newAlignment);\r\n    };\r\n  \r\n    const children = [\r\n      <StyledToggleButton key={1} value=\"left\">\r\n        {props.leftButtonContent}\r\n      </StyledToggleButton>,\r\n      <StyledToggleButton key={2} value=\"right\">\r\n        {props.rightButtonContent}\r\n      </StyledToggleButton>,\r\n    ];\r\n    return (\r\n        <FormGroup>\r\n            <Card>\r\n                <hr className={classes.divider}/>\r\n            <div \r\n                style={{textAlign: 'center'}} \r\n                className={`row ${classes.rowContainer}`}\r\n                ></div>\r\n            <StyledGroupButton value={alignment} exclusive onChange={handleChange}>\r\n                {children}\r\n            </StyledGroupButton>\r\n            </Card>\r\n            <Paper style={{padding: \"20px\", margin: \"10px 0px\"}}>\r\n            {\r\n            alignment === \"left\" ? <MoMoPay />:\r\n            <Savedcards />\r\n            }\r\n        </Paper>\r\n      </FormGroup>\r\n      );\r\n    }\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      width: '100%', \r\n      margin: 'auto',\r\n    },\r\n    grid: {\r\n      width: '100%', \r\n      margin: 'auto',\r\n      [theme.breakpoints.down('sm')]: {\r\n          width: '100%'\r\n      }\r\n    }\r\n  }));\r\n\r\nconst Checkout = (props) => {\r\n    const dispatch = React.useContext(dispatchCTX);\r\n    const context = React.useContext(stateCTX);\r\n    const [loading, setLoading] = React.useState(false)\r\n    const [country, setCountry] = React.useState('select country');\r\n    const classes = useStyles();\r\n    // const learnContent = [\"content\", \"content\", \"content\", \"content\", \"content\", \"content\"]\r\n    const handleChangeEvent = (event) => {\r\n        event.preventDefault();\r\n        setCountry(event.target.value)\r\n        dispatch({type: \"address\", payload: event.target.value});\r\n    };\r\n    const handleCheckout = (event) => {\r\n        event.preventDefault();\r\n        setLoading(true);\r\n        const {cardDetails, billingAddress, totalPrice, partyId } = context;\r\n        const orderDetails = {\r\n            userId : props.firebase.auth.currentUser.uid,\r\n            course: data,\r\n            payment: context,\r\n        }\r\n        completePayment(partyId, \"10000\").then(() => {\r\n            return ( props.firebase.doAddItemToCart(orderDetails)\r\n            .then(() => {\r\n                setLoading(false)\r\n                props.history.push(`/cart/module/message`)\r\n            }).catch(err => console.log(err)))\r\n        }).catch(err => console.log(err))\r\n       \r\n       \r\n    }\r\n    async function getModule(bookId) {\r\n        return await (props.firebase.doGetModule(bookId)\r\n        .then(snapshot => {\r\n             return snapshot.docs\r\n            }))\r\n      }\r\n    const { data, status, isPending, isRejected, isResolved, error, run} = useCallbackStatus()\r\n    React.useEffect(() => {\r\n      run(getModule(props.moduleId))\r\n      dispatch({type: \"totals\", payload: 50000.00})\r\n    },[]);;\r\n    const book = modules.find(item => item.id === props.moduleId);\r\n    if (isPending) {\r\n        return (\r\n          <div css={{marginTop: '2em', fontSize: '2em', textAlign: 'center'}}>\r\n            <Spinner />\r\n          </div>\r\n        )\r\n      }\r\n      if (isRejected) {\r\n        return (\r\n          <div css={{color: 'red'}}>\r\n            <p>Oh no, there was an error.</p>\r\n            <pre>{error.message}</pre>\r\n          </div>\r\n        )\r\n      }\r\n      if (isResolved && !book) {\r\n        return (\r\n          <div css={{color: 'red'}}>\r\n            <p>Hmmm... Something went wrong. Please try another module.</p>\r\n          </div>\r\n        )\r\n      }\r\n    const {title, author, coverImageUrl, publisher, synopsis} = book;\r\n    return ( \r\n        <div className={classes.root}>\r\n            <Grid container spacing={6} className={classes.grid}>\r\n                <Grid container spacing={6} style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'space-evenly',\r\n                    }} className={classes.grid}>\r\n                        <Grid item xs={12} sm={8} style={{marginTop: '40px'}}>\r\n                            <Typography variant=\"h6\" style={{\r\n                                margin: '20px'\r\n                            }}>\r\n                                Checkout\r\n                            </Typography>\r\n\r\n                            <FormGroup style={{\r\n                                // width: \"220px\",\r\n                                    height: \"45px\"\r\n                                }}>\r\n\r\n                                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                    <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                                        Billing Address\r\n                                    </InputLabel>\r\n                                    <Select\r\n                                    style={{height: \"35px\", fontSize: '14px'}}\r\n                                    label=\"Billing Address\"\r\n                                    labelId=\"demo-simple-select-outlined-label\"\r\n                                    inputProps={{\r\n                                        name: \"Billing Address\",\r\n                                        id: \"demo-simple-select-outlined\"\r\n                                    }}\r\n                                    value={country}\r\n                                    onChange={handleChangeEvent}\r\n                                    >\r\n                                    <MenuItem value=\"\" disabled>\r\n                                        <em>Country</em>\r\n                                    </MenuItem>\r\n                                    \r\n                                    {CountryRegionData.map( (item, index) => {\r\n                                        return (\r\n                                            <MenuItem value={item[0]} key={item[0]}>\r\n                                                {item[0]}\r\n                                            </MenuItem>\r\n                                        );\r\n                                    })}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <ObjectViewCard \r\n                                leftButtonContent={\r\n                                <span>\r\n                                    <PhoneIphoneOutlined \r\n                                    // style={{color: colors.gray20}} \r\n                                    className={classes.icon}/> Mobile Money\r\n                                </span>} \r\n                                rightButtonContent={\r\n                                    <span>\r\n                                    Credit or Debit Card\r\n                                    </span>\r\n                                }/>\r\n                            </FormGroup>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} sm={4}>\r\n                            <Card css={{\r\n                                display: 'flex',\r\n                                flexDirection: \"column\",\r\n                                justifyContent: 'center',\r\n                                alignItems: 'center',\r\n                                width: \"165%\",\r\n                                [mq.small]: {\r\n                                    width: '100%'\r\n                                },\r\n                                height: 'inherint',\r\n                                // padding: \"20px 15px\"\r\n                            }}>\r\n                                <CardHeader title=\"Summary\"/>\r\n                                    <CardContent>\r\n                                        <div>\r\n                                            <Table>\r\n                                                <TableBody>\r\n                                                    <TableRow>\r\n                                                        <TableCell>Original Price: </TableCell>\r\n                                                        <TableCell>Ush. 50000.00</TableCell>\r\n                                                    </TableRow>\r\n                                                    \r\n                                                    <TableRow>\r\n                                                            <TableCell>Coupon Discounts: </TableCell>\r\n                                                            <TableCell>Ugx. 0.00 </TableCell>\r\n                                                    </TableRow>\r\n                                                </TableBody>\r\n\r\n                                                <TableFooter>\r\n                                                    <TableRow>\r\n                                                        <TableCell>Total</TableCell>\r\n                                                    <TableCell>Ugx. 50000.00 </TableCell>\r\n                                                    </TableRow>\r\n                                                </TableFooter>\r\n                                            </Table>\r\n                                        </div>\r\n\r\n                                        <Typography style={{padding: \"20px 0px\"}} variant=\"body2\">\r\n                                            <span style={{fontWeight: 'bold', marginRight: 5}}>\r\n                                                SKYLLA\r\n                                            </span> \r\n                                            is required bt law to collect applicable\r\n                                            taxes for purcharses made in some tax juridications\r\n                                        </Typography>\r\n                                        <Typography variant=\"subtitle2\">\r\n                                            By completing your purcharse you have agreed to these \r\n                                            <a href=\"#\">\r\n                                                Terms and Conditions\r\n                                            </a>\r\n                                        </Typography>\r\n                                        <div>\r\n                                            <FormGroup style={{paddingTop: \"20px\"}}>\r\n                                                <Button style={{backgroundColor: '#FF0000'}}\r\n                                                    variant=\"contained\"\r\n                                                    color=\"primary\"\r\n                                                    type=\"submit\"\r\n                                                    onClick={handleCheckout}\r\n                                                    >\r\n                                                        Complete Payment\r\n                                                </Button>\r\n                                            </FormGroup>\r\n                                        </div>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12}>\r\n                            <div>\r\n                                <div\r\n                                    css={{\r\n                                    display: 'grid',\r\n                                    gridTemplateColumns: '1fr 2fr',\r\n                                    gridGap: '2em',\r\n                                    marginBottom: '1em',\r\n                                    [mq.small]: {\r\n                                        display: 'flex',\r\n                                        flexDirection: 'column',\r\n                                    },\r\n                                    }}\r\n                                >\r\n                                <img\r\n                                    src={coverImageUrl}\r\n                                    alt={`${title} book cover`}\r\n                                    css={{\r\n                                        width: '100%',\r\n                                        maxWidth: 200,\r\n                                    }}\r\n                                />\r\n                            <div>\r\n\r\n                            <div css={{display: 'flex', position: 'relative'}}>\r\n                                <div css={{flex: 1, justifyContent: 'space-between'}}>\r\n                                    <h1>{title}</h1>\r\n                                    <div>\r\n                                        <i>{author}</i>\r\n                                        <span css={{marginRight: 6, marginLeft: 6}}>|</span>\r\n                                        <i>{publisher}</i>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <br />\r\n                            <p>\r\n                                {synopsis}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Grid>\r\n                    \r\n            </Grid>\r\n            \r\n            <Footer/>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default withFirebase(Checkout);","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\screens\\interviews.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\screens\\finalAsessessment.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\screens\\addAnnounce.js",["436"],"import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport FirebaseContext from 'firebase';\r\nimport { FormGroup } from '../../../components';\r\nimport TextFieldMui from \"../../components/textField\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ButtonMui from \"../../components/button\";\r\n\r\nconst INITIAL_VALUES = {\r\n    author : '',\r\n    content : '',\r\n    date: ''\r\n}\r\n\r\nconst Announcements = () => {\r\n\r\n    const [values , setValues] = React.useState(INITIAL_VALUES)\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n      };\r\n\r\n    const isInvalid = values.author === '' || values.content === ''\r\n\r\n    const submitHandler = (event) =>{\r\n        event.preventDefault()\r\n\r\n        FirebaseContext.firestore().collection('users/admin/dashboard/anouncement/anouncement').add({\r\n            Author : values.author,\r\n            Content : values.content,\r\n            uid : FirebaseContext.auth().currentUser.uid,\r\n            createdAt : new Date().toISOString(),\r\n            Date: new Date().getDay()\r\n        }).then(function DocId(docRef) {\r\n            let x = docRef.id\r\n            return docRef.id;\r\n        })\r\n        .catch(error => {\r\n            setValues(error);\r\n        })\r\n        setValues(INITIAL_VALUES)\r\n    }\r\n\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n       <div >\r\n            <CssBaseline />\r\n            <div style={{\r\n                margin:'80px auto auto auto',\r\n                }}>\r\n                <h5\r\n                    css={{\r\n                        fontSize: '16px',\r\n                        textTransform: 'capitalize',\r\n                        color: '#000000',\r\n                        paddingBottom: '30px',\r\n                }}>Create Announcement</h5>\r\n\r\n                <form  onSubmit={submitHandler} style={{\r\n                    width: '100%', // Fix IE 11 issue.\r\n                    marginTop:'50px',\r\n                    }}>\r\n\r\n                    <FormGroup>\r\n                        <TextFieldMui\r\n                            required\r\n                            variant='outlined'\r\n                            style={{ margin:'0 0 20px 0'}}\r\n                            label='Author'\r\n                            fullWidth\r\n                            value={values.author}\r\n                            name='author'\r\n                            onChange={handleChange('author')}\r\n                            autoFocus\r\n                        />\r\n                    </FormGroup>\r\n\r\n                    {/* <FormGroup>\r\n                        <TextFieldMui\r\n                            required\r\n                            variant='outlined'\r\n                            style={{ margin:'0 0 20px 0'}}\r\n                            label='Date'\r\n                            fullWidth\r\n                            type='date'\r\n                            value={values.date}\r\n                            name='date'\r\n                            onChange={handleChange('date')}\r\n                            autoFocus\r\n                        />\r\n                    </FormGroup> */}\r\n\r\n                    <FormGroup css={{\r\n                        paddingTop: \"18px\"\r\n                        }}>\r\n                        <TextField\r\n                            id=\"outlined-multiline-static\"\r\n                            label=\"Content\"\r\n                            fullWidth\r\n                            autoFocus\r\n                            style={{ margin:'18px 0 20px 0'}}\r\n                            multiline\r\n                            rows={4}\r\n                            variant=\"outlined\"\r\n                            value={values.content}\r\n                            name='content'\r\n                            onChange={handleChange('content')}\r\n                        />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup css={{\r\n                        paddingTop: '18px',\r\n                    }}>\r\n                        <ButtonMui\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        disabled={isInvalid}\r\n                        text=\"Publish\"\r\n                        />\r\n                    </FormGroup>\r\n                </form>\r\n            </div>\r\n        </div>\r\n      </Container>\r\n    );\r\n}\r\n\r\nexport default Announcements;","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\screens\\createModule.js",["437"],"import React from 'react';\r\nimport 'firebase/firestore';\r\nimport app from 'firebase/app';\r\nimport { Centered, FormGroup } from '../../../components';\r\nimport TextFieldMui from \"../../components/textField\";\r\nimport ButtonMui from \"../../components/button\";\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport FirebaseContext from 'firebase'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n}));\r\n\r\nconst CreateModule = () => (\r\n    <div style={{\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        textAlign: 'left !important'\r\n    }}>\r\n        <div style={{\r\n            width: '100%',\r\n            position: 'relative',\r\n            Height: '100vh',\r\n            marginTop: 40\r\n           }}>\r\n            <Centered>\r\n                <div>\r\n                    <h5\r\n                    style={{\r\n                        fontSize: '16px',\r\n                        textTransform: 'capitalize',\r\n                        color: '#000000',\r\n                        paddingBottom: '30px',\r\n                    }}>create module (s)</h5>\r\n                    <ModuleForm />\r\n                </div>\r\n            </Centered>\r\n        </div>\r\n    </div>\r\n);\r\n\r\n// const allInputs = {imgUrl: ''}\r\n\r\nconst INITIAL_STATE = {\r\n    module: '',\r\n    description: '',\r\n    trainer: '',\r\n    content: '',\r\n    isPending: false,\r\n    error: null,\r\n};\r\n\r\n// const AuthUser = app.auth().currentUser\r\n\r\nconst ModuleForm = () => {\r\n    const [values , setValues] = React.useState(INITIAL_STATE)\r\n    const [imageAsFile, setImageAsFile] = React.useState('')\r\n    const [imageAsUrl, setImageAsUrl] = React.useState({imgUrl: ''})\r\n    const classes = useStyles();\r\n\r\n    const handleImageAsFile = (e) => {\r\n        setImageAsFile(e.target.files[0]);\r\n    } \r\n\r\n    const addModule = (event) => {\r\n        event.preventDefault();\r\n\r\n        app.firestore().settings({\r\n            timestampsInSnapshots: true\r\n          });\r\n\r\n        let storageRef  =  FirebaseContext.storage().ref()\r\n        console.log('start of upload')\r\n        if(imageAsFile === '') {\r\n            console.error(`not an image, the image file is a ${typeof(imageAsFile)}`)\r\n        }\r\n        const uploadTask = storageRef.child(`/modules/${imageAsFile.name}`).put(imageAsFile)\r\n        uploadTask.on('state_changed', \r\n        (snapShot) => {\r\n            console.log(snapShot)\r\n        }, (err) => {\r\n            console.log(err)\r\n        }, () => {\r\n            FirebaseContext.storage().ref('modules').child(imageAsFile.name).getDownloadURL()\r\n            .then(fireBaseUrl => {\r\n                FirebaseContext.firestore().collection(`modules`).add({\r\n                    description: values.description,\r\n                    content: values.content,\r\n                    imageUrl : fireBaseUrl ,\r\n                    module: values.module,\r\n                    trainer: values.trainer,\r\n                    user: app.auth().currentUser.email,\r\n                    uid: app.auth().currentUser.uid,\r\n                    modId: '',\r\n                   createdAt: new Date().toISOString(),\r\n                }).then(setImageAsUrl(prevObject => ({...prevObject, imgUrl: fireBaseUrl})))\r\n                .then(function DocId(docRef) {\r\n                    let x = docRef.id\r\n                    FirebaseContext.firestore().collection(`modules`).doc(x).update({\r\n                       modId: docRef.id,\r\n                    });\r\n                    return docRef.id;\r\n                })\r\n        \r\n                .catch(error => {\r\n                    setValues(error, values.isPending = false);\r\n                });\r\n                setImageAsFile(imageAsFile)\r\n                setValues(INITIAL_STATE);\r\n            }) \r\n        })\r\n    };\r\n    const isInvalid =\r\n        values.module === '' ||\r\n        values.description === '' ||\r\n        values.trainer === '' ||\r\n        values.content === ''\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n      };\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <form onSubmit={addModule}  style={{\r\n                width: '600px',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                alignItems: 'stretch',\r\n                }}>\r\n\r\n                <FormGroup>\r\n                    <TextFieldMui\r\n                        label=\"Name of the module\"\r\n                        variant=\"outlined\"\r\n                        type=\"text\"\r\n                        id=\"name\"\r\n                        name=\"module\"\r\n                        value={values.module}\r\n                        placeholder=\"Name of the Module\"\r\n                        onChange={handleChange('module')}\r\n                    />\r\n                </FormGroup>\r\n\r\n                <FormGroup  style={{\r\n                    paddingTop: \"18px\",\r\n                    }}>\r\n                    <TextFieldMui\r\n                        label=\"Description\"\r\n                        variant=\"outlined\"\r\n                        type=\"text\"\r\n                        id=\"desc\"\r\n                        name=\"description\"\r\n                        value={values.description}\r\n                        onChange={handleChange('description')}\r\n                    />\r\n                </FormGroup>\r\n\r\n                <FormGroup  style={{\r\n                    paddingTop: \"18px\",\r\n                    }}>\r\n                    <TextFieldMui\r\n                        label=\"Trainer\"\r\n                        variant=\"outlined\"\r\n                        type=\"email\"\r\n                        id=\"trainer\"\r\n                        name=\"trainer\"\r\n                        value={values.trainer}\r\n                        onChange={handleChange('trainer')}\r\n                    />\r\n                </FormGroup>\r\n\r\n                <FormGroup style={{\r\n                    paddingTop: \"18px\"\r\n                    }}>\r\n                    <TextareaAutosize  \r\n                        label=\"Content\"\r\n                        variant=\"outlined\"\r\n                        name=\"content\"\r\n                        value={values.content}\r\n                        aria-label=\"minimum height\" \r\n                        placeholder=\"Write the Content of this module\"\r\n                        rowsMin={10}\r\n                        onChange={handleChange('content')}\r\n\r\n                        style={{\r\n                            borderRadius: 5,\r\n                        }}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup style={{\r\n                    paddingTop: \"18px\"\r\n                    }}>\r\n                    <label>\r\n                        Attach an Image of the Module\r\n                    </label>\r\n                   <input\r\n                        accept=\"image/*\"\r\n                        onChange={handleImageAsFile}\r\n                        type=\"file\"\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup style={{\r\n                    paddingTop: '18px',\r\n                    }}>\r\n                    <ButtonMui\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    disabled={isInvalid}\r\n                    isPending={values.isPending}\r\n                    text=\"create module\"\r\n                    />\r\n                </FormGroup>\r\n                 {values.error && <p style={{\r\n                    paddingTop: '15px',\r\n                    fontSize: '14px',\r\n                    color: 'red',\r\n                }}>{values.error.message}</p>}\r\n            </form>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default CreateModule;","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\screens\\deleteUsers.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\screens\\deleteModule.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\screens\\profilePage.js",["438"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Typography,\r\n    Grid,\r\n    Paper,\r\n    ButtonBase,\r\n} from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport LoaderButton from \"../components/loader\";\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport FirebaseContext from 'firebase';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport TextFieldMui from \"../../components/textField\";\r\nimport 'firebase/firestore';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: 'transparent',\r\n        width: '100%',\r\n        height: 'auto',\r\n        margin: '5% 0 0 0'\r\n    },\r\n\r\n    BioData: {\r\n        padding: 20,\r\n        flexGrow: 1\r\n    },\r\n\r\n    pPic: {\r\n        width: '100%',\r\n        height: '100%',\r\n        borderRadius: '50%',\r\n    },\r\n\r\n    paper: {\r\n        padding: theme.spacing(4),\r\n        margin: 'auto auto auto 0',\r\n    },\r\n\r\n    image: {\r\n        width: 180,\r\n        height: 180,\r\n        borderRadius: 'auto',\r\n    },\r\n\r\n    input: {\r\n        display: 'none',\r\n    },\r\n\r\n    uploadButton: {\r\n        position: 'absolute',\r\n        margin: '30% 0 0 70%',\r\n        backgroundColor: '#EDEDED'\r\n    },\r\n\r\n    margin: {\r\n        margin: theme.spacing(3,7),\r\n    },\r\n\r\n    textField: {\r\n        width: '400px',\r\n        display: 'block'\r\n    },\r\n}));\r\n\r\nconst initialState = {\r\n    Oldpassword: '',\r\n    Newpassword: '',\r\n    ConfirmNewpassword: '',\r\n    showPassword: false,\r\n};\r\n\r\n\r\nexport default function ProfilePage() {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState(initialState);\r\n    const [isChanging, setIsChanging] = React.useState(false);\r\n    const [isChangingP, setIsChangingP] = React.useState(false);\r\n    const [isnotChangingP, setIsnotChangingP] = React.useState(false);\r\n    const clearState = () => {\r\n        setValues({ ...initialState });\r\n    };\r\n    // const allInputs = {imgUrl: ''}\r\n    const [imageAsFile, setImageAsFile] = React.useState('')\r\n    const [imageAsUrl, setImageAsUrl] = React.useState({imgUrl: ''})\r\n    const [currentUserDetails, setcurrentUserDetails] = React.useState({name:'', email:'', password:'', photo: ''})\r\n      \r\n\r\n    class userDetails {\r\n        constructor (name, email, password, photo ) {\r\n            this.name = name;\r\n            this.email = email;\r\n            this.password = password;\r\n            this.photo= photo;\r\n        }\r\n    }\r\n    \r\n    // Firestore data converter\r\n    var userDetailsConverter = {\r\n        toFirestore: function(userDetails) {\r\n            return {\r\n                name: userDetails.name,\r\n                email: userDetails.email,\r\n                password: userDetails.password,\r\n                photo: userDetails.photo\r\n            }\r\n        },\r\n        fromFirestore: function(snapshot, options){\r\n            const data = snapshot.data(options);\r\n            const det1 = new userDetails(data.name, data.email, data.password, data.photo);\r\n            return det1\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        let user1 = FirebaseContext.auth().currentUser; \r\n        let db = FirebaseContext.firestore().collection(\"users/admin/users\");\r\n        let query = db.where('uid', '==', user1.uid);\r\n\r\n        query.withConverter(userDetailsConverter).get()\r\n        .then(snapshot => {\r\n            if (snapshot.empty) {\r\n            console.log('No matching documents.');\r\n            return;\r\n            }  \r\n\r\n            snapshot.forEach(doc => {\r\n                var x = doc.data();\r\n                setcurrentUserDetails(x)\r\n            // console.log(doc.id, '=>', x);\r\n            ;\r\n            })\r\n        })\r\n        .catch(err => {\r\n            console.log('Error getting documents', err);\r\n        });\r\n    }, [userDetailsConverter])\r\n\r\n    //   console.log('Image as a file:' + imageAsFile)\r\n        const handleImageAsFile = (e) => {\r\n            const image = e.target.files[0]\r\n        setImageAsFile(imageFile => (image))\r\n        }\r\n\r\n        const handleFireBaseUpload = e => {\r\n            e.preventDefault()\r\n          console.log('start of upload')\r\n          // async magic goes here...\r\n          if(imageAsFile === '') {\r\n            console.error(`not an image, the image file is a ${typeof(imageAsFile)}`)\r\n          }\r\n          let userCurrent = FirebaseContext.auth().currentUser;\r\n          const uploadTask = FirebaseContext.storage().ref('users/' + userCurrent.uid + `/${imageAsFile.name}`).put(imageAsFile)\r\n          //initiates the firebase side uploading \r\n          uploadTask.on('state_changed', \r\n          (snapShot) => {\r\n            //takes a snap shot of the process as it is happening\r\n            console.log(snapShot)\r\n          }, (err) => {\r\n            //catches the errors\r\n            console.log(err)\r\n          }, () => {\r\n            // gets the functions from storage refences the image storage in firebase by the children\r\n            // gets the download url then sets the image from firebase as the value for the imgUrl key:\r\n            FirebaseContext.auth().onAuthStateChanged(user => {\r\n                if(user) {\r\n                    FirebaseContext.storage().ref('users/' + userCurrent.uid + `/${imageAsFile.name}`).getDownloadURL()\r\n                    .then(fireBaseUrl => {\r\n                    setImageAsUrl(prevObject => ({...prevObject, imgUrl: fireBaseUrl}))\r\n                    console.log(imageAsUrl)\r\n                    let db = FirebaseContext.firestore().collection(\"users/admin/users\");\r\n                    db.doc(userCurrent.uid).update({\r\n                        photo: fireBaseUrl\r\n                      });\r\n                      \r\n                    })\r\n                    setIsChanging(true);\r\n                }\r\n            })\r\n          })\r\n            // alert('Image updated successfully! Please refresh page')\r\n          }\r\n      \r\n        function validateForm() {\r\n            return (\r\n            values.Oldpassword.length > 5 &&     \r\n            //more validation checks needed for the old Password\r\n            values.Newpassword.length > 5 &&\r\n            values.Newpassword === values.ConfirmNewpassword\r\n            );\r\n        }\r\n        \r\n\r\n        async function handleChangeClick(event) {\r\n            event.preventDefault();\r\n            const user = FirebaseContext.auth().currentUser;\r\n            let db = FirebaseContext.firestore().collection(\"users/admin/users\");\r\n            if(values.Oldpassword===currentUserDetails.password){\r\n                db.doc(user.uid).update({\r\n                    password: values.Newpassword\r\n                });\r\n                // Get auth credentials from the user for re-authentication. The example below shows\r\n                // email and password credentials but there are multiple possible providers,\r\n                // such as GoogleAuthProvider or FacebookAuthProvider.\r\n                const cred = FirebaseContext.auth.EmailAuthProvider.credential(\r\n                    user.email, \r\n                    currentUserDetails.password\r\n                );\r\n                FirebaseContext.auth().currentUser.reauthenticateWithCredential(cred)\r\n                .then(() => {\r\n                    // User successfully reauthenticated.\r\n                    const newPass = values.Newpassword;\r\n                    console.log('Password updated successfully!');\r\n                    setIsChangingP(true)\r\n                    return FirebaseContext.auth().currentUser.updatePassword(newPass);\r\n                })\r\n                .catch((error) => { \r\n                    console.log(error); \r\n                });\r\n                \r\n                // alert('Password changed successfully!');\r\n                setIsChangingP(true);\r\n                clearState()\r\n                // setIsChangingP(false);\r\n\r\n            }else{\r\n                // alert('Oops, please check Old Password!');\r\n                setIsnotChangingP(true);\r\n            }\r\n        }\r\n    \r\n      const handleChange = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n      };\r\n\r\n      const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }    \r\n            setIsChangingP(false);\r\n      };\r\n\r\n      const closeUpload = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n            setIsChanging(false);\r\n      };\r\n\r\n      const handleCloseNot = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n            setIsnotChangingP(false);\r\n      };\r\n\r\n  return (\r\n    <Paper elevation={0} className={classes.root}>\r\n        <div className={classes.paper}>\r\n            <Grid alignItems='center' justify=\"center\" container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <ButtonBase className={classes.image}>\r\n                        <form onSubmit={handleFireBaseUpload}>\r\n                            <input \r\n                                accept=\"image/*\" \r\n                                className={classes.input} \r\n                                onChange={handleImageAsFile} \r\n                                id=\"icon-button-file\" \r\n                                type=\"file\" \r\n                            />\r\n                            <label htmlFor=\"icon-button-file\">\r\n                                <IconButton \r\n                                    type=\"submit\" \r\n                                    className={classes.uploadButton} \r\n                                    color=\"primary\" \r\n                                    component=\"span\"\r\n                                >\r\n                                    <PhotoCamera />\r\n                                </IconButton>\r\n                                <LoaderButton\r\n                                    type=\"submit\"\r\n                                    disabled={!imageAsFile}\r\n                                    isLoading={isChanging}\r\n                                    style={{\r\n                                        margin: '200px 0 0 25%',\r\n                                        width:'50%',\r\n                                        position: 'absolute',\r\n                                    }}\r\n                                >\r\n                                    UPLOAD\r\n                                </LoaderButton>\r\n                                <Snackbar open={isChanging} autoHideDuration={6000} onClose={closeUpload}>\r\n                                    <Alert onClose={closeUpload} severity=\"success\">\r\n                                        Great! Photo updated successfully.\r\n                                    </Alert>\r\n                                </Snackbar>\r\n                            </label>\r\n                        </form>\r\n                        <img \r\n                            className={classes.pPic}  \r\n                            src={\r\n                                    imageAsUrl.imgUrl || \r\n                                    currentUserDetails.photo || \r\n                                    'https://www.pngitem.com/pimgs/m/442-4426913_avatar-icon-png-white-png-download-white-person.png'\r\n                                }\r\n                            alt=''\r\n                        />\r\n                    </ButtonBase>\r\n                    <Grid style={{\r\n                        margin: 20\r\n                    }}>\r\n                        <Grid alignItems='left' justify=\"left\" container spacing={2}>\r\n                            <Grid item>\r\n                                <Typography gutterBottom variant=\"h5\" align='left'>\r\n                                    {currentUserDetails.name}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" align='left' style={{ cursor: 'pointer', }}>\r\n                                    {currentUserDetails.email}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid alignItems='center' justify=\"center\" container spacing={2} xs={12} sm={6}>\r\n                    <form onSubmit={handleChangeClick}>\r\n                        <FormGroup className={clsx(classes.margin, classes.textField)} variant=\"outlined\">\r\n                            <Typography gutterBottom variant=\"h5\" align='left'>\r\n                                Change Password\r\n                            </Typography>\r\n                        </FormGroup>\r\n                        <FormGroup className={classes.margin}>\r\n                            <TextFieldMui\r\n                                style={{ width:'100%' }}\r\n                                id='Old-Password'\r\n                                type= 'password'\r\n                                value={values.Oldpassword}\r\n                                onChange={handleChange('Oldpassword')}\r\n                                label='Old Password'\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </FormGroup>\r\n                        \r\n                        <FormGroup className={classes.margin} variant=\"outlined\">\r\n                            <TextFieldMui\r\n                                style={{ width:'100%' }}\r\n                                id='New-Password'\r\n                                type= 'password'\r\n                                value={values.Newpassword}\r\n                                onChange={handleChange('Newpassword')}\r\n                                label='New Password'\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup className={classes.margin} variant=\"outlined\">\r\n                            <TextFieldMui\r\n                                style={{ width:'100%' }}\r\n                                id=' Cofirm-New-Password'\r\n                                type= 'password'\r\n                                value={values.ConfirmNewpassword}\r\n                                onChange={handleChange('ConfirmNewpassword')}\r\n                                label='Cofirm New Password'\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup className={classes.margin} variant=\"outlined\">\r\n                            <LoaderButton\r\n                                type=\"submit\"\r\n                                disabled={!validateForm()}\r\n                                isLoading={isChangingP}\r\n                                style={{\r\n                                    // marginLeft: '10%',\r\n                                    width:'100%'\r\n                                }}\r\n                            >\r\n                                Change\r\n                            </LoaderButton>\r\n                        </FormGroup>\r\n                        <Snackbar open={isChangingP} autoHideDuration={6000} onClose={handleClose}>\r\n                            <Alert onClose={handleClose} severity=\"success\">\r\n                                Great! Password changed successfully.\r\n                            </Alert>\r\n                        </Snackbar>\r\n                        <Snackbar open={isnotChangingP} autoHideDuration={6000} onClose={handleCloseNot}>\r\n                            <Alert onClose={handleCloseNot} severity=\"error\">\r\n                                Oops! Check Old Password.\r\n                            </Alert>\r\n                        </Snackbar>\r\n                    </form>\r\n                </Grid>\r\n            </Grid> \r\n        </div>\r\n    </Paper>\r\n  );\r\n}\r\n","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\permissions.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\screens\\addUsers.js",["439"],"/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport {jsx} from '@emotion/core'\r\n\r\nimport { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\nimport { withFirebase } from \"../../../firebase\";\r\nimport { Centered, FormGroup } from '../../../components';\r\nimport ButtonMui from \"../../components/button\";\r\nimport * as ROUTES from '../../../config/routes';\r\nimport TextFieldMui from \"../../components/textField\";\r\n\r\n\r\nconst SignUpPage = () => (\r\n    <div css={{\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n    }}>\r\n        <div css={{\r\n            width: '100%',\r\n            position: 'relative',\r\n            Height: '100vh',\r\n           }}>\r\n            {/* <Centered> */}\r\n                <div css={{marginBottom: '100px'}}>\r\n                    <h5\r\n                    css={{\r\n                        fontSize: '20px',\r\n                        textTransform: 'capitalize',\r\n                        color: '#000000',\r\n                        paddingBottom: '30px',\r\n                    }}>create Trainer's account</h5>\r\n\r\n                    <SignUpForm />\r\n                </div>\r\n            {/* </Centered> */}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n    username: '',\r\n    email: '',\r\n    photo: '',\r\n    passwordOne: '',\r\n    isPending: false,\r\n    isChecked: false,\r\n    error: null,\r\n    password: '',\r\n    showPassword: true,\r\n};\r\n\r\nclass SignUpFormBase extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            ...INITIAL_STATE ,\r\n        };\r\n    }\r\n    \r\n    // As an admin, I can create trainers on submit\r\n    onSubmit = event => {\r\n        this.setState({...this.state, isPending: true})\r\n        const { username, email, passwordOne, photo } = this.state;\r\n        const newUser = {\r\n            name: username,\r\n            email: email,\r\n            password: passwordOne,\r\n            photo:photo,\r\n        };\r\n        let usersid;\r\n        this.props.firebase\r\n        .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n        .then( (authUser) => {\r\n            usersid = authUser.user.uid;\r\n            return authUser.user.getIdToken();\r\n        }).then(token => {\r\n            const userCredentials = {\r\n                name: newUser.name,\r\n                email: newUser.email,\r\n                password: newUser.password,\r\n                photo: newUser.photo,\r\n                createdAt: new Date().toISOString(),\r\n                userId: usersid,\r\n                role: 'trainer',\r\n            };\r\n            this.props.firebase.doCreateNewTrainer(userCredentials);\r\n            this.setState({ ...INITIAL_STATE });\r\n            this.props.history.push(ROUTES.ADMIN);\r\n        })\r\n        .catch(error => {\r\n            this.setState({ error, isPending: false});\r\n            });\r\n            event.preventDefault();\r\n        };\r\n    onChange = event => {\r\n        this.setState({ \r\n            [event.target.name]: event.target.value \r\n        });\r\n    };\r\n\r\n    handleClickShowPassword = () => {\r\n        const PWD = this.state.showPassword\r\n        this.setState({\r\n            showPassword: !PWD\r\n        })\r\n    };\r\n\r\n    handleMouseDownPassword = event => {\r\n        event.preventDefault();\r\n    };\r\n\r\n\r\n    render() {\r\n        const {\r\n            username,\r\n            email,\r\n            passwordOne,\r\n            isPending,\r\n            error,\r\n            } = this.state;    \r\n            const isInvalid =\r\n            passwordOne === '' ||\r\n            email === '' ||\r\n            username === ''\r\n\r\n    return (\r\n        <form onSubmit={this.onSubmit}  css={{\r\n            width: '550px',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'stretch',\r\n        }}>\r\n\r\n            <FormGroup>\r\n                <TextFieldMui\r\n                    label=\"Full Name\"\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    id=\"username\"\r\n                    name=\"username\"\r\n                    value={username}\r\n                    placeholder=\"Name\"\r\n                    onChange={this.onChange}\r\n                />\r\n            </FormGroup>\r\n            \r\n            <FormGroup css={{\r\n                 paddingTop: \"18px\"\r\n             }}>\r\n                <TextFieldMui \r\n                    label=\"E-mail Address\"\r\n                    variant=\"outlined\"\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                />\r\n            </FormGroup>\r\n\r\n            <FormGroup css={{\r\n                    paddingTop: '18px',\r\n                }}>\r\n                    <TextFieldMui \r\n                    label=\"Temporary Password\"\r\n                    id=\"passwordOne\"\r\n                    name=\"passwordOne\"\r\n                    value={passwordOne}\r\n                    variant=\"outlined\"\r\n                    type=\"password\"\r\n                    onChange={this.onChange}\r\n                />\r\n            </FormGroup>\r\n           \r\n            <FormGroup css={{\r\n                paddingTop: '18px',\r\n            }}>\r\n                <ButtonMui\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                disabled={isInvalid}\r\n                isPending={isPending}\r\n                text=\"create account\"\r\n                />\r\n            </FormGroup>\r\n            {error && <p css={{\r\n                paddingTop: '15px',\r\n                fontSize: '14px',\r\n                color: 'red',\r\n            }}>{error.message}</p>}\r\n        </form>\r\n    );\r\n    }\r\n}\r\n\r\nconst SignUpForm = compose(\r\n    withRouter,\r\n    withFirebase,\r\n    )(SignUpFormBase);\r\n    \r\n\r\nexport { SignUpPage };\r\n","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\menu.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\views\\views.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\mob.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\components\\social.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\components\\menu.js",["440"],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\screens\\quiz\\index.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\screens\\liveClass.js",["441","442","443"],"import React from 'react';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FirebaseContext from 'firebase';\r\nimport 'firebase/firestore';\r\n  \r\nexport default function ClassLink () {\r\n    const [currentUserDetails, setcurrentUserDetails] = React.useState({name:'', email:'', password:'', photo: ''})\r\n    const [liveClassDetails, setliveClassDetails] = React.useState({module:'', session:'', link:''});\r\n\r\n    class classDetails {\r\n      constructor (module, session, link ) {\r\n          this.module = module;\r\n          this.session = session;\r\n          this.link= link;\r\n      }\r\n    }\r\n    \r\n    class userDetails {\r\n      constructor (name, email, password, photo ) {\r\n          this.name = name;\r\n          this.email = email;\r\n          this.password = password;\r\n          this.photo= photo;\r\n        }\r\n      }\r\n  \r\n        // Firestore data converter\r\n        var userDetailsConverter = {\r\n          toFirestore: function(userDetails) {\r\n          return {\r\n            name: userDetails.name,\r\n            email: userDetails.email,\r\n            password: userDetails.password,\r\n            photo: userDetails.photo\r\n          }\r\n        },\r\n        fromFirestore: function(snapshot, options){\r\n            const data = snapshot.data(options);\r\n            const det1 = new userDetails(data.name, data.email, data.password, data.photo);\r\n            return det1\r\n        }\r\n    }\r\n  \r\n    var classDetailsConverter = {\r\n      toFirestore: function(classDetails) {\r\n          return {\r\n              module: classDetails.module,\r\n              session: classDetails.session,\r\n              link: userDetails.link\r\n              }\r\n      },\r\n      fromFirestore: function(snapshot, options){\r\n          const data = snapshot.data(options);\r\n          const det1 = new classDetails(data.module, data.session, data.link);\r\n          return det1\r\n      }\r\n  }\r\n    React.useEffect(() => {\r\n          let user = FirebaseContext.auth().currentUser;   \r\n          let db = FirebaseContext.firestore().collection('users/trainee/users');\r\n          let query = db.where('userId', '==', user.uid);\r\n          \r\n          query.withConverter(userDetailsConverter).get()\r\n          .then(snapshot => {\r\n              if (snapshot.empty) {\r\n              console.log('No matching documents.');\r\n              return;\r\n              }  \r\n  \r\n              snapshot.forEach(doc => {\r\n                  var x = doc.data();\r\n                  setcurrentUserDetails(x)\r\n              // console.log(doc.id, '=>', x);\r\n              ;\r\n              })\r\n          })\r\n          .catch(err => {\r\n              console.log('Error getting documents', err);\r\n          });\r\n    }, []);\r\n  \r\n    React.useEffect(() => {\r\n      let db = FirebaseContext.firestore().collection('users/trainer/dashboard/live_class/schedule');\r\n      let query = db.where('session', '==', 'evening');\r\n      \r\n      query.withConverter(classDetailsConverter).get()\r\n      .then(snapshot => {\r\n          if (snapshot.empty) {\r\n          console.log('No matching documents.');\r\n          return;\r\n          }  \r\n  \r\n          snapshot.forEach(doc => {\r\n              var x = doc.data();\r\n              setliveClassDetails(x)\r\n          // console.log(doc.id, '=>', x);\r\n          ;\r\n          })\r\n      })\r\n      .catch(err => {\r\n          console.log('Error getting documents', err);\r\n      });\r\n    }, [classDetailsConverter]);\r\n\r\n\r\n  return (\r\n    <div style={{textAlign: 'center'}}>\r\n      <a href={liveClassDetails.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n        <MenuItem style={{color: 'white'}}>\r\n          <img \r\n          src=\"https://cdn3.iconfinder.com/data/icons/UltimateGnome/128x128/apps/gnome-session-switch.png\" \r\n          alt=\"\" \r\n          style={{ marginRight: '10px', width: '15%'}}\r\n          /> Join Live Class\r\n        </MenuItem>\r\n      </a>\r\n    </div>\r\n  );\r\n}","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\mob.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\screens\\finalAssess\\finalAsses.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\components\\views\\views.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\screens\\profilePage.js",["444"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Typography,\r\n    Grid,\r\n    Paper,\r\n    ButtonBase,\r\n} from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport LoaderButton from \"../components/loader\";\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport FirebaseContext from 'firebase';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport TextFieldMui from \"../../components/textField\";\r\nimport 'firebase/firestore';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: 'transparent',\r\n        width: '100%',\r\n        height: 'auto',\r\n        margin: '5% 0 0 0'\r\n    },\r\n\r\n    BioData: {\r\n        padding: 20,\r\n        flexGrow: 1\r\n    },\r\n\r\n    pPic: {\r\n        width: '100%',\r\n        height: '100%',\r\n        borderRadius: '50%',\r\n    },\r\n\r\n    paper: {\r\n        padding: theme.spacing(4),\r\n        margin: 'auto auto auto 0',\r\n    },\r\n\r\n    image: {\r\n        width: 180,\r\n        height: 180,\r\n        borderRadius: 'auto',\r\n    },\r\n\r\n    input: {\r\n        display: 'none',\r\n    },\r\n\r\n    uploadButton: {\r\n        position: 'absolute',\r\n        margin: '30% 0 0 70%',\r\n        backgroundColor: '#EDEDED'\r\n    },\r\n\r\n    margin: {\r\n        margin: theme.spacing(3,7),\r\n    },\r\n\r\n    textField: {\r\n        width: '400px',\r\n        display: 'block'\r\n    },\r\n}));\r\n\r\nconst initialState = {\r\n    Oldpassword: '',\r\n    Newpassword: '',\r\n    ConfirmNewpassword: '',\r\n    showPassword: false,\r\n};\r\n\r\n\r\nexport default function ProfilePage() {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState(initialState);\r\n      const [isChanging, setIsChanging] = React.useState(false);\r\n    const [isnotChangingP, setIsnotChangingP] = React.useState(false);\r\n    const [isChangingP, setIsChangingP] = React.useState(false);\r\n        // const allInputs = {imgUrl: ''}\r\n        const [imageAsFile, setImageAsFile] = React.useState('')\r\n        const [imageAsUrl, setImageAsUrl] = React.useState({imgUrl: ''})\r\n      const [currentUserDetails, setcurrentUserDetails] = React.useState({name:'', email:'', password:'', photo: ''})\r\n      const clearState = () => {\r\n        setValues({ ...initialState });\r\n      };\r\n\r\n    //   console.log(imageAsFile)\r\n        const handleImageAsFile = (e) => {\r\n            const image = e.target.files[0]\r\n        setImageAsFile(imageFile => (image))\r\n        }\r\n\r\n        const handleFireBaseUpload = e => {\r\n            e.preventDefault()\r\n          console.log('start of upload')\r\n          // async magic goes here...\r\n          if(imageAsFile === '') {\r\n            console.error(`not an image, the image file is a ${typeof(imageAsFile)}`)\r\n          }\r\n          let userCurrent = FirebaseContext.auth().currentUser;\r\n          const uploadTask = FirebaseContext.storage().ref('users/' + userCurrent.uid + `/${imageAsFile.name}`).put(imageAsFile)\r\n          //initiates the firebase side uploading \r\n          uploadTask.on('state_changed', \r\n          (snapShot) => {\r\n            //takes a snap shot of the process as it is happening\r\n            console.log(snapShot)\r\n          }, (err) => {\r\n            //catches the errors\r\n            console.log(err)\r\n          }, () => {\r\n            // gets the functions from storage refences the image storage in firebase by the children\r\n            // gets the download url then sets the image from firebase as the value for the imgUrl key:\r\n            FirebaseContext.auth().onAuthStateChanged(user => {\r\n                if(user) {\r\n                    FirebaseContext.storage().ref('users/' + userCurrent.uid + `/${imageAsFile.name}`).getDownloadURL()\r\n                    .then(fireBaseUrl => {\r\n                    setImageAsUrl(prevObject => ({...prevObject, imgUrl: fireBaseUrl}))\r\n                    // console.log(fireBaseUrl)\r\n                    let db = FirebaseContext.firestore().collection(\"users/trainee/users\");\r\n                    db.doc(userCurrent.uid).update({\r\n                        photo: fireBaseUrl\r\n                      });\r\n                    })\r\n                    setIsChanging(true);\r\n                }\r\n            })\r\n          })\r\n        //   window.location.reload();\r\n          }\r\n      \r\n\r\n      class userDetails {\r\n        constructor (name, email, password, photo ) {\r\n            this.name = name;\r\n            this.email = email;\r\n            this.password = password;\r\n            this.photo= photo;\r\n        }\r\n        // toString() {\r\n        //     return this.name + ', ' + this.email + ', ' + this.password;\r\n        // }\r\n    }\r\n    \r\n    // Firestore data converter\r\n    var userDetailsConverter = {\r\n        toFirestore: function(userDetails) {\r\n            return {\r\n                name: userDetails.name,\r\n                email: userDetails.email,\r\n                password: userDetails.password,\r\n                photo: userDetails.photo\r\n                }\r\n        },\r\n        fromFirestore: function(snapshot, options){\r\n            const data = snapshot.data(options);\r\n            const det1 = new userDetails(data.name, data.email, data.password, data.photo);\r\n            return det1\r\n        }\r\n    }\r\n\r\n        function validateForm() {\r\n            return (\r\n            values.Oldpassword.length > 5 &&     //more validation checks needed for the old Password\r\n            values.Newpassword.length > 5 &&\r\n            values.Newpassword === values.ConfirmNewpassword\r\n            );\r\n        }\r\n        \r\n        React.useEffect(() => {\r\n            let user1 = FirebaseContext.auth().currentUser;\r\n            // let uID = FirebaseContext.firestore().collection(\"users\").doc(user1.uid)    \r\n            let db = FirebaseContext.firestore().collection(\"users/trainee/users\");\r\n            let query = db.where('userId', '==', user1.uid);\r\n\r\n            query.withConverter(userDetailsConverter).get()\r\n            .then(snapshot => {\r\n                if (snapshot.empty) {\r\n                console.log('No matching documents.');\r\n                return;\r\n                }  \r\n\r\n                snapshot.forEach(doc => {\r\n                    var x = doc.data();\r\n                    setcurrentUserDetails(x)\r\n                // console.log(doc.id, '=>', x);\r\n                ;\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log('Error getting documents', err);\r\n            });\r\n        }, [userDetailsConverter])\r\n\r\n        async function handleChangeClick(event) {\r\n            event.preventDefault();\r\n\r\n            const user = FirebaseContext.auth().currentUser;\r\n            let db = FirebaseContext.firestore().collection(\"users/trainee/users\");\r\n            if(values.Oldpassword===currentUserDetails.password){\r\n                db.doc(user.uid).update({\r\n                    password: values.Newpassword\r\n                    });\r\n                    // Get auth credentials from the user for re-authentication. The example below shows\r\n                    // email and password credentials but there are multiple possible providers,\r\n                    // such as GoogleAuthProvider or FacebookAuthProvider.\r\n                    const cred = FirebaseContext.auth.EmailAuthProvider.credential(\r\n                        user.email, \r\n                        currentUserDetails.password\r\n                    );\r\n                    FirebaseContext.auth().currentUser.reauthenticateWithCredential(cred)\r\n                    .then(() => {\r\n                    // User successfully reauthenticated.\r\n                    const newPass = values.Newpassword;\r\n                    console.log('Password updated successfully!');\r\n                    setIsChangingP(true)\r\n                    return FirebaseContext.auth().currentUser.updatePassword(newPass);\r\n                    \r\n                    \r\n                    })\r\n                    .catch((error) => { \r\n                        console.log(error); \r\n                    });\r\n                    \r\n                    // alert('Password changed successfully!');\r\n                    setIsChangingP(true);\r\n                    clearState()\r\n            }else{\r\n                // alert('Oops, please check Old Password!')\r\n                setIsnotChangingP(true);\r\n            }\r\n        }\r\n\r\n\r\n        const handleChange = (prop) => (event) => {\r\n            setValues({ ...values, [prop]: event.target.value });\r\n          };\r\n    \r\n          const handleClose = (event, reason) => {\r\n            if (reason === 'clickaway') {\r\n              return;\r\n            }    \r\n                setIsChangingP(false);\r\n          };\r\n    \r\n          const closeUpload = (event, reason) => {\r\n            if (reason === 'clickaway') {\r\n              return;\r\n            }\r\n                setIsChanging(false);\r\n          };\r\n    \r\n          const handleCloseNot = (event, reason) => {\r\n            if (reason === 'clickaway') {\r\n              return;\r\n            }\r\n                setIsnotChangingP(false);\r\n          };\r\n\r\n  return (\r\n    <Paper elevation={0} className={classes.root}>\r\n        <div className={classes.paper}>\r\n            <Grid alignItems='center' justify=\"center\" container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                    <ButtonBase className={classes.image}>\r\n                        <form onSubmit={handleFireBaseUpload}>\r\n                            <input \r\n                                accept=\"image/*\" \r\n                                className={classes.input} \r\n                                onChange={handleImageAsFile} \r\n                                id=\"icon-button-file\" \r\n                                type=\"file\" \r\n                            />\r\n                            <label htmlFor=\"icon-button-file\">\r\n                                <IconButton \r\n                                    type=\"submit\" \r\n                                    className={classes.uploadButton} \r\n                                    color=\"primary\" \r\n                                    component=\"span\"\r\n                                >\r\n                                    <PhotoCamera />\r\n                                </IconButton>\r\n                                <LoaderButton\r\n                                    type=\"submit\"\r\n                                    disabled={!imageAsFile}\r\n                                    isLoading={isChanging}\r\n                                    style={{\r\n                                        margin: '200px 0 0 25%',\r\n                                        width:'50%',\r\n                                        position: 'absolute',\r\n                                    }}\r\n                                >\r\n                                    UPLOAD\r\n                                </LoaderButton>\r\n                                <Snackbar open={isChanging} autoHideDuration={6000} onClose={closeUpload}>\r\n                                    <Alert onClose={closeUpload} severity=\"success\">\r\n                                        Great! Photo updated successfully.\r\n                                    </Alert>\r\n                                </Snackbar>\r\n                            </label>\r\n                        </form>\r\n                        <img \r\n                            className={classes.pPic}  \r\n                            src={\r\n                                    imageAsUrl.imgUrl || \r\n                                    currentUserDetails.photo || \r\n                                    'https://www.pngitem.com/pimgs/m/442-4426913_avatar-icon-png-white-png-download-white-person.png'\r\n                                }\r\n                            alt=''\r\n                        />\r\n                    </ButtonBase>\r\n                    <Grid style={{\r\n                        margin: 20\r\n                    }}>\r\n                       <Grid alignItems='left' justify=\"left\" container spacing={2}>\r\n                            <Grid item>\r\n                                <Typography gutterBottom variant=\"h5\" align='left'>\r\n                                    {currentUserDetails.name}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" align='left' style={{ cursor: 'pointer', }}>\r\n                                    {currentUserDetails.email}\r\n                                </Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid alignItems='center' justify=\"center\" container spacing={2} xs={12} sm={6}>\r\n                    <form onSubmit={handleChangeClick}>\r\n                        <FormGroup className={clsx(classes.margin, classes.textField)} variant=\"outlined\">\r\n                            <Typography gutterBottom variant=\"h5\" align='left'>\r\n                                Change Password\r\n                            </Typography>\r\n                        </FormGroup>\r\n                        <FormGroup className={classes.margin}>\r\n                            <TextFieldMui\r\n                                style={{ width:'100%' }}\r\n                                id='Old-Password'\r\n                                type= 'password'\r\n                                value={values.Oldpassword}\r\n                                onChange={handleChange('Oldpassword')}\r\n                                label='Old Password'\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </FormGroup>\r\n                        \r\n                        <FormGroup className={classes.margin} variant=\"outlined\">\r\n                            <TextFieldMui\r\n                                style={{ width:'100%' }}\r\n                                id='New-Password'\r\n                                type= 'password'\r\n                                value={values.Newpassword}\r\n                                onChange={handleChange('Newpassword')}\r\n                                label='New Password'\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup className={classes.margin} variant=\"outlined\">\r\n                            <TextFieldMui\r\n                                style={{ width:'100%' }}\r\n                                id=' Cofirm-New-Password'\r\n                                type= 'password'\r\n                                value={values.ConfirmNewpassword}\r\n                                onChange={handleChange('ConfirmNewpassword')}\r\n                                label='Cofirm New Password'\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup className={classes.margin} variant=\"outlined\">\r\n                            <LoaderButton\r\n                                type=\"submit\"\r\n                                disabled={!validateForm()}\r\n                                isLoading={isChangingP}\r\n                                style={{\r\n                                    // marginLeft: '10%',\r\n                                    width:'100%'\r\n                                }}\r\n                            >\r\n                                Change\r\n                            </LoaderButton>\r\n                        </FormGroup>\r\n                        <Snackbar open={isChangingP} autoHideDuration={6000} onClose={handleClose}>\r\n                            <Alert onClose={handleClose} severity=\"success\">\r\n                                Great! Password changed successfully.\r\n                            </Alert>\r\n                        </Snackbar>\r\n                        <Snackbar open={isnotChangingP} autoHideDuration={6000} onClose={handleCloseNot}>\r\n                            <Alert onClose={handleCloseNot} severity=\"error\">\r\n                                Oops! Check Old Password.\r\n                            </Alert>\r\n                        </Snackbar>\r\n                    </form>\r\n                </Grid>\r\n            </Grid> \r\n        </div>\r\n    </Paper>\r\n  );\r\n}\r\n","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\cart\\components\\order-item-list.js",["445","446"],"/** @jsxRuntime classic */\r\n/** @jsx jsx */\r\nimport {jsx} from '@emotion/core'\r\n\r\nimport React from \"react\";\r\nimport { useOrderItemDispatch, useOrderItemState } from '../../../session/order-context'\r\nimport { withFirebase } from '../../../firebase';\r\nimport { List, ListItem } from '@material-ui/core';\r\nimport ModuleRow from './ModuleRow';\r\nimport useCallbackStatus from '../../../utils/use-callback-status';\r\nimport modules from \"./data/modules.json\";\r\nimport { Spinner } from '../../../components';\r\n\r\nfunction ListItemList(props) {\r\n    const dispatch = useOrderItemDispatch();\r\n    const getOrders = async (userId) => {\r\n        return await (props.firebase.doGetUserOrders(userId)\r\n        .then(snapshot => {\r\n          console.log(snapshot.docs);\r\n            dispatch({type: \"fetch\", payload: snapshot.docs})\r\n          return snapshot.docs;\r\n        })\r\n        )\r\n      }\r\n      const { data, isPending, run} = useCallbackStatus();\r\n      React.useEffect(() => {\r\n        run(getOrders(props.firebase.auth.currentUser.uid))\r\n      },[]);\r\n  const listItems = modules.slice(1,5) || data\r\n  dispatch({type: \"fetch\", payload: listItems})\r\n//   const filteredListItems = listItems.filter(filterListItems)\r\n    if (isPending) {\r\n        return (\r\n        \r\n            <div css={{width: '100%', \r\n                    display: 'flex', \r\n                    flexDirection: 'row', \r\n                    justifyContent: 'center'\r\n                    }}>\r\n            <Spinner />\r\n            </div>\r\n        )\r\n        } \r\n  if (!listItems.length) {\r\n    return <div css={{marginTop: '1em', fontSize: '1.2em'}}>{props.noListItems}</div>\r\n  }\r\n \r\n\r\n  return (\r\n    <div css={{marginTop: '1em'}}>\r\n      <List>\r\n        {listItems.map(listItem => (\r\n          <ListItem key={listItem.id}>\r\n            <ModuleRow book={listItem} finished={true} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withFirebase(ListItemList);\r\n","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\cart\\components\\ModuleRow.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\cart\\sandbox.js",["447"],"import SandboxApiUser from \"mtn-pay/lib/sandboxApiUser\";\r\nimport Transaction, {\r\n    TransactionTypes,\r\n    resourceUrlsMap,\r\n    transactionReceipientTypesMap,\r\n    } from 'mtn-pay/lib/transaction';\r\nimport uuidv4  from 'uuidjs';\r\n\r\n//https://ericssonbasicapi2.azure-api.net/v1_0\r\nconst baseURL = process.env.REACT_APP_BASE_URL;\r\n// delete if done\r\n//0296b709a11e4b3fb94d4fc694d6dba3\r\nconst subscriptionKey = process.env.REACT_APP_SUBSCRIPTION_KEY;\r\n\r\nconst sandboxApiUser = new SandboxApiUser({baseURL, subscriptionKey});\r\n\r\nconst getCredentials = async () => {\r\n    const response = await sandboxApiUser.initialize();\r\n    const user = await sandboxApiUser.getUser();\r\n\r\n    const apiKey = user.apiKey;\r\n    const apiUserId = user.referenceId;\r\n    return {apiKey, apiUserId};\r\n}\r\nconsole.log(getCredentials());\r\nexport const completePayment = async(partyId, amountPaid) => {\r\n    const transactionType = TransactionTypes.COLLECTION; \r\n    const receipient = {\r\n        partyIdType: 'msisdn',\r\n        partyId: partyId // The phone number of receipient of the request, not your own number\r\n    }\r\n    console.log(getCredentials());\r\n    const transactionConfig = {\r\n        amount: amountPaid, //<money amount to pay or receive>,\r\n        currency: 'UGX', // in sandbox, it is 'EUR'\r\n        externalId: uuidv4(),\r\n        payeeNote: 'A note for the payee',\r\n        receipient,\r\n        payerMessage: 'A message for the payer',\r\n        subscriptionKey: process.env.REACT_APP_SUBSCRIPTION_KEY,\r\n        targetEnvironment: process.env.REACT_APP_TARGET_ENVIRONMENT, // for sandbox, put 'sandbox'\r\n        // apiuserId: apiUserId,\r\n        // apiKey: apiKey,\r\n        timeout: 35000, // the time in milliseconds for polling status to time out; default: 35000\r\n        interval: 31000, // the interval at which status is polled in ms: defaults to 30000; never goes below 30000\r\n        baseURL: process.env.REACT_APP_BASE_URL,\r\n        authBaseURL: process.env.REACT_APP_AUTH_URL,\r\n        resourceUrl: resourceUrlsMap[transactionType],\r\n        receipientType: transactionReceipientTypesMap[transactionType],\r\n        };\r\n    \r\n    const transaction = new Transaction(transactionType, transactionConfig);\r\n\r\n    const details = await transaction.getDetails();\r\n    /*\r\n    * or you could go step by step but why!!!\r\n    * await transaction.initialize();\r\n    * await transaction.pollStatus();\r\n    * const details = await transaction.getDetails();\r\n    */\r\nconst {\r\n    amount,\r\n    currency,\r\n    externalId,\r\n    payee, // or payer if we are requesting for payment i.e. transactionType === 'collection'\r\n    status,\r\n    reason\r\n} = details;\r\nconsole.log(amount,\r\n    currency,\r\n    externalId,\r\n    payee,\r\n    status,\r\n    reason);\r\n\r\n}\r\n","D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Admin\\components\\loader.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\components\\moduleContent.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\components\\mobMenu.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\screens\\quiz\\editor.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\components\\loader.js",[],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainee\\components\\acPopup.js",["448","449"],"D:\\projects\\skylla-learning-community\\client\\src\\App\\screens\\Trainer\\components\\acPopup.js",["450","451"],{"ruleId":"452","replacedBy":"453"},{"ruleId":"454","replacedBy":"455"},{"ruleId":"456","severity":1,"message":"457","line":198,"column":10,"nodeType":"458","messageId":"459","endLine":198,"endColumn":28},{"ruleId":"456","severity":1,"message":"460","line":56,"column":24,"nodeType":"458","messageId":"459","endLine":56,"endColumn":31},{"ruleId":"456","severity":1,"message":"461","line":66,"column":10,"nodeType":"458","messageId":"459","endLine":66,"endColumn":15},{"ruleId":"456","severity":1,"message":"462","line":67,"column":10,"nodeType":"458","messageId":"459","endLine":67,"endColumn":15},{"ruleId":"463","severity":1,"message":"464","line":153,"column":9,"nodeType":"465","endLine":167,"endColumn":6},{"ruleId":"456","severity":1,"message":"466","line":5,"column":8,"nodeType":"458","messageId":"459","endLine":5,"endColumn":22},{"ruleId":"456","severity":1,"message":"467","line":50,"column":13,"nodeType":"458","messageId":"459","endLine":50,"endColumn":17},{"ruleId":"456","severity":1,"message":"468","line":50,"column":19,"nodeType":"458","messageId":"459","endLine":50,"endColumn":25},{"ruleId":"463","severity":1,"message":"469","line":53,"column":7,"nodeType":"470","endLine":53,"endColumn":9,"suggestions":"471"},{"ruleId":"472","severity":1,"message":"473","line":116,"column":111,"nodeType":"474","endLine":116,"endColumn":123},{"ruleId":"463","severity":1,"message":"475","line":61,"column":7,"nodeType":"470","endLine":61,"endColumn":9,"suggestions":"476"},{"ruleId":"463","severity":1,"message":"477","line":177,"column":7,"nodeType":"470","endLine":177,"endColumn":61,"suggestions":"478"},{"ruleId":"479","severity":1,"message":"480","line":196,"column":22,"nodeType":"481","messageId":"482","endLine":196,"endColumn":24},{"ruleId":"463","severity":1,"message":"483","line":205,"column":7,"nodeType":"470","endLine":205,"endColumn":20,"suggestions":"484"},{"ruleId":"456","severity":1,"message":"485","line":401,"column":12,"nodeType":"458","messageId":"459","endLine":401,"endColumn":22},{"ruleId":"456","severity":1,"message":"486","line":401,"column":24,"nodeType":"458","messageId":"459","endLine":401,"endColumn":37},{"ruleId":"456","severity":1,"message":"487","line":458,"column":12,"nodeType":"458","messageId":"459","endLine":458,"endColumn":19},{"ruleId":"456","severity":1,"message":"488","line":470,"column":16,"nodeType":"458","messageId":"459","endLine":470,"endColumn":27},{"ruleId":"456","severity":1,"message":"489","line":470,"column":29,"nodeType":"458","messageId":"459","endLine":470,"endColumn":43},{"ruleId":"456","severity":1,"message":"490","line":470,"column":45,"nodeType":"458","messageId":"459","endLine":470,"endColumn":55},{"ruleId":"456","severity":1,"message":"468","line":492,"column":19,"nodeType":"458","messageId":"459","endLine":492,"endColumn":25},{"ruleId":"463","severity":1,"message":"491","line":496,"column":7,"nodeType":"470","endLine":496,"endColumn":9,"suggestions":"492"},{"ruleId":"472","severity":1,"message":"473","line":633,"column":45,"nodeType":"474","endLine":633,"endColumn":57},{"ruleId":"456","severity":1,"message":"493","line":36,"column":17,"nodeType":"458","messageId":"459","endLine":36,"endColumn":18},{"ruleId":"456","severity":1,"message":"494","line":66,"column":12,"nodeType":"458","messageId":"459","endLine":66,"endColumn":22},{"ruleId":"463","severity":1,"message":"495","line":107,"column":9,"nodeType":"465","endLine":121,"endColumn":6},{"ruleId":"456","severity":1,"message":"496","line":9,"column":10,"nodeType":"458","messageId":"459","endLine":9,"endColumn":18},{"ruleId":"456","severity":1,"message":"466","line":5,"column":8,"nodeType":"458","messageId":"459","endLine":5,"endColumn":22},{"ruleId":"456","severity":1,"message":"457","line":7,"column":12,"nodeType":"458","messageId":"459","endLine":7,"endColumn":30},{"ruleId":"463","severity":1,"message":"497","line":44,"column":9,"nodeType":"465","endLine":57,"endColumn":4},{"ruleId":"463","severity":1,"message":"498","line":80,"column":8,"nodeType":"470","endLine":80,"endColumn":10,"suggestions":"499"},{"ruleId":"463","severity":1,"message":"500","line":154,"column":9,"nodeType":"465","endLine":168,"endColumn":6},{"ruleId":"456","severity":1,"message":"501","line":6,"column":32,"nodeType":"458","messageId":"459","endLine":6,"endColumn":49},{"ruleId":"463","severity":1,"message":"502","line":28,"column":9,"nodeType":"470","endLine":28,"endColumn":11,"suggestions":"503"},{"ruleId":"456","severity":1,"message":"504","line":18,"column":11,"nodeType":"458","messageId":"459","endLine":18,"endColumn":19},{"ruleId":"456","severity":1,"message":"505","line":11,"column":12,"nodeType":"458","messageId":"459","endLine":11,"endColumn":18},{"ruleId":"456","severity":1,"message":"506","line":13,"column":5,"nodeType":"458","messageId":"459","endLine":13,"endColumn":9},{"ruleId":"456","severity":1,"message":"505","line":11,"column":12,"nodeType":"458","messageId":"459","endLine":11,"endColumn":18},{"ruleId":"456","severity":1,"message":"506","line":13,"column":5,"nodeType":"458","messageId":"459","endLine":13,"endColumn":9},"no-native-reassign",["507"],"no-negated-in-lhs",["508"],"no-unused-vars","'currentUserDetails' is assigned a value but never used.","Identifier","unusedVar","'counter' is assigned a value but never used.","'count' is assigned a value but never used.","'isNew' is assigned a value but never used.","react-hooks/exhaustive-deps","The 'userDetailsConverter' object makes the dependencies of useEffect Hook (at line 200) change on every render. Move it inside the useEffect callback. Alternatively, wrap the initialization of 'userDetailsConverter' in its own useMemo() Hook.","VariableDeclarator","'AccountBoxIcon' is defined but never used.","'data' is assigned a value but never used.","'status' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'getModule', 'props.moduleId', and 'run'. Either include them or remove the dependency array.","ArrayExpression",["509"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook React.useEffect has missing dependencies: 'getModules' and 'run'. Either include them or remove the dependency array.",["510"],"React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["511"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook React.useEffect has a missing dependency: 'selectedCard'. Either include it or remove the dependency array.",["512"],"'isExpanded' is assigned a value but never used.","'setIsExpanded' is assigned a value but never used.","'loading' is assigned a value but never used.","'cardDetails' is assigned a value but never used.","'billingAddress' is assigned a value but never used.","'totalPrice' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'dispatch', 'getModule', 'props.moduleId', and 'run'. Either include them or remove the dependency array.",["513"],"'x' is assigned a value but never used.","'imageAsUrl' is assigned a value but never used.","The 'userDetailsConverter' object makes the dependencies of useEffect Hook (at line 145) change on every render. Move it inside the useEffect callback. Alternatively, wrap the initialization of 'userDetailsConverter' in its own useMemo() Hook.","'Centered' is defined but never used.","The 'classDetailsConverter' object makes the dependencies of useEffect Hook (at line 103) change on every render. Move it inside the useEffect callback. Alternatively, wrap the initialization of 'classDetailsConverter' in its own useMemo() Hook.","React Hook React.useEffect has a missing dependency: 'userDetailsConverter'. Either include it or remove the dependency array.",["514"],"The 'userDetailsConverter' object makes the dependencies of useEffect Hook (at line 201) change on every render. Move it inside the useEffect callback. Alternatively, wrap the initialization of 'userDetailsConverter' in its own useMemo() Hook.","'useOrderItemState' is defined but never used.","React Hook React.useEffect has missing dependencies: 'getOrders', 'props.firebase.auth.currentUser.uid', and 'run'. Either include them or remove the dependency array.",["515"],"'response' is assigned a value but never used.","'ROUTES' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"516","fix":"517"},{"desc":"518","fix":"519"},{"desc":"520","fix":"521"},{"desc":"522","fix":"523"},{"desc":"524","fix":"525"},{"desc":"526","fix":"527"},{"desc":"528","fix":"529"},"Update the dependencies array to be: [getModule, props.moduleId, run]",{"range":"530","text":"531"},"Update the dependencies array to be: [getModules, run]",{"range":"532","text":"533"},"Update the dependencies array to be: [name, cardName, cardNo, expiryYear, expiryMonth, CCV, dispatch]",{"range":"534","text":"535"},"Update the dependencies array to be: [value, name, selectedCard]",{"range":"536","text":"537"},"Update the dependencies array to be: [dispatch, getModule, props.moduleId, run]",{"range":"538","text":"539"},"Update the dependencies array to be: [userDetailsConverter]",{"range":"540","text":"541"},"Update the dependencies array to be: [getOrders, props.firebase.auth.currentUser.uid, run]",{"range":"542","text":"543"},[1839,1841],"[getModule, props.moduleId, run]",[1773,1775],"[getModules, run]",[6083,6137],"[name, cardName, cardNo, expiryYear, expiryMonth, CCV, dispatch]",[6901,6914],"[value, name, selectedCard]",[17195,17197],"[dispatch, getModule, props.moduleId, run]",[2678,2680],"[userDetailsConverter]",[1044,1046],"[getOrders, props.firebase.auth.currentUser.uid, run]"]